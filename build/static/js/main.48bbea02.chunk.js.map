{"version":3,"sources":["assets/imgs/default-empresa.png","assets/imgs/default-candidato.png","api/apisettings.ts","services/auth.ts","utils/enums.ts","components/sidebar/Index.tsx","components/card/index.tsx","models/empresa.ts","api/empresa.ts","models/vaga.ts","api/matching.ts","api/vagas.ts","api/candidatura.ts","models/notificacao.ts","api/notificacoes.ts","components/hamburguer/index.tsx","services/graph.ts","services/date.ts","components/loader/index.tsx","pages/loading/index.tsx","pages/a-dashboard/index.tsx","api/habilidades.ts","components/pagination/index.tsx","pages/404/index.tsx","pages/empresa-resumo/index.tsx","api/candidatos.ts","components/button/index.tsx","components/dialog/index.tsx","models/candidato.ts","pages/a-gerenciamento-candidatos/index.tsx","components/select/index.tsx","pages/vagas/index.tsx","components/input/index.tsx","api/beneficios.ts","components/buttonForm/index.tsx","pages/e-cadastrar-vagas/index.tsx","pages/e-suas-vagas/index.tsx","pages/home/index.tsx","pages/login/index.tsx","pages/c-historico-candidaturas/index.tsx","pages/a-gerenciamento-empresas/index.tsx","pages/e-dashboard/index.tsx","pages/vaga/index.tsx","pages/cadastro-empresa-passo1/index.tsx","pages/cadastro-candidato-passo1/index.tsx","pages/cadastro-empresa-passo2/index.tsx","pages/cadastro-candidato-passo2/index.tsx","pages/cadastro/index.tsx","pages/e-vaga-candidaturas/index.tsx","components/textArea/index.tsx","pages/e-editar-perfil/index.tsx","pages/c-editar-perfil/index.tsx","components/authRoute/index.tsx","routers.tsx","App.tsx","index.tsx","assets/imgs/logo-senai-principal.png","assets/imgs/logo-dark.png","assets/imgs/erro.jpg","assets/imgs/image-13@1x.jpg"],"names":["module","exports","API_URL","TOKEN_KEY","handleErrors","response","ok","Error","statusText","TipoUsuario","StatusUsuario","usuarioAutenticado","localStorage","getItem","Jwt","token","base64","split","replace","JSON","parse","window","atob","Sidebar","props","history","useHistory","logout","removeItem","push","className","style","width","to","id","src","Logo","alt","undefined","Role","ADMINISTRADOR","onClick","EMPRESA","CANDIDATO","menu","LogoSenai","Card","children","Empresa","idUsuario","idStatusUsuario","idEndereco","foto","cnae","cnpj","razaoSocial","nomeFantasia","emailPublico","descricao","telefoneEmpresa","celularEmpresa","visualizacao","idEnderecoNavigation","idStatusUsuarioNavigation","idUsuarioNavigation","vaga","buscarPorId","fetch","method","headers","authorization","then","json","catch","err","console","error","salvar","empresa","body","stringify","listar","listarPorStatus","data","filter","uploadFoto","file","img","FormData","append","toString","mudarStatus","idStatus","somaVisualizacao","Vaga","idVaga","idEmpresa","titulo","salario","qualificacao","dataCriado","dataExpiracao","cargaHoraria","idEmpresaNavigation","beneficioVaga","candidatura","habilidadeVaga","matching","atualizar","MatchingApi","listarPorEmpresa","listarPorFiltro","minSalario","idHabilidade","filtro","deletar","visualizar","visualizado","Notificacao","idNotificacao","dataNotificacao","mensagem","addNotificacao","notificacao","Hamburguer","type","htmlFor","MESES","graphCandidatura","qtdeMeses","date","Date","mesAtual","getMonth","anoAtual","getFullYear","chartCandidatura","CandidaturaApi","candidaturas","i","candidaturasFiltradas","mes","ano","length","reverse","graphEmpresa","chartEmpresas","EmpresaApi","empresas","empresasFiltradas","dataCadastrado","toDate","dia","getDate","mesFormatado","toHour","min","getMinutes","getHours","Loader","LoadingPage","ADashboard","useState","qtdVagas","setQtdVagas","qtdEmpresas","setQtdEmpresas","chartEmpresasMeses","setChartEmpresasMeses","chartEmpresasCadastros","setChartEmpresasCadastros","qtdCandidaturas","setQtdCandidaturas","chartCandidaturasMeses","setChartCandidaturasMeses","chartCandidaturasCadastros","setChartCandidaturasCadastros","Notificacoes","setNotificacoes","isLoading","setIsLoading","useEffect","Promise","all","VagaApi","joinedMeses","joinedCadastros","map","chart","NotificacaoApi","dataEmpresa","labels","datasets","label","fill","backgroundColor","borderColor","dataCandidatura","Line","options","scales","yAxes","ticks","suggestedMin","suggestedMax","item","key","habilidade","Pagination","pageNumbers","Math","ceil","totalObjects","objectsPerPage","number","scrollTo","paginate","Erro","Foto","AEmpresaGeral","match","params","vagas","setVagas","setEmpresa","habilidades","setHabilidades","currentPage","setCurrentPage","vagasPorPagina","indexOfLastPost","indexOfFirstPost","vagasAtuais","slice","HabilidadeApi","onError","e","currentTarget","ImgEmpresaDefault","email","localCompleto","hv","find","h","nomeHabilidade","pageNumber","candidato","Button","ghost","Dialog","title","isOpen","open","setOpen","Modal","setAppElement","onRequestClose","content","top","left","right","bottom","marginRight","transform","maxHeight","overflowY","position","overlayClassName","shouldCloseOnOverlayClick","Candidato","nome","sobrenome","curso","formacaoAcademica","matricula","cpf","rg","telefoneCandidato","celularCandidato","dataNascimento","habilidadeCandidato","AListaCandidato","candidatos","setCandidatos","setCandidato","visualizarPerfil","setVisualizarPerfil","candidatosPorPagina","candidatosAtuais","alert","useAlert","closePerfil","CandidatoApi","onAfterClose","ImgCandidatoDefault","ATIVO","BLOQUEADO","success","name","Select","rest","VagasRecomendadas","setEmpresas","matches","setMatches","setFiltro","filtrarVagas","jti","sort","m1","m2","porcentagem","value","onChange","target","placeholder","parseInt","selected","height","round","idVagaNavigation","distancia","Input","hideLabel","beneficio","ButtonForm","ECadastrarVagas","vagaForm","setVagaForm","beneficios","setBeneficios","idBeneficio","setIdBeneficio","setIdHabilidade","BeneficioApi","onSubmit","event","preventDefault","vagaJson","toDateString","onClose","mask","required","cep","nomeBeneficio","disabled","beneficiosAdd","addBeneficio","beneficiosDel","b","removeBeneficio","renderBeneficios","habilidadesAdd","addHabilidade","habilidadesDel","removeHabilidade","renderHabilidades","ESuasVagas","pathname","state","Home","Jti","renderNav","Imagem","Login","setEmail","senha","setSenha","login","dados","setItem","jwt","parseJwt","Senai","CHistoricoCandidaturas","candidaturasPorPagina","candidaturasAtuais","setCandidaturasAtuais","idCandidatura","AGerenciarEmpresas","empresasPendentes","setEmpresasPendentes","empresaConfirmacao","setEmpresaConfirmacao","aceitarIsOpen","setAceitarIsOpen","recusarIsOpen","setRecusarIsOpen","empresasPorPagina","empresasAtuais","closeAceitar","closeRecusar","PENDENTE","openAceitar","openRecusar","EDashboard","qtde","forEach","concat","graphCandidaturaEmpresa","VerVaga","setVaga","log","idHabilidadeNavigation","idBeneficioNavigation","c","idCandidato","candidaturaManipulavel","CadastroEmpresa","senhaConfirmacao","setSenhaConfirmacao","cadastro","CadastroCandidato","CadastroDadosEmpresa","location","useLocation","CadastroDadosCandidato","Cadastro","pagina","setPagina","EVisualizarVaga","candidatoDialog","setCandidatoDialog","MatchesApi","CandidatosApi","CandidaturasApi","TextArea","EditarPerfilEmpresa","empresaForm","setEmpresaForm","imgBuffer","setImgBuffer","imgUrl","setImgUrl","setEditando","URL","createObjectURL","reset","files","accept","rows","cols","defaultValue","EditarPerfilCandidato","candidatoForm","setCandidatoForm","perfilEditado","hc","Object","assign","idHabilidadeCandidato","AuthRoute","Component","path","exact","requiredRole","roleValido","component","Routers","timeout","positions","BOTTOM_CENTER","App","template","AlertTemplate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48bbea02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default-empresa.3ab0565c.png\";","module.exports = __webpack_public_path__ + \"static/media/default-candidato.977430b6.png\";","export const API_URL: string = \"http://conexaovagasapi.ddns.net:52525/api/\"\r\nexport const TOKEN_KEY: string = \"token-conexao-vagas\"\r\n\r\nexport function handleErrors(response: Response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import { TOKEN_KEY } from \"../api/apisettings\";\r\n\r\nexport const usuarioAutenticado = () => localStorage.getItem(TOKEN_KEY) !== null;\r\n\r\nexport const Jwt = () => {\r\n\r\n    var token = localStorage.getItem(TOKEN_KEY);\r\n\r\n    if (token) {\r\n        var base64Url = token.split('.')[1];\r\n        var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n        return JSON.parse(window.atob(base64));\r\n    }\r\n}\r\n\r\nexport const parseJwt = (token: any) => {\r\n\r\n    if (token) {\r\n        var base64Url = token.split('.')[1];\r\n        var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n        return JSON.parse(window.atob(base64));\r\n    }\r\n}\r\n","export enum TipoUsuario {\r\n    ADMINISTRADOR = 1,\r\n    EMPRESA = 2,\r\n    CANDIDATO = 3\r\n}\r\n\r\nexport enum StatusUsuario {\r\n    PENDENTE = 1,\r\n    ATIVO = 2,\r\n    BLOQUEADO = 3,\r\n    RECUSADO = 4\r\n}","/* eslint-disable eqeqeq */\r\nimport React from 'react';\r\nimport Logo from '../../assets/imgs/logo-dark.png';\r\nimport LogoSenai from '../../assets/imgs/logo-senai-principal.png';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { TOKEN_KEY } from '../../api/apisettings';\r\nimport { Jwt } from '../../services/auth';\r\nimport { TipoUsuario } from '../../utils/enums';\r\nimport './index.css';\r\nimport '../../assets/styles/global.css';\r\n\r\nfunction Sidebar(props: any) {\r\n    let history = useHistory(); //Usando o método Histoy\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem(TOKEN_KEY);\r\n        history.push('/');\r\n    }\r\n\r\n    const menu = () => {\r\n        const token = localStorage.getItem(TOKEN_KEY);\r\n\r\n        if (token === undefined || token === null) {\r\n            return (\r\n                <div className=\"mt-12\">\r\n                    <Link to=\"/login\"><div className=\"rela-block side-button login\"></div></Link>\r\n                    <Link to=\"/cadastro\"><div className=\"rela-block side-button cadastro\"></div></Link>\r\n                </div>\r\n            )\r\n        } else {\r\n            if (Jwt().Role == TipoUsuario.ADMINISTRADOR) {\r\n                return (\r\n                    <div className=\"mt-12\">\r\n                        <Link to=\"/Administrador/dashboard\"><div className=\"rela-block side-button a-dashboard\"></div></Link>\r\n                        <Link to=\"/vagas\"><div className=\"rela-block side-button vagas\"></div></Link>\r\n                        <Link to=\"/Administrador/gerenciamento-candidatos\"><div className=\"rela-block side-button a-lista-candidato\"></div></Link>\r\n                        <Link to=\"/Administrador/gerenciamento-empresas\"><div className=\"rela-block side-button a-gerenciamento-empresas\"></div></Link>\r\n                        <div className=\"rela-block side-button logout\"\r\n                            onClick={() => logout()}></div>\r\n                    </div>\r\n                )\r\n            } else if (Jwt().Role == TipoUsuario.EMPRESA) {\r\n                return (\r\n                    <div className=\"mt-12\">\r\n                        <Link to=\"/Empresa/dashboard\"><div className=\"rela-block side-button e-dashboard\"></div></Link>\r\n                        <Link to=\"/vagas\"><div className=\"rela-block side-button vagas\"></div></Link>\r\n                        <Link to=\"/Empresa/suas-vagas\"><div className=\"rela-block side-button e-suas-vagas\"></div></Link>\r\n                        <Link to=\"/Empresa/cadastrar-vagas\"><div className=\"rela-block side-button e-cadastrar-vagas\"></div></Link>\r\n                        <Link to=\"/Empresa/editar-perfil\"><div className=\"rela-block side-button e-editar-perfil\"></div></Link>\r\n                        <div className=\"rela-block side-button logout\"\r\n                            onClick={() => logout()}></div>\r\n                    </div>\r\n                );\r\n            } else if (Jwt().Role == TipoUsuario.CANDIDATO) {\r\n                return (\r\n                    <div className=\"mt-12\">\r\n                        <Link to=\"/vagas\"><div className=\"rela-block side-button vagas\"></div></Link>\r\n                        <Link to=\"/Candidato/historico-candidaturas\"><div className=\"rela-block side-button c-historico-candidaturas\"></div></Link>\r\n                        <Link to=\"/Candidato/editar-perfil\"><div className=\"rela-block side-button c-editar-perfil\"></div></Link>\r\n                        <div className=\"rela-block side-button logout\"\r\n                            onClick={() => logout()}></div>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div {...props} className={props.className}>\r\n\r\n            <div style={{ width: \"80px\" }}></div>\r\n            <div className=\"side-bar\">\r\n                <div className=\"side-container top\">\r\n                    <Link to=\"/\"><img id=\"img\" src={Logo} alt=\"Logo escrito (conexão Vagas)\" /></Link>\r\n                </div>\r\n                <div className=\"side-container middle\">\r\n                    {menu()}\r\n                    <div className=\"logoSenai\">\r\n                        <Link to=\"/\"><img id=\"img\" src={LogoSenai} alt=\"Logo vermelha do senai com escrito branco\" /></Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Sidebar;\r\n","import React from 'react';\r\n\r\nfunction Card(props: any) {\r\n    return(\r\n        <div {...props} className={\"p-5 shadow shadow-md rounded-lg bg-white \" + props.className} >\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import { Endereco } from \"./endereco\";\r\nimport { StatusUsuario } from \"./statusUsuario\";\r\nimport { Usuario } from \"./usuario\";\r\nimport { Vaga } from \"./vaga\";\r\n\r\nexport class Empresa {\r\n    idUsuario?: number;\r\n    idStatusUsuario?: number;\r\n    idEndereco?: number | null;\r\n    foto?: string;\r\n    cnae?: string;\r\n    cnpj?: string;\r\n    razaoSocial?: string;\r\n    nomeFantasia?: string | null;\r\n    emailPublico?: string;\r\n    descricao?: string;\r\n    telefoneEmpresa?: string;\r\n    celularEmpresa?: string;\r\n    visualizacao?: number;\r\n    idEnderecoNavigation?: Endereco = undefined;\r\n    idStatusUsuarioNavigation?: StatusUsuario = undefined;\r\n    idUsuarioNavigation?: Usuario = undefined;\r\n    vaga?: Vaga[] = [];\r\n}","/* eslint-disable eqeqeq */\r\nimport { Empresa } from \"../models/empresa\";\r\nimport { API_URL, handleErrors, TOKEN_KEY } from \"./apisettings\";\r\n\r\nconst CONTROLLER = \"Empresa/\";\r\n\r\n/**\r\n * Lista os empresas.\r\n */\r\nfunction listar(): Promise<Empresa[]> {\r\n    return fetch(API_URL + CONTROLLER, {\r\n        method: \"GET\",\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n/**\r\n * Lista por status de usuário.\r\n * @param id ID do status de usuário \r\n *      PENDENTE = 1,\r\n *      ATIVO = 2,\r\n *      BLOQUEADO = 3,\r\n *      RECUSADO = 4\r\n */\r\nfunction listarPorStatus(id: number): Promise<Empresa[]> {\r\n    return fetch(API_URL + CONTROLLER, {\r\n        method: \"GET\",\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .then((data) => {\r\n            return data.filter((empresa: Empresa) => {\r\n                return empresa.idStatusUsuario == id\r\n            });\r\n        })\r\n\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n/**\r\n * \r\n * @param id ID do empresa\r\n * @returns O empresa buscado.\r\n */\r\nfunction buscarPorId(id: number): Promise<Empresa> {\r\n    // http://localhost:5000/api/Empresa/5\r\n    return fetch(API_URL + CONTROLLER + id, {\r\n        method: \"GET\",\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n/**\r\n * \r\n * @param empresa Objeto empresa a ser adicionado/atualizado.\r\n * @param id ID do empresa a ser atualizado.  O valor é 0 quando apenas quer adicionar.\r\n * @returns Objeto empresa se a operação for feita com sucesso, caso contrário retorno nada.\r\n */\r\nfunction salvar(empresa: Empresa, id: number): Promise<Empresa> {\r\n\r\n    const method = (id === 0 ? 'POST' : 'PUT');\r\n    const urlRequest = (id === 0 ? API_URL + CONTROLLER : API_URL + CONTROLLER + id);\r\n\r\n    return fetch(urlRequest, {\r\n        method: method,\r\n        body: JSON.stringify(empresa),\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(() => {\r\n            return empresa as any;\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n/**\r\n * \r\n * @param id ID da Empresa\r\n * @param file Foto\r\n */\r\nfunction uploadFoto(id: number, file: Blob) {\r\n\r\n    var img = new FormData();\r\n    img.append(\"file\", file, id.toString());\r\n\r\n    return fetch(API_URL + CONTROLLER + \"Img/upload/\" + id, {\r\n        method: \"POST\",\r\n        body: img,\r\n        headers: {\r\n            'Accept': '*/*',\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(() => id)\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n\r\nfunction mudarStatus(id: number, idStatus: number): void {\r\n\r\n    fetch(API_URL + CONTROLLER + `Status?id=${id}&idStatus=${idStatus}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .catch(err => console.error(err));\r\n}\r\n\r\nfunction somaVisualizacao(id: number) {\r\n    \r\n    var empresa = new Empresa();\r\n\r\n    buscarPorId(id).then(data => {\r\n        empresa.visualizacao = data.visualizacao! + 1;\r\n        \r\n        salvar(empresa, id) \r\n    });\r\n}\r\n\r\nexport default { listar, listarPorStatus, buscarPorId, salvar, uploadFoto, mudarStatus , somaVisualizacao}","import { BeneficioVaga } from \"./beneficioVaga\";\r\nimport { Candidatura } from \"./candidatura\";\r\nimport { Empresa } from \"./empresa\";\r\nimport { Endereco } from \"./endereco\";\r\nimport { HabilidadeVaga } from \"./habilidadeVaga\";\r\nimport { Matching } from \"./matching\";\r\n\r\nexport class Vaga {\r\n    idVaga?: number;\r\n    idEmpresa?: number;\r\n    idEndereco?: number | null;\r\n    titulo?: string;\r\n    salario?: number;\r\n    qualificacao?: string;\r\n    dataCriado?: string;\r\n    dataExpiracao?: string;\r\n    cargaHoraria?: number;\r\n    descricao?: string;\r\n    visualizacao?: number;\r\n    idEmpresaNavigation?: Empresa = undefined;\r\n    idEnderecoNavigation?: Endereco = undefined;\r\n    beneficioVaga?: BeneficioVaga[] = [];\r\n    candidatura?: Candidatura[] = [];\r\n    habilidadeVaga?: HabilidadeVaga[] = [];\r\n    matching?: Matching[] = [];\r\n}","import { Matching } from \"../models/matching\";\r\nimport { API_URL, handleErrors, TOKEN_KEY } from \"./apisettings\";\r\n\r\nconst CONTROLLER = \"Match/\";\r\n\r\n/**\r\n * Lista matching entre vagas e candidatos.\r\n */\r\nfunction listar(): Promise<Matching[]> {\r\n    return fetch(API_URL + CONTROLLER, {\r\n        method: \"GET\",\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n/**\r\n * Atualiza a relação de matching entre candidato e vaga.\r\n */\r\nfunction atualizar(): Promise<Matching[]> {\r\n    return fetch(API_URL + CONTROLLER, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n\r\nexport default { listar, atualizar }","import { Vaga } from \"../models/vaga\";\r\nimport { API_URL, handleErrors, TOKEN_KEY } from \"./apisettings\";\r\nimport MatchingApi from \"../api/matching\";\r\n\r\nconst CONTROLLER = \"Vaga/\";\r\n\r\n/**\r\n * Lista os vagas.\r\n */\r\nfunction listar(): Promise<Vaga[]> {\r\n    return fetch(API_URL + CONTROLLER, {\r\n        method: \"GET\",\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n/**\r\n * \r\n * @param id ID do vaga\r\n * @returns O vaga buscado.\r\n */\r\nfunction buscarPorId(id: number): Promise<Vaga> {\r\n    return fetch(API_URL + CONTROLLER + id, {\r\n        method: \"GET\",\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n/**\r\n * \r\n * @param id ID da empresa.\r\n */\r\nfunction listarPorEmpresa(id: number): Promise<Vaga[]> {\r\n    return fetch(API_URL + CONTROLLER + `Empresa/${id}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n/**\r\n * \r\n * @param titulo Nome da vaga\r\n * @param minSalario Salário mínimo\r\n * @param idHabilidade ID da habilidade relacionada\r\n */\r\nfunction listarPorFiltro(titulo: string, minSalario: number, idHabilidade: number): Promise<Vaga[]> {\r\n    var filtro: string = `Filtro?titulo=${titulo}&minSalario=${minSalario}&id=${idHabilidade}`\r\n\r\n    return fetch(API_URL + CONTROLLER + filtro, {\r\n        method: \"GET\",\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n/**\r\n * \r\n * @param vaga Objeto vaga a ser adicionado/atualizado.\r\n * @param id ID do vaga a ser atualizado.  O valor é 0 quando apenas quer adicionar.\r\n * @returns Objeto vaga se a operação for feita com sucesso, caso contrário retorno nada.\r\n */\r\nfunction salvar(vaga: Vaga, id: number): Promise<Vaga> {\r\n\r\n    const method = (id === 0 ? 'POST' : 'PUT');\r\n    const urlRequest = (id === 0 ? API_URL + CONTROLLER : API_URL + CONTROLLER + id);\r\n    return fetch(urlRequest, {\r\n        method: method,\r\n        body: JSON.stringify(vaga),\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(() => {\r\n            MatchingApi.atualizar();\r\n            return vaga as any;\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n/**\r\n * Deleta uma vaga.\r\n * @param id ID da vaga\r\n */\r\nfunction deletar(id: number): void {\r\n    fetch(API_URL + CONTROLLER + id, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => response.json())\r\n        .catch(err => console.error(err));\r\n}\r\n\r\nfunction somaVisualizacao(id: number) {\r\n    \r\n    var vaga = new Vaga();\r\n\r\n    buscarPorId(id).then(data => {\r\n        vaga.visualizacao = data.visualizacao! + 1;\r\n        \r\n        salvar(vaga, id) \r\n    });\r\n}\r\n\r\nexport default {listar, listarPorEmpresa, listarPorFiltro, buscarPorId, salvar, deletar, somaVisualizacao}\r\n","import { Candidatura } from \"../models/candidatura\";\r\nimport { API_URL, handleErrors, TOKEN_KEY } from \"./apisettings\";\r\n\r\nconst CONTROLLER = \"Candidatura/\";\r\n\r\n/**\r\n * Lista as candidaturas.\r\n */\r\nfunction listar(): Promise<Candidatura[]> {\r\n    return fetch(API_URL + CONTROLLER, {\r\n        method: \"GET\",\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n/**\r\n * \r\n * @param id ID da candidatura\r\n * @returns A candidatura buscada\r\n */\r\nfunction buscarPorId(id: number): Promise<Candidatura> {\r\n    // http://localhost:5000/api/Candidatura/5\r\n    return fetch(API_URL + CONTROLLER + id, {\r\n        method: \"GET\",\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n/**\r\n * \r\n * @param empresa Objeto candidatura a ser adicionada/atualizada.\r\n * @param id ID do candidatura a ser atualizada.  O valor é 0 quando apenas quer adicionar.\r\n * @returns Objeto candidatura se a operação for feita com sucesso, caso contrário retorno nada.\r\n */\r\nfunction salvar(candidatura: Candidatura, id: number): Promise<Candidatura> {\r\n\r\n    const method = (id === 0 ? 'POST' : 'PUT');\r\n    const urlRequest = (id === 0 ? API_URL + CONTROLLER : API_URL + CONTROLLER + id);\r\n\r\n    return fetch(urlRequest, {\r\n        method: method,\r\n        body: JSON.stringify(candidatura),\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(() => {\r\n            return candidatura as any;\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\nfunction visualizar(id: number) {\r\n    var form: Candidatura = {\r\n        visualizado: true\r\n    } \r\n\r\n    salvar(form, id)\r\n}\r\n\r\nexport default { listar, buscarPorId, salvar, visualizar }","export class Notificacao {\r\n    idNotificacao?: number;\r\n    dataNotificacao?: string;\r\n    mensagem?: string;\r\n}","import { Notificacao } from \"../models/notificacao\";\r\nimport { API_URL, handleErrors, TOKEN_KEY } from \"./apisettings\";\r\n\r\nconst CONTROLLER = \"Notificacao/\";\r\n\r\n/**\r\n * Lista a notificacoes.\r\n */\r\nfunction listar(): Promise<Notificacao[]> {\r\n    return fetch(API_URL + CONTROLLER, {\r\n        method: \"GET\",\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n/**\r\n * \r\n * @param id ID da notificacao\r\n * @returns A notificacao buscada.\r\n */\r\nfunction buscarPorId(id: number): Promise<Notificacao> {\r\n    return fetch(API_URL + CONTROLLER + id, {\r\n        method: \"GET\",\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n/**\r\n * \r\n * @param mensagem Mensagem de notificação.\r\n */\r\nfunction addNotificacao(mensagem: string): Promise<Notificacao> {\r\n\r\n    var notificacao: Notificacao = new Notificacao();\r\n    notificacao.mensagem = mensagem;\r\n\r\n    return fetch(API_URL + CONTROLLER, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(notificacao),\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(() => {\r\n            return notificacao as any;\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n\r\n\r\n/**\r\n * Deleta uma notificacao.\r\n * @param id ID da notificacao\r\n */\r\nfunction deletar(id: number): void {\r\n    fetch(API_URL + CONTROLLER, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => response.json())\r\n        .catch(err => console.error(err));\r\n}\r\n\r\nexport default { listar, buscarPorId, addNotificacao, deletar }","/* eslint-disable eqeqeq */\r\nimport React from 'react';\r\nimport Logo from '../../assets/imgs/logo-dark.png';\r\nimport LogoSenai from '../../assets/imgs/logo-senai-principal.png';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { TOKEN_KEY } from '../../api/apisettings';\r\nimport { Jwt } from '../../services/auth';\r\nimport { TipoUsuario } from '../../utils/enums';\r\nimport './style.css';\r\n\r\nfunction Hamburguer(props: any) {\r\n\r\n    let history = useHistory();\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem(TOKEN_KEY);\r\n        history.push('/');\r\n    }\r\n\r\n    const menu = () => {\r\n\r\n        if (Jwt() === undefined || Jwt() === null) {\r\n            return (\r\n                <div className=\"flex flex-col text-white m-5 nav-mobile\">\r\n                    <Link to=\"/login\"\r\n                        className=\"hover:text-gray-300\">Login\r\n                            <i className=\"ri-login-circle-line\" />\r\n                    </Link>\r\n                    <Link to=\"/cadastro\"\r\n                        className=\"hover:text-gray-300\">Cadastro\r\n                            <i className=\"ri-user-add-line\" />\r\n                    </Link>\r\n                </div>\r\n            )\r\n        } else {\r\n            if (Jwt().Role == TipoUsuario.ADMINISTRADOR) {\r\n                return (\r\n                    <div className=\"flex flex-col text-white m-5 nav-mobile\">\r\n                        <Link to=\"/Administrador/dashboard\"\r\n                            className=\"hover:text-gray-300\">Dashboard\r\n                            <i className=\"ri-dashboard-fill\" />\r\n                        </Link>\r\n                        <Link to=\"/Administrador/gerenciamento-candidatos\"\r\n                            className=\"hover:text-gray-300\">Gerenciar Candidatos\r\n                            <i className=\"ri-article-line\" />\r\n                        </Link>\r\n                        <Link to=\"/Administrador/gerenciamento-empresas\"\r\n                            className=\"hover:text-gray-300\">Gerenciar Empresas\r\n                            <i className=\"ri-building-4-line\" />\r\n                        </Link>\r\n                        <span className=\" hover:text-gray-300 cursor-pointer\"\r\n                            onClick={() => logout()}>Logoff\r\n                            <i className=\"ri-logout-circle-line\" />\r\n                        </span>\r\n                    </div>\r\n                )\r\n            }\r\n            else if (Jwt().Role == TipoUsuario.EMPRESA) {\r\n                return (\r\n                    <div className=\"flex flex-col text-white m-5 nav-mobile\">\r\n                        <Link to=\"/Empresa/dashboard\"\r\n                            className=\"hover:text-gray-300\">Dashboard\r\n                            <i className=\"ri-dashboard-fill\" />\r\n                        </Link>\r\n                        <Link to=\"/Empresa/suas-vagas\"\r\n                            className=\"hover:text-gray-300\">Suas Vagas\r\n                            <i className=\" ri-profile-line\" />\r\n                        </Link>\r\n                        <Link to=\"/Empresa/cadastrar-vagas\"\r\n                            className=\"hover:text-gray-300\">Cadastrar Vagas\r\n                            <i className=\"ri-add-circle-line\" />\r\n                        </Link>\r\n                        <Link to=\"/Empresa/editar-perfil\"\r\n                            className=\"\">Editar Perfil\r\n                            <i className=\"ri-building-4-line\" />\r\n                        </Link>\r\n                        <span className=\"hover:text-gray-300 cursor-pointer\"\r\n                            onClick={() => logout()}>Logoff\r\n                            <i className=\"ri-logout-circle-line\" />\r\n                        </span>\r\n                    </div>\r\n                )\r\n            }\r\n            else if (Jwt().Role == TipoUsuario.CANDIDATO) {\r\n                return (\r\n                    <div className=\"flex flex-col text-white m-5 nav-mobile\">\r\n                        <Link to=\"/vagas\"\r\n                            className=\"hover:text-gray-300\">Vagas\r\n                            <i className=\" ri-profile-line\" />\r\n                        </Link>\r\n                        <Link to=\"/Candidato/historico-candidaturas\"\r\n                            className=\"hover:text-gray-300\">Histórico de Candidaturas\r\n                            <i className=\"ri-history-line\" />\r\n                        </Link>\r\n                        <Link to={\"/Candidato/editar-perfil\"} \r\n                              className=\"hover:text-gray-300\">Meu Perfil\r\n                              <i className=\"ri-user-line\"/>\r\n                        </Link>\r\n                        <span className=\"hover:text-gray-300 cursor-pointer\"\r\n                            onClick={() => logout()}>Logoff\r\n                            <i className=\"ri-logout-circle-line\" />\r\n                        </span>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={props.className}>\r\n            <input type=\"checkbox\" id=\"toggle\" className=\"hidden\"></input>\r\n\r\n            <label htmlFor=\"toggle\"\r\n                className=\"bg-secondary-color rounded-full w-12 h-12 m-3 \r\n                        shadow shadow-lg flex justify-center items-center cursor-pointer \">\r\n                <div>\r\n                    <i className=\"barra fa fa-bars text-white text-2xl\"></i>\r\n                </div>\r\n            </label>\r\n\r\n            <div className=\"h-screen w-screen fixed z-50 \r\n                            bg-secondary-color hamburguer-menu p-3\">\r\n                <div className=\"flex items-center\">\r\n                    <label className=\"ri-close-line text-white text-3xl relative cursor-pointer\" htmlFor=\"toggle\"></label>\r\n                    <Link to=\"/\">\r\n                        <img className=\"h-16 force-center\" src={Logo} alt=\"logo\"></img>\r\n                    </Link>\r\n                </div>\r\n                {menu()}\r\n                <div>\r\n                    <img className=\"w-32 absolute bottom-0 inset-x-0 m-auto pb-16\" src={LogoSenai} alt=\"logo senai\"></img>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hamburguer;","/* eslint-disable eqeqeq */\r\nimport { Candidatura } from \"../models/candidatura\";\r\nimport { ChartCandidaturas } from \"../interfaces/chartCandidaturas\";\r\nimport { Empresa } from \"../models/empresa\";\r\nimport { ChartEmpresas } from \"../interfaces/chartEmpresas\";\r\nimport { Vaga } from \"../models/vaga\";\r\nimport EmpresaApi from '../api/empresa';\r\nimport CandidaturaApi from '../api/candidatura';\r\n\r\n// Define uma lista de meses para ser exportado depois em qualquer parte da aplicação.\r\nexport const MESES = [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"];\r\n\r\n/**\r\n * \r\n * @param qtdeMeses Qtde de meses a ser retornado na lista.\r\n */\r\nexport function graphCandidatura(qtdeMeses: number): Promise<ChartCandidaturas[]> {\r\n    // Inicializa a data (de hoje)\r\n    var date: Date = new Date();\r\n\r\n    // Pega o mês e o ano\r\n    var mesAtual: number = date.getMonth();\r\n    var anoAtual: number = date.getFullYear();\r\n\r\n    // Inicializa a lista de candidaturas cadastradas no mês para ter conteudo adicionado depois (push).\r\n    var chartCandidatura: ChartCandidaturas[] = [];\r\n\r\n    // LIsta candidaturas e manipula os dados.\r\n    return CandidaturaApi.listar().then((candidaturas: Candidatura[]) => {\r\n\r\n        // Laço de repetição de acordo com a qtde de meses a buscar no grafico (qtdeMeses).\r\n        for (let i = 0; i < qtdeMeses; i++) {\r\n            // Candidaturas filtradas pelo mês e ano.\r\n            var candidaturasFiltradas = candidaturas?.filter((candidatura: Candidatura) => {\r\n                var date = new Date(candidatura.dataCriado!)\r\n                var mes = date.getMonth();\r\n                var ano = date.getFullYear();\r\n                // Condição de filtro\r\n                return mes == mesAtual && ano == anoAtual;\r\n            });\r\n\r\n            chartCandidatura?.push({\r\n                candidaturas: candidaturasFiltradas?.length,\r\n                mes: `${MESES[mesAtual]}/${anoAtual}`,\r\n                ano: anoAtual\r\n            })\r\n\r\n            // Se o mês for Outubro, então volte um mês para Setembro, por exemplo.\r\n            // Esse if evita que subtraia -1 quando o mês for 0 (Janeiro) e manda para Dezembro do ano passado.\r\n            if (mesAtual == 0) {\r\n                mesAtual = 11;\r\n                anoAtual--;\r\n            }\r\n            else\r\n                mesAtual--;\r\n        }\r\n        return chartCandidatura.reverse();\r\n    })\r\n}\r\n\r\n/**\r\n * \r\n * @param qtdeMeses Qtde de meses a ser retornado na lista.\r\n */\r\nexport function graphEmpresa(qtdeMeses: number): Promise<ChartEmpresas[]> {\r\n    // Inicializa a data (de hoje)\r\n    var date: Date = new Date();\r\n\r\n    // Pega o mês e o ano\r\n    var mesAtual: number = date.getMonth();\r\n    var anoAtual: number = date.getFullYear();\r\n\r\n    // Inicializa a lista de empresas cadastradas no mês para ter conteudo adicionado depois (push).\r\n    var chartEmpresas: ChartEmpresas[] = [];\r\n\r\n    // LIsta empresas e manipula os dados.\r\n    return EmpresaApi.listar().then((empresas: Empresa[]) => {\r\n\r\n        // Laço de repetição de acordo com a qtde de meses a buscar no grafico (qtdeMeses).\r\n        for (let i = 0; i < qtdeMeses; i++) {\r\n            // Empresas filtradas pelo mês e ano.\r\n            var empresasFiltradas = empresas?.filter((empresa: Empresa) => {\r\n                var date = new Date(empresa.idUsuarioNavigation!.dataCadastrado!)\r\n                var mes = date.getMonth();\r\n                var ano = date.getFullYear();\r\n                // Condição de filtro\r\n                return mes == mesAtual && ano == anoAtual;\r\n            });\r\n\r\n            chartEmpresas?.push({\r\n                empresas: empresasFiltradas?.length,\r\n                mes: `${MESES[mesAtual]}/${anoAtual}`,\r\n                ano: anoAtual\r\n            })\r\n\r\n            // Se o mês for Outubro, então volte um mês para Setembro, por exemplo.\r\n            // Esse if evita que subtraia -1 quando o mês for 0 (Janeiro) e manda para Dezembro do ano passado.\r\n            if (mesAtual == 0) {\r\n                mesAtual = 11;\r\n                anoAtual--;\r\n            }\r\n            else\r\n                mesAtual--;\r\n        }\r\n        return chartEmpresas.reverse();\r\n    })\r\n}\r\n\r\n/**\r\n * \r\n * @param qtdeMeses Qtde de meses a ser retornado na lista.\r\n */\r\nexport function graphCandidaturaEmpresa(qtdeMeses: number, empresa: Empresa): ChartCandidaturas[] {\r\n    // Inicializa a data (de hoje)\r\n    var date: Date = new Date();\r\n\r\n    // Pega o mês e o ano\r\n    var mesAtual: number = date.getMonth();\r\n    var anoAtual: number = date.getFullYear();\r\n\r\n    // Inicializa a lista de candidaturas cadastradas no mês para ter conteudo adicionado depois (push).\r\n    var chartCandidatura: ChartCandidaturas[] = [];\r\n\r\n\r\n    for (let i = 0; i < qtdeMeses; i++) {\r\n\r\n        var candidaturasFiltradas: Candidatura[] = [];\r\n\r\n        empresa.vaga?.forEach((vaga: Vaga) => {\r\n            // Soma todas candidaturas filtradas em um array.\r\n            candidaturasFiltradas = candidaturasFiltradas.concat(vaga.candidatura!.filter((candidatura: Candidatura) => {\r\n                var date = new Date(candidatura.dataCriado!)\r\n                var mes = date.getMonth();\r\n                var ano = date.getFullYear();\r\n                // Condição de filtro\r\n                return mes == mesAtual && ano == anoAtual;\r\n            }))\r\n\r\n        })\r\n\r\n        chartCandidatura?.push({\r\n            candidaturas: candidaturasFiltradas?.length,\r\n            mes: `${MESES[mesAtual]}/${anoAtual}`,\r\n            ano: anoAtual\r\n        })\r\n\r\n        // Se o mês for Outubro, então volte um mês para Setembro, por exemplo.\r\n        // Esse if evita que subtraia -1 quando o mês for 0 (Janeiro) e manda para Dezembro do ano passado.\r\n        if (mesAtual == 0) {\r\n            mesAtual = 11;\r\n            anoAtual--;\r\n        }\r\n        else\r\n            mesAtual--;\r\n    }\r\n    return chartCandidatura.reverse();\r\n}\r\n","export function toDate(date: Date) {\r\n\r\n    var dia = date.getDate();\r\n    var mes = date.getMonth() + 1;\r\n    var diaFormatado = dia > 9 ? dia : '0' + dia\r\n    var mesFormatado = mes > 9 ? mes : '0' + mes\r\n\r\n    return `${diaFormatado}/${mesFormatado}/${date.getFullYear()}`\r\n}\r\n\r\nexport function toHour(date: Date) {\r\n\r\n    var min = date.getMinutes() > 9 ? date.getMinutes() : '0' + date.getMinutes()\r\n\r\n    return `${date.getHours()}:${min}`\r\n}\r\n","import React from 'react';\r\nimport '../../components/loader/style.css';\r\n\r\nfunction Loader(props: any) {\r\n    return (\r\n        <div className={\"loader w-12 h-12 \" + props.className}></div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import React from 'react'\r\nimport Hamburguer from '../../components/hamburguer'\r\nimport Loader from '../../components/loader'\r\nimport Sidebar from '../../components/sidebar/Index'\r\n\r\nfunction LoadingPage() {\r\n    return (\r\n        <div className=\"body w-full\">\r\n            <Hamburguer className=\"md:hidden flex fixed\" />\r\n            <Sidebar className=\"md:flex hidden\" />\r\n            <main className=\"w-full flex justify-center items-center\">\r\n                <Loader/>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingPage\r\n","import React, { useEffect, useState } from 'react';\r\nimport Sidebar from '../../components/sidebar/Index';\r\nimport Card from '../../components/card/index';\r\nimport EmpresaApi from '../../api/empresa';\r\nimport VagaApi from '../../api/vagas';\r\nimport CandidaturaApi from '../../api/candidatura';\r\nimport NotificacaoApi from '../../api/notificacoes';\r\nimport Loader from '../../components/loader';\r\nimport Hamburguer from '../../components/hamburguer';\r\nimport { graphEmpresa } from '../../services/graph';\r\nimport { graphCandidatura } from '../../services/graph';\r\nimport { Line } from '@reactchartjs/react-chart.js';\r\nimport { Notificacao } from '../../models/notificacao';\r\nimport { toDate, toHour } from '../../services/date';\r\nimport LoadingPage from '../loading';\r\nimport notificacoes from '../../api/notificacoes';\r\n\r\nfunction ADashboard() {\r\n\r\n  const [qtdVagas, setQtdVagas] = useState<Number>(0);\r\n\r\n  const [qtdEmpresas, setQtdEmpresas] = useState<Number>(0);\r\n  const [chartEmpresasMeses, setChartEmpresasMeses] = useState<string[]>([]);\r\n  const [chartEmpresasCadastros, setChartEmpresasCadastros] = useState<number[]>([]);\r\n\r\n  const [qtdCandidaturas, setQtdCandidaturas] = useState<Number>(0);\r\n  const [chartCandidaturasMeses, setChartCandidaturasMeses] = useState<string[]>([]);\r\n  const [chartCandidaturasCadastros, setChartCandidaturasCadastros] = useState<number[]>([]);\r\n\r\n  const [Notificacoes, setNotificacoes] = useState<Notificacao[]>();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    Promise.all([\r\n      EmpresaApi.listar().then(data => setQtdEmpresas(data?.length)),\r\n      VagaApi.listar().then(data => setQtdVagas(data?.length)),\r\n      graphEmpresa(12).then(data => {\r\n        var joinedMeses: string[] = [];\r\n        var joinedCadastros: number[] = []\r\n        data.map(chart => {\r\n          // Se você especificou como 3 no valor de qtdeMeses e você \r\n          // estiver no mês de Novembro, vai retornar um array [\"Setembro\", \"Outubro\", \"Novembro\"]\r\n          joinedMeses.push(chart.mes);\r\n          joinedCadastros.push(chart.empresas);\r\n        });\r\n\r\n        setChartEmpresasMeses(joinedMeses);\r\n        setChartEmpresasCadastros(joinedCadastros)\r\n      })\r\n      ,\r\n      CandidaturaApi.listar().then(data => setQtdCandidaturas(data?.length)),\r\n      graphCandidatura(12).then(data => {\r\n        var joinedMeses: string[] = [];\r\n        var joinedCadastros: number[] = [];\r\n        data.map(chart => {\r\n          // Se você especificou como 3 no valor de qtdeMeses e você \r\n          // estiver no mês de Novembro, vai retornar um array [\"Setembro\", \"Outubro\", \"Novembro\"]\r\n          joinedMeses.push(chart.mes);\r\n          joinedCadastros.push(chart.candidaturas);\r\n        });\r\n        setChartCandidaturasMeses(joinedMeses);\r\n        setChartCandidaturasCadastros(joinedCadastros)\r\n      }),\r\n\r\n      NotificacaoApi.listar().then(data => setNotificacoes(data.reverse()))\r\n    ])\r\n      .then(() => setIsLoading(false));\r\n\r\n  }, []);\r\n\r\n  const dataEmpresa = {\r\n    labels: chartEmpresasMeses,\r\n    datasets: [\r\n      {\r\n        label: 'Cadastros de Empresas',\r\n        data: chartEmpresasCadastros,\r\n        fill: false,\r\n        backgroundColor: 'rgb(255, 99, 132)',\r\n        borderColor: 'rgba(255, 99, 132, 0.2)',\r\n      },\r\n    ],\r\n  }\r\n\r\n  const dataCandidatura = {\r\n    labels: chartCandidaturasMeses,\r\n    datasets: [\r\n      {\r\n        label: 'Inscrições em vagas',\r\n        data: chartCandidaturasCadastros,\r\n        fill: false,\r\n        backgroundColor: 'rgb(255, 99, 132)',\r\n        borderColor: 'rgba(255, 99, 132, 0.2)',\r\n      },\r\n    ],\r\n  }\r\n\r\n  const optionsEmpresa = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            suggestedMin: 1,\r\n            suggestedMax: 10\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  }\r\n\r\n  const optionsCandidaturas = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            suggestedMin: 1,\r\n            suggestedMax: 10\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  }\r\n\r\n  function renderNotificacoes() {\r\n\r\n    return Notificacoes!.map((item: Notificacao) => {\r\n      return (\r\n        <div className=\"pb-4\"  >\r\n          <div key={item.idNotificacao}>\r\n            <p className=\"text-sm\">{item.mensagem}</p>\r\n            <p className=\"text-xs text-gray-700\">{`${toDate(new Date(item.dataNotificacao!))} ${toHour(new Date(item.dataNotificacao!))}`}</p>\r\n            <hr className=\"mt-4\" />\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <LoadingPage />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"body w-full\">\r\n      <Hamburguer className=\"md:hidden flex fixed\" />\r\n      <Sidebar className=\"md:flex hidden\"></Sidebar>\r\n      <main className=\"md:w-2/3 w-full mx-auto p-5\">\r\n        <h1 className=\"p-10 md:text-2xl text-xl flex justify-center\">Dashboard</h1>\r\n        <div className=\"flex md:flex-no-wrap flex-wrap gap-5 mb-2 justify-center\">\r\n          <Card className=\"flex flex-col p-2 w-full\">\r\n            <div className=\"flex justify-center pb-2\">Total de empresas</div>\r\n            <h2 className=\"text-orange-600 pl-2 font-bold flex justify-center text-4xl\">{qtdEmpresas}</h2>\r\n          </Card>\r\n\r\n          <Card className=\"flex flex-col p-2 w-full\">\r\n            <div className=\"flex justify-center pb-2\">Total de vagas</div>\r\n            <h2 className=\"text-blue-600 pl-2 font-bold flex justify-center text-4xl\">{qtdVagas}</h2>\r\n          </Card>\r\n\r\n          <Card className=\"flex flex-col p-2 w-full\">\r\n            <div className=\"flex justify-center pb-2\">Total de candidaturas</div>\r\n            <h2 className=\"text-purple-600 pl-2 font-bold flex justify-center text-4xl\">{qtdCandidaturas}</h2>\r\n          </Card>\r\n        </div>\r\n\r\n        <div className=\"flex justify-center gap-5 pt-5 w-full lg:flex-no-wrap flex-wrap\">\r\n\r\n          <div className=\"flex-auto\">\r\n            <Card>\r\n              <Line type={Line} data={dataEmpresa}\r\n                options={optionsEmpresa} />\r\n            </Card>\r\n            <br />\r\n            <Card>\r\n              <Line type={Line} data={dataCandidatura}\r\n                options={optionsCandidaturas} />\r\n            </Card>\r\n          </div>\r\n\r\n          <Card className=\"lg:w-64 w-full overflow-y-scroll h-screen\">\r\n            <div>\r\n              <h2 className=\"flex justify-center pb-2\">Notificações</h2>\r\n              <hr className=\"mb-4\" />\r\n            </div>\r\n            <div>\r\n              {renderNotificacoes()}\r\n            </div>\r\n          </Card>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ADashboard;","import { Habilidade } from \"../models/habilidade\";\r\nimport { API_URL, handleErrors, TOKEN_KEY } from \"./apisettings\";\r\n\r\nconst CONTROLLER = \"Habilidade/\";\r\n\r\n/**\r\n * Lista habilidades.\r\n */\r\nfunction listar(): Promise<Habilidade[]> {\r\n    return fetch(API_URL + CONTROLLER, {\r\n        method: \"GET\",\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n/**\r\n * \r\n * @param id ID da habilidade\r\n * @returns A habilidade buscada.\r\n */\r\nfunction buscarPorId(id: number): Promise<Habilidade> {\r\n    return fetch(API_URL + CONTROLLER + id, {\r\n        method: \"GET\",\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n/**\r\n * \r\n * @param habilidade Objeto habilidade a ser adicionado/atualizado.\r\n * @param id ID do habilidade a ser atualizado.  O valor é 0 quando apenas quer adicionar.\r\n * @returns Objeto habilidade se a operação for feita com sucesso, caso contrário retorno nada.\r\n */\r\nfunction salvar(habilidade: Habilidade, id: number): Promise<Habilidade> {\r\n\r\n    const method = (id === 0 ? 'POST' : 'PUT');\r\n    const urlRequest = (id === 0 ? API_URL + CONTROLLER : API_URL + CONTROLLER + id);\r\n\r\n    return fetch(urlRequest, {\r\n        method: method,\r\n        body: JSON.stringify(habilidade),\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(() => {\r\n            return habilidade as any;\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n/**\r\n * Deleta uma habilidade.\r\n * @param id ID da habilidade\r\n */\r\nfunction deletar(id: number): void {\r\n    fetch(API_URL + CONTROLLER + id, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => response.json())\r\n        .catch(err => console.error(err));\r\n}\r\n\r\nexport default { listar, buscarPorId, salvar, deletar }","// https://github.com/bradtraversy/simple_react_pagination/blob/master/src/components/Pagination.js\r\n\r\nimport React from 'react';\r\nimport './index.css'\r\n\r\nconst Pagination = (props: any) => {\r\n    const pageNumbers = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(props.totalObjects / props.objectsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <nav className={props.className}>\r\n            <p>Páginas</p>\r\n            <ul className='pagination'>\r\n                {pageNumbers.map(number => (\r\n                    <li key={number} className='page-item'>\r\n                        <span onClick={() => {\r\n                            window.scrollTo(0,0);\r\n                            props.paginate(number);\r\n                        }} \r\n                            className='page-link cursor-pointer'>\r\n                            {number}\r\n                        </span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport Foto from '../../assets/imgs/erro.jpg';\r\nimport './index.css'\r\n\r\nfunction Erro() {\r\n    return (\r\n\r\n        <div className=\"bg-white flex css \">\r\n            <div className=\"flex flex-col m-auto p-5 items-center\">\r\n                <p className=\"texto\">Sua página não foi encontrada :(</p>\r\n                <img src={Foto} alt=\"\" className=\"foto object-contain\" />\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Erro;","/* eslint-disable eqeqeq */\r\nimport React, { useEffect, useState } from 'react';\r\nimport Sidebar from '../../components/sidebar/Index';\r\nimport Card from '../../components/card/index';\r\nimport Button from '../../components/button/index';\r\nimport VagaApi from '../../api/vagas';\r\nimport EmpresaApi from '../../api/empresa';\r\nimport HabilidadeApi from '../../api/habilidades';\r\nimport Hamburguer from '../../components/hamburguer';\r\nimport ImgEmpresaDefault from '../../assets/imgs/default-empresa.png';\r\nimport Loader from '../../components/loader';\r\nimport Pagination from '../../components/pagination';\r\nimport { Vaga } from '../../models/vaga';\r\nimport { Empresa } from '../../models/empresa';\r\nimport { HabilidadeVaga } from '../../models/habilidadeVaga';\r\nimport { Link } from 'react-router-dom';\r\nimport { toDate, toHour } from '../../services/date';\r\nimport { Habilidade } from '../../models/habilidade';\r\nimport { API_URL } from '../../api/apisettings';\r\nimport LoadingPage from '../loading';\r\nimport Erro from '../404';\r\n\r\nfunction AEmpresaGeral({ match }: any) {\r\n\r\n    const {\r\n        params: { id },\r\n    } = match;\r\n\r\n    const [vagas, setVagas] = useState<Vaga[]>([]);\r\n    const [empresa, setEmpresa] = useState<Empresa>(new Empresa());\r\n    const [habilidades, setHabilidades] = useState<Habilidade[]>([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [vagasPorPagina] = useState(5);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const indexOfLastPost = currentPage * vagasPorPagina;\r\n    const indexOfFirstPost = indexOfLastPost - vagasPorPagina;\r\n    const vagasAtuais = vagas.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const paginate = (pageNumber: any) => setCurrentPage(pageNumber);\r\n\r\n\r\n    useEffect(() => {\r\n        Promise.all([\r\n            VagaApi.listarPorEmpresa(id).then(data => setVagas(data)),\r\n            HabilidadeApi.listar().then(data => setHabilidades(data)),\r\n            EmpresaApi.buscarPorId(id).then(data => {\r\n                setEmpresa(data)\r\n                if (data) {\r\n                    EmpresaApi.somaVisualizacao(data.idUsuario!);\r\n                }\r\n            })\r\n        ])\r\n            .then(() => setIsLoading(false));\r\n\r\n    }, []);\r\n\r\n    function renderVagas() {\r\n\r\n        return vagasAtuais.map((item: Vaga) => {\r\n            return (\r\n                <Link to={`/vaga/${item.idVaga}`}>\r\n                    <Card className=\"flex flex-col mb-5 hover-gray-100\" key={item.idVaga}>\r\n                        {/* Conteudo encima */}\r\n                        <div className=\"flex flex-row p-2\">\r\n                            <p className=\"flex items-center\">{item.titulo}</p>\r\n                        </div>\r\n                        <hr />\r\n                        {/* Conteudo debaixo */}\r\n                        <div className=\"flex flex-row pb-2 text-sm\">\r\n                            <div className=\"flex flex-col w-1/2 pr-2\">\r\n                                <div>\r\n                                    <i className=\"ri-money-dollar-circle-line text-lg\" />\r\n                                    <span> R$ {item.salario}</span>\r\n                                </div>\r\n                                <div>\r\n                                    <i className=\"ri-map-pin-line text-lg\"></i>\r\n                                    <span> {item.idEnderecoNavigation?.localCompleto}</span>\r\n                                </div>\r\n                                <div>\r\n                                    <i className=\"ri-time-line text-lg\"></i>\r\n                                    <span> Expira em {`${toDate(new Date(item.dataExpiracao!))} ${toHour(new Date(item.dataExpiracao!))}`}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"w-1/2 flex flex-row flex-wrap\">\r\n                                {item.habilidadeVaga?.map((hv: HabilidadeVaga) => {\r\n                                    return (\r\n                                        <span className=\"bg-gray-400 p-2 rounded-full m-1 h-8 flex items-center\">\r\n                                            {habilidades.find((h: Habilidade) =>\r\n                                                h.idHabilidade == hv.idHabilidade)?.nomeHabilidade}\r\n                                        </span>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                </Link>\r\n            )\r\n        })\r\n    }\r\n\r\n    if (!isLoading && empresa == undefined) {\r\n        return (\r\n            <Erro />\r\n        )\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <LoadingPage />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"body w-full\">\r\n            <Hamburguer className=\"md:hidden flex fixed\" />\r\n            <Sidebar className=\"md:flex hidden\"></Sidebar>\r\n            <main className=\"w-full flex flex-col\">\r\n                <div className=\"p-5 bg-cv-gray\">\r\n                    <div className=\"flex justify-center lg:w-2/3 w-full mx-auto\">\r\n                        <div className=\"pr-12\">\r\n                            <img className=\"w-56 h-56 object-contain\"\r\n                                src={`${API_URL}Empresa/Img/${empresa.idUsuario}`}\r\n                                onError={e => e.currentTarget.src = ImgEmpresaDefault}>\r\n                            </img>\r\n                        </div>\r\n                        <div>\r\n                            <h2 className=\"text-4xl\">{empresa?.nomeFantasia}</h2>\r\n                            <p className=\"text-2xl\">Cadastrada desde {`${toDate(new Date(empresa?.idUsuarioNavigation?.dataCadastrado!))}`}</p>\r\n                            <p id=\"descricaoVaga\" className=\"pb-6\"></p>\r\n                            <i className=\"ri-mail-line\"><span>Email de contato</span></i>\r\n                            <div className=\"pb-3\">{empresa?.idUsuarioNavigation?.email}</div>\r\n                            <div className=\"flex flex-row\">\r\n                                <div>\r\n                                    <i className=\"ri-phone-fill\"><span>Telefone</span></i>\r\n                                    <div>{empresa?.telefoneEmpresa}</div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <h1 className=\"text-2xl text-center mt-10 mb-5\">Vagas disponíveis</h1>\r\n                <div className=\"lg:w-2/3 mx-auto p-5\">\r\n                    {renderVagas()}\r\n                </div>\r\n                <Pagination\r\n                    className=\"mt-auto my-5 flex flex-col items-center\"\r\n                    objectsPerPage={vagasPorPagina}\r\n                    totalObjects={vagas.length}\r\n                    paginate={paginate}\r\n                />\r\n                {/* <div className=\"flex justify-center pb-10\">\r\n                    <Link to=\"/Administrador/gerenciamento-empresas\">\r\n                        <Button>\r\n                            <p>Voltar</p>\r\n                        </Button>\r\n                    </Link>\r\n\r\n                </div> */}\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AEmpresaGeral;","import { Candidato } from \"../models/candidato\";\r\nimport { API_URL, handleErrors, TOKEN_KEY } from \"./apisettings\";\r\nimport MatchingApi from \"./matching\";\r\n\r\n// Define o controller de comunicação da API.\r\n// A URL ficaria assim:\r\n// http://localhost:5000/api/Candidato/\r\nconst CONTROLLER = \"Candidato/\";\r\n\r\n/**\r\n * Lista os candidatos.\r\n */\r\nfunction listar(): Promise<Candidato[]> {\r\n    return fetch(API_URL + CONTROLLER, {\r\n        method: \"GET\",\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n/**\r\n * \r\n * @param id ID do candidato\r\n * @returns O candidato buscado.\r\n */\r\nfunction listarPorStatus(id: number): Promise<Candidato> {\r\n    // http://localhost:5000/api/Candidato/5\r\n    return fetch(API_URL + CONTROLLER + id, {\r\n        method: \"GET\",\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n/**\r\n * \r\n * @param candidato Objeto candidato a ser adicionado/atualizado.\r\n * @param id ID do candidato a ser atualizado.  O valor é 0 quando apenas quer adicionar.\r\n * @returns Objeto candidato se a operação for feita com sucesso, caso contrário retorno nada.\r\n */\r\nfunction salvar(candidato: Candidato, id: number): Promise<Candidato> {\r\n\r\n    const method = (id === 0 ? 'POST' : 'PUT');\r\n    const urlRequest = (id === 0 ? API_URL + CONTROLLER : API_URL + CONTROLLER + id);\r\n\r\n    return fetch(urlRequest, {\r\n        method: method,\r\n        body: JSON.stringify(candidato),\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(() => {\r\n            MatchingApi.atualizar();\r\n            return candidato as any;\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n/**\r\n * \r\n * @param id ID do Candidato\r\n * @param file Foto\r\n */\r\nfunction uploadFoto(id: number, file: Blob) {\r\n\r\n    var img = new FormData();\r\n    img.append(\"file\", file, id.toString());\r\n\r\n    return fetch(API_URL + CONTROLLER + \"Img/upload/\" + id, {\r\n        method: \"POST\",\r\n        body: img,\r\n        headers: {\r\n            'Accept': '*/*',\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(() => id)\r\n        .catch(err => console.error(err));\r\n}\r\n\r\nfunction mudarStatus(id: number, idStatus: number): void {\r\n\r\n    fetch(API_URL + CONTROLLER + `Status?id=${id}&idStatus=${idStatus}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .catch(err => console.error(err));\r\n}\r\n\r\nexport default { listar, buscarPorId: listarPorStatus, salvar, uploadFoto, mudarStatus }","import React, { ButtonHTMLAttributes } from 'react';\r\nimport './style.css';\r\n\r\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n    ghost?: Boolean;\r\n    color?: string;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ ghost, ...props }) => {\r\n\r\n    function renderNormal() {\r\n        return (\r\n            <button {...props} \r\n                type=\"button\"\r\n                className={\"button-normal focus:outline-none \" + props.className}>\r\n                {props.children}\r\n            </button>\r\n        )\r\n    }\r\n\r\n    function renderGhost() {\r\n        return (\r\n            <button {...props} type=\"button\"\r\n                className={\"button-ghost focus:outline-none \" + props.className}>\r\n                {props.children}\r\n            </button>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {ghost ? renderGhost() : renderNormal()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Button;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport './styles.css'\r\n\r\ninterface CustomDialogue extends Modal.Props {\r\n    title: string;\r\n}\r\n\r\nconst Dialog: React.FC<CustomDialogue> = ({ title, ...props }) => {\r\n\r\n    const [open, setOpen] = useState(props.isOpen);\r\n\r\n    useEffect(() => {\r\n        setOpen(props.isOpen)\r\n    }, [props]);\r\n\r\n\r\n    const customStyles: ReactModal.Styles = {\r\n        content: {\r\n            top: '50%',\r\n            left: '50%',\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            marginRight: '-50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            maxHeight: 'calc(100vh - 80px)',\r\n            overflowY: 'auto',\r\n            position: 'absolute'\r\n        }\r\n    };\r\n\r\n    function closeModal() {\r\n        setOpen(false)\r\n    }\r\n\r\n    Modal.setAppElement('#root');\r\n\r\n    return (\r\n        <Modal {...props}\r\n            onRequestClose={props.onRequestClose} isOpen={open}\r\n            style={customStyles} overlayClassName=\"dialog-overlay\"\r\n            shouldCloseOnOverlayClick={true}>\r\n            <p className=\"pb-4 text-center\">{title}</p>\r\n            <hr />\r\n            <div className=\"absolute h-6 w-6 rounded-full bg-transparent cursor-pointer\r\n                            ri-close-line text-black hover:text-red-600 text-3xl\r\n                            text-center right-0 top-0 flex items-center justify-center\r\n                            transform -translate-x-2 translate-y-2 overflow-visible\"\r\n                onClick={closeModal}>\r\n            </div>\r\n            <div className=\"pt-2\">\r\n                {props.children}\r\n            </div>\r\n        </Modal>\r\n    )\r\n\r\n}\r\n\r\nexport default Dialog\r\n","import { Candidatura } from \"./candidatura\";\r\nimport { Endereco } from \"./endereco\";\r\nimport { HabilidadeCandidato } from \"./habilidadeCandidato\";\r\nimport { Matching } from \"./matching\";\r\nimport { StatusUsuario } from \"./statusUsuario\";\r\nimport { Usuario } from \"./usuario\";\r\n\r\nexport class Candidato {\r\n    idUsuario?: number;\r\n    idStatusUsuario?: number;\r\n    idEndereco?: number | null;\r\n    nome?: string;\r\n    sobrenome?: string;\r\n    curso?: string;\r\n    formacaoAcademica?: string;\r\n    matricula?: string;\r\n    cpf?: string;\r\n    rg?: string;\r\n    telefoneCandidato?: string;\r\n    celularCandidato?: string;\r\n    dataNascimento?: string;\r\n    visualizacao?: number;\r\n    idEnderecoNavigation?: Endereco = undefined;\r\n    idStatusUsuarioNavigation?: StatusUsuario = undefined;\r\n    idUsuarioNavigation?: Usuario = undefined;\r\n    candidatura?: Candidatura[] = [];\r\n    habilidadeCandidato?: HabilidadeCandidato[] = [];\r\n    matching?: Matching[] = [];\r\n}","/* eslint-disable eqeqeq */\r\nimport React, { useEffect, useState } from 'react';\r\nimport Card from '../../components/card/index';\r\nimport CandidatoApi from '../../api/candidatos';\r\nimport HabilidadeApi from '../../api/habilidades';\r\nimport ImgCandidatoDefault from '../../assets/imgs/default-candidato.png'\r\nimport Sidebar from '../../components/sidebar/Index';\r\nimport Loader from '../../components/loader';\r\nimport Hamburguer from '../../components/hamburguer';\r\nimport Button from '../../components/button';\r\nimport Dialog from '../../components/dialog';\r\nimport Pagination from '../../components/pagination';\r\nimport { Candidato } from '../../models/candidato';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_URL } from '../../api/apisettings';\r\nimport { toDate, toHour } from '../../services/date';\r\nimport { useAlert } from 'react-alert';\r\nimport { Jwt } from '../../services/auth';\r\nimport { StatusUsuario } from '../../utils/enums';\r\nimport LoadingPage from '../loading';\r\nimport { HabilidadeCandidato } from '../../models/habilidadeCandidato';\r\nimport { Habilidade } from '../../models/habilidade';\r\n\r\nfunction AListaCandidato({ match }: any) {\r\n    const {\r\n        params: { id },\r\n    } = match;\r\n    const [candidatos, setCandidatos] = useState<Candidato[]>([]);\r\n    const [candidato, setCandidato] = useState<Candidato>(new Candidato());\r\n    const [habilidades, setHabilidades] = useState<Habilidade[]>([]);\r\n    const [visualizarPerfil, setVisualizarPerfil] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [candidatosPorPagina] = useState(10);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const indexOfLastPost = currentPage * candidatosPorPagina;\r\n    const indexOfFirstPost = indexOfLastPost - candidatosPorPagina;\r\n    const candidatosAtuais = candidatos.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const alert = useAlert();\r\n\r\n    const paginate = (pageNumber: any) => setCurrentPage(pageNumber);\r\n\r\n    useEffect(() => {\r\n        Promise.all([\r\n            CandidatoApi.listar().then(data => setCandidatos(data)),\r\n            CandidatoApi.buscarPorId(id).then(data => setCandidato(data)),\r\n            HabilidadeApi.listar().then(data => setHabilidades(data))\r\n        ])\r\n            .then(() => setIsLoading(false))\r\n    }, []);\r\n\r\n    function openPerfil(candidatoP: Candidato) {\r\n        setCandidato(candidatoP);\r\n        setVisualizarPerfil(true);\r\n    }\r\n\r\n    function closePerfil() {\r\n        setCandidato({});\r\n        setVisualizarPerfil(false);\r\n    }\r\n\r\n\r\n    function renderCandidatos() {\r\n\r\n        return candidatosAtuais!.map((item: Candidato) => {\r\n            return (\r\n\r\n                <Card className=\"flex flex-col mb-5\" key={item.idUsuario}>\r\n                    {/* Conteudo encima */}\r\n                    <div className=\"flex flex-row pb-2\">\r\n                        <div className=\"pr-2\">\r\n                            <img className=\"w-16 h-16 object-cover rounded-full\"\r\n                                src={`${API_URL}Candidato/Img/${item.idUsuario}`}\r\n                                onError={e => e.currentTarget.src = ImgCandidatoDefault} alt=\"img candidato\">\r\n                            </img>\r\n                        </div>\r\n                        <p className=\"flex items-center\">{`${item?.nome} ${item?.sobrenome || \"\"}`}</p>\r\n                    </div>\r\n                    <hr />\r\n                    {/* Conteudo debaixo */}\r\n                    <div className=\"flex flex-row p-2 text-sm justify-between items-center\">\r\n                        <div className=\"flex flex-col w-1/2 pr-2\">\r\n                            <div>\r\n                                <i className=\"ri-profile-line text-lg\" />\r\n                                <span> Cursando {item.curso}</span>\r\n                            </div>\r\n                            <div>\r\n                                <i className=\"ri-map-pin-line text-lg\"></i>\r\n                                <span> {item.idEnderecoNavigation?.localCompleto}</span>\r\n                            </div>\r\n                            <div>\r\n                                <i className=\"ri-time-line text-lg\"></i>\r\n                                <span> Inscrito em {`${toDate(new Date(item.idUsuarioNavigation?.dataCadastrado!))} ${toHour(new Date(item.idUsuarioNavigation?.dataCadastrado!))}`}</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"hover-gray-200 p-5\" onClick={() => openPerfil(item)}>\r\n                            <span className=\"ri-file-text-line text-2xl flex justify-center cursor-pointer\"></span>\r\n                            <span className=\"cursor-pointer\">Ver Perfil</span>\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n            )\r\n        })\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <LoadingPage />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"body w-full\">\r\n            <Hamburguer className=\"md:hidden flex fixed\" />\r\n            <Sidebar className=\"md:flex hidden\"></Sidebar>\r\n            <main className=\"w-full m-5 flex flex-col\">\r\n                <Dialog isOpen={visualizarPerfil} onAfterClose={closePerfil}\r\n                    title=\"Detalhes do candidato\">\r\n                    <div className=\"flex justify-center gap-2 mt-6\">\r\n                        <div className=\"flex flex-col w-50em\">\r\n                            <div className=\"flex flex-col gap-5 mb-10 self-center\">\r\n                                <img className=\"w-24 h-24 object-cover rounded-full self-center\"\r\n                                    src={`${API_URL}Candidato/Img/${candidato?.idUsuario}`}\r\n                                    onError={e => e.currentTarget.src = ImgCandidatoDefault} alt=\"img candidato\">\r\n                                </img>\r\n                                <div>\r\n                                    <p className=\"text-lg\">{`${candidato?.nome}  ${candidato?.sobrenome || \"\"}`}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"grid md:grid-cols-2 grid-cols-1\">\r\n                                {/* Coluna Esquerda */}\r\n                                <div className=\"flex flex-col flex pr-10\">\r\n                                    <div>\r\n                                        <div className=\"mb-8\">\r\n                                            <p className=\"font-bold\">Email</p>\r\n                                            <p>{candidato?.idUsuarioNavigation?.email}</p>\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\"mb-8\">\r\n                                            <p className=\"font-bold\">Endereço</p>\r\n                                            <p>{candidato?.idEnderecoNavigation?.localCompleto}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"mb-8\">\r\n                                            <p className=\"font-bold\"> Matrícula</p>\r\n                                            <p>{candidato?.matricula}</p>\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"mb-8\">\r\n                                            <p className=\"font-bold\"> Curso</p>\r\n                                            <p>{candidato?.curso}</p>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Coluna Direita */}\r\n                                <div className=\"flex flex-col\">\r\n                                    <div>\r\n                                        <div className=\"mb-8\">\r\n                                            <p className=\"font-bold\">Data de Nascimento</p>\r\n                                            <p>{toDate(new Date(candidato?.dataNascimento!))}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"mb-8\">\r\n                                            <p className=\"font-bold\">Celular</p>\r\n                                            <p>{candidato?.celularCandidato}</p>\r\n                                        </div>\r\n                                        <div className=\"mb-8\">\r\n                                            <p className=\"font-bold\">Telefone</p>\r\n                                            <p>{candidato?.telefoneCandidato}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {candidato?.habilidadeCandidato?.length! > 0 && (\r\n                                <div>\r\n                                    <p className=\"font-bold\">Habilidades</p>\r\n                                    <div className=\"flex flex-row flex-wrap gap-2\">\r\n                                        {candidato.habilidadeCandidato?.map((item: HabilidadeCandidato) => {\r\n                                            return (\r\n                                                <span className=\"bg-gray-400 p-2 rounded-full h-8 flex items-center cursor-pointer\">\r\n                                                    {habilidades?.find(h => h.idHabilidade == item.idHabilidade)?.nomeHabilidade}\r\n                                                </span>\r\n                                            )\r\n                                        })\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                            <div className=\"flex flex-col items-center mt-5\">\r\n                                <div className=\"pb-5\">\r\n                                    {Jwt().Role == 1 && candidato?.idStatusUsuario == StatusUsuario.ATIVO && (\r\n                                        <Button onClick={() => {\r\n                                            CandidatoApi.mudarStatus(candidato.idUsuario!, StatusUsuario.BLOQUEADO)\r\n                                            alert.success(\"Usuário bloqueado.\")\r\n\r\n                                        }} name=\"Bloquear Perfil\">Bloquear Perfil</Button>\r\n                                    )}\r\n\r\n                                    {Jwt().Role == 1 && candidato?.idStatusUsuario == StatusUsuario.BLOQUEADO && (\r\n                                        <Button onClick={() => {\r\n                                            CandidatoApi.mudarStatus(candidato.idUsuario!, StatusUsuario.ATIVO)\r\n                                            alert.success(\"Usuário foi desbloqueado.\")\r\n\r\n                                        }} name=\"Bloquear Perfil\">Desbloquear</Button>\r\n                                    )}\r\n\r\n                                    {Jwt().Role == 2 && (\r\n                                        <Link to=\"/Empresa/perfil\"><Button name=\"editar \">Concluir</Button></Link>\r\n                                    )}\r\n                                </div>\r\n                                <Button ghost onClick={closePerfil}>Fechar</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n                <h1 className=\"p-10 md:text-2xl text-xl flex justify-center\">Gerenciamento de candidatos</h1>\r\n                <div className=\"lg:w-2/3 m-auto md:text-base text-sm\">\r\n                    {renderCandidatos()}\r\n                </div>\r\n                <Pagination\r\n                    className=\"mt-auto my-5 flex flex-col items-center\"\r\n                    objectsPerPage={candidatosPorPagina}\r\n                    totalObjects={candidatos.length}\r\n                    paginate={paginate}\r\n                />\r\n\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AListaCandidato;","import React, { SelectHTMLAttributes } from 'react';\r\n\r\ninterface SelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n    label: string;\r\n    name: string;\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({ label, name, ...rest }) => {\r\n    return (\r\n        <div className={rest.className}>\r\n            <label className=\"font-bold\" htmlFor={name}>{label}</label><br />\r\n            <div className=\"rounded-md border-2 border-gray-400 w-64\r\n                            hover:border-gray-500 w-full\">\r\n                <select {...rest} className=\"bg-gray-100 focus:bg-white border-0 \r\n                                            focus:outline-none w-full py-2 px-2\"\r\n                    id={name}>\r\n                    {rest.children}\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Select;","/* eslint-disable eqeqeq */\r\nimport React, { useEffect, useState } from 'react';\r\nimport Card from '../../components/card';\r\nimport ImgEmpresaDefault from '../../assets/imgs/default-empresa.png'\r\nimport Sidebar from '../../components/sidebar/Index';\r\nimport Select from '../../components/select';\r\nimport VagaApi from '../../api/vagas';\r\nimport HabilidadeApi from '../../api/habilidades';\r\nimport CandidatoApi from '../../api/candidatos';\r\nimport EmpresaApi from '../../api/empresa';\r\nimport Loader from '../../components/loader';\r\nimport Button from '../../components/button';\r\nimport Hamburguer from '../../components/hamburguer';\r\nimport { Vaga } from '../../models/vaga';\r\nimport { HabilidadeVaga } from '../../models/habilidadeVaga';\r\nimport { Habilidade } from '../../models/habilidade';\r\nimport { Matching } from '../../models/matching';\r\nimport { Link } from 'react-router-dom';\r\nimport { Jwt } from '../../services/auth';\r\nimport { API_URL } from '../../api/apisettings';\r\nimport { toDate } from '../../services/date';\r\nimport Pagination from '../../components/pagination';\r\nimport { TipoUsuario } from '../../utils/enums';\r\nimport LoadingPage from '../loading';\r\nimport { Empresa } from '../../models/empresa';\r\n\r\nfunction VagasRecomendadas() {\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [vagasPorPagina] = useState(5);\r\n    const [vagas, setVagas] = useState<Vaga[]>([]);\r\n    const [habilidades, setHabilidades] = useState<Habilidade[]>([]);\r\n    const [empresas, setEmpresas] = useState<Empresa[]>([]);\r\n    const [matches, setMatches] = useState<Matching[]>([])\r\n    const [filtro, setFiltro] = useState(\r\n        {\r\n            titulo: \"\",\r\n            minSalario: 0,\r\n            idHabilidade: 0\r\n        }\r\n    );\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const indexOfLastPost = currentPage * vagasPorPagina;\r\n    const indexOfFirstPost = indexOfLastPost - vagasPorPagina;\r\n    const vagasAtuais = vagas.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const paginate = (pageNumber: any) => setCurrentPage(pageNumber);\r\n\r\n    useEffect(() => {\r\n        Promise.all([\r\n            VagaApi.listar().then(data => setVagas(data)),\r\n            HabilidadeApi.listar().then(data => setHabilidades(data)),\r\n            EmpresaApi.listar().then(data => setEmpresas(data)),\r\n            CandidatoApi.buscarPorId(Jwt().jti).then(data => {\r\n                if (data) {\r\n                    setMatches(data.matching!\r\n                        .sort((m1, m2) => m2.porcentagem! - m1.porcentagem!))\r\n                }\r\n            })\r\n        ])\r\n            .then(() => setIsLoading(false));\r\n    }, [])\r\n\r\n    function filtrarVagas() {\r\n        VagaApi.listarPorFiltro(filtro.titulo, filtro.minSalario, filtro.idHabilidade)\r\n            .then(data => setVagas(data))\r\n    }\r\n\r\n    function renderVagas() {\r\n\r\n        return vagasAtuais.map((item: Vaga) => {\r\n            return (\r\n                <Link className=\"cursor-pointer\" to={`/vaga/${item.idVaga}`}>\r\n                    <Card className=\"flex flex-col hover-gray-100\">\r\n                        {/* Conteudo encima */}\r\n                        <div className=\"flex flex-row p-2\">\r\n                            <div className=\"pr-2\">\r\n                                <img className=\"w-16 h-16 object-contain\"\r\n                                    src={`${API_URL}Empresa/Img/${item.idEmpresa}`}\r\n                                    onError={e => e.currentTarget.src = ImgEmpresaDefault} alt=\"Empresa\"></img>\r\n                            </div>\r\n                            <p className=\"flex items-center\">{item.titulo}</p>\r\n                        </div>\r\n                        <hr />\r\n                        {/* Conteudo debaixo */}\r\n                        <div className=\"flex flex-row pb-2 text-sm\">\r\n                            <div className=\"flex flex-col w-1/2 pr-2\">\r\n                                <div>\r\n                                    <i className=\"ri-money-dollar-circle-line text-lg\" />\r\n                                    <span> R$ {item.salario}</span>\r\n                                </div>\r\n                                <div>\r\n                                    <i className=\"ri-map-pin-line text-lg\"></i>\r\n                                    <span> {item.idEnderecoNavigation?.localCompleto}</span>\r\n                                </div>\r\n                                <div>\r\n                                    <i className=\"ri-time-line text-lg\"></i>\r\n                                    <span> Expira em {toDate(new Date(item.dataExpiracao!))}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"w-1/2 flex flex-row flex-wrap\">\r\n                                {item.habilidadeVaga?.map((hv: HabilidadeVaga) => {\r\n                                    return (\r\n                                        // min-w-0 é necessario para o truncate funcionar\r\n                                        <div className=\"bg-gray-400 rounded-full p-2 m-1 h-8 min-w-0 cursor-pointer flex items-center\">\r\n                                            <p className=\"truncate\">\r\n                                                {habilidades.find((h: Habilidade) => h.idHabilidade == hv.idHabilidade)?.nomeHabilidade}\r\n                                            </p>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                </Link>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderRecomendados() {\r\n\r\n        return matches.map((item: Matching) => {\r\n            return (\r\n                <Link className=\"cursor-pointer\" to={`/vaga/${item.idVaga}`}>\r\n                    <div className=\"w-full hover-gray-100 p-2\">\r\n                        {/* Conteudo encima */}\r\n                        <div className=\"flex items-center gap-2\">\r\n                            <div className=\"border-2 border-primary-color h-12 w-12 rounded-full\">\r\n                                <p className=\"text-center pt-3 m-auto text-primary-color font-bold\">\r\n                                    {Math.round(item.porcentagem!)}%\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"flex-1\">\r\n                                <p className=\"text-sm\">{item.idVagaNavigation?.titulo}</p>\r\n                                <div className=\"gap-2 text-xs\">\r\n                                    <span>\r\n                                        {empresas.find(e => e.idUsuario == item.idVagaNavigation?.idEmpresa)?.nomeFantasia}\r\n                                    </span>\r\n                                    <span> - á {Math.round(item.distancia!)}km</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                </Link>\r\n            )\r\n        })\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <LoadingPage />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"body w-full\">\r\n            <Hamburguer className=\"md:hidden flex fixed\" />\r\n            <Sidebar className=\"md:flex hidden\"></Sidebar>\r\n            <main className=\"w-full m-5\">\r\n                <h1 className=\"text-2xl text-center m-5\">Busca por Vagas</h1>\r\n                {/* Searchbar */}\r\n                <div className=\"flex gap-2 items-center md:w-1/2 w-4/5 m-auto py-5\">\r\n                    <input className=\"w-full h-10 rounded-md border-1 \r\n                                    shadow shadow-md outline-none p-2\"\r\n                        value={filtro.titulo}\r\n                        onChange={e => setFiltro({ ...filtro, titulo: e.target.value })}\r\n                        placeholder=\"Ex: Desenvolvedor C#...\" />\r\n                    <div>\r\n                        <Button className=\" ri-search-line text-md\" onClick={(e: any) => filtrarVagas()}></Button>\r\n                    </div>\r\n                </div>\r\n                <section className=\"grid lg:grid-cols-4 grid-cols-1 lg:gap-5\">\r\n                    {/* Grid Esquerdo */}\r\n                    <div className=\"col-span-1 xl:w-64 pb-5 w-full ml-auto\">\r\n                        <Card className=\"flex flex-col\">\r\n                            <div>\r\n                                <p className=\"text-center text-lg pb-5\">Filtros</p>\r\n                                <hr />\r\n                            </div>\r\n                            <div className=\"my-2\">\r\n                                <Select label=\"Salário\" name=\"salario\"\r\n                                    onChange={e => setFiltro({ ...filtro, minSalario: parseInt(e.target.value) })}\r\n                                    value={filtro.minSalario}>\r\n                                    <option value=\"0\" selected>Selecione um mínimo</option>\r\n                                    <option value=\"500\">R$500</option>\r\n                                    <option value=\"600\">R$600</option>\r\n                                    <option value=\"700\">R$700</option>\r\n                                    <option value=\"800\">R$800</option>\r\n                                    <option value=\"900\">R$900</option>\r\n                                    <option value=\"1000\">R$1.000</option>\r\n                                    <option value=\"1500\">R$1.500</option>\r\n                                    <option value=\"2000\">R$2.000</option>\r\n                                    <option value=\"3000\">R$3.000</option>\r\n                                    <option value=\"4000\">R$4.000</option>\r\n                                    <option value=\"8000\">R$8.000</option>\r\n                                </Select>\r\n                                <br />\r\n                                <Select label=\"Habilidade\" name=\"habilidade\"\r\n                                    onChange={e => setFiltro({ ...filtro, idHabilidade: parseInt(e.target.value) })}\r\n                                    value={filtro.idHabilidade}>\r\n                                    <option value=\"0\" selected>Selecione uma opção</option>\r\n                                    {habilidades.map((h: Habilidade) => {\r\n                                        return (\r\n                                            <option value={h.idHabilidade}>\r\n                                                {h.nomeHabilidade}\r\n                                            </option>\r\n                                        )\r\n                                    })}\r\n                                </Select>\r\n                                <div className=\" flex flex-col items-center pt-3 \">\r\n                                    <Button className=\" text-md\" onClick={(e: any) => filtrarVagas()}>Filtrar</Button>\r\n                                </div>\r\n                            </div>\r\n                        </Card>\r\n                    </div>\r\n                    {/* Grid do meio */}\r\n                    <div className=\"col-span-2\">\r\n                        {/* Lista de Vagas */}\r\n                        <div className=\"flex flex-col gap-5\">\r\n                            {renderVagas()}\r\n                            <Pagination\r\n                                className=\"mt-auto my-5 flex flex-col items-center\"\r\n                                objectsPerPage={vagasPorPagina}\r\n                                totalObjects={vagas.length}\r\n                                paginate={paginate}\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n                    {/* Grid direito */}\r\n                    {matches.length > 0 &&\r\n                        <Card className=\"lg:w-64 w-full fit-content\"\r\n                            style={{ height: 'min-content' }}>\r\n                            <div>\r\n                                <p className=\"text-center text-lg pb-5\">Recomendados para você</p>\r\n                                <hr />\r\n                            </div>\r\n                            <div className=\"col-span-1 flex flex-col w-full mr-auto\">\r\n                                {renderRecomendados()}\r\n                            </div>\r\n                        </Card>\r\n                    }\r\n                </section>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VagasRecomendadas","import React from 'react';\r\nimport InputMask, { Props } from 'react-input-mask';\r\n// import '../../components/input/style.css';\r\n\r\ninterface InputProps extends Props {\r\n    label?: string;\r\n    name: string;\r\n    hideLabel?: boolean;\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ label, name, hideLabel, ...props }) => {\r\n    return (\r\n        <div className={props.className}>\r\n            {!hideLabel && (<div><label className={\"font-bold pt-3\"} htmlFor={name}>{label}</label><br /></div>)}\r\n            <div className=\"rounded-md border-2 border-gray-400 w-64\r\n                            hover:border-gray-500 w-full\">\r\n                <InputMask value=\"\" {...props} type={props.type} className=\"bg-white focus:bg-gray-100 border-0 \r\n                                            focus:outline-none w-full py-2 px-2 \r\n                                            appearance-none\"\r\n                    id={name}>\r\n                </InputMask>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;","import { Beneficio } from \"../models/beneficio\";\r\nimport { API_URL, handleErrors, TOKEN_KEY } from \"./apisettings\";\r\n\r\nconst CONTROLLER = \"Beneficio/\";\r\n\r\n/**\r\n * Lista beneficios.\r\n */\r\nfunction listar(): Promise<Beneficio[]> {\r\n    return fetch(API_URL + CONTROLLER, {\r\n        method: \"GET\",\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n/**\r\n * \r\n * @param id ID da beneficio\r\n * @returns A beneficio buscada.\r\n */\r\nfunction buscarPorId(id: number): Promise<Beneficio> {\r\n    return fetch(API_URL + CONTROLLER + id, {\r\n        method: \"GET\",\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n/**\r\n * \r\n * @param beneficio Objeto beneficio a ser adicionado/atualizado.\r\n * @param id ID do beneficio a ser atualizado.  O valor é 0 quando apenas quer adicionar.\r\n * @returns Objeto beneficio se a operação for feita com sucesso, caso contrário retorno nada.\r\n */\r\nfunction salvar(beneficio: Beneficio, id: number): Promise<Beneficio> {\r\n\r\n    const method = (id === 0 ? 'POST' : 'PUT');\r\n    const urlRequest = (id === 0 ? API_URL + CONTROLLER : API_URL + CONTROLLER + id);\r\n\r\n    return fetch(urlRequest, {\r\n        method: method,\r\n        body: JSON.stringify(beneficio),\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(() => {\r\n            return beneficio as any;\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n/**\r\n * Deleta uma beneficio.\r\n * @param id ID da beneficio\r\n */\r\nfunction deletar(id: number): void {\r\n    fetch(API_URL + CONTROLLER + id, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => response.json())\r\n        .catch(err => console.error(err));\r\n}\r\n\r\nexport default { listar, buscarPorId, salvar, deletar }","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction ButtonForm(props: any) {\r\n    return (\r\n        <div>\r\n            <input {...props} type=\"submit\"\r\n                className={\"button-normal-form focus:outline-none \" +\r\n                    \"cursor-pointer \" + props.className}>\r\n                {props.children}\r\n            </input>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ButtonForm;\r\n","/* eslint-disable eqeqeq */\r\nimport React, { useEffect, useState } from 'react';\r\nimport Button from '../../components/button';\r\nimport Input from '../../components/input';\r\nimport VagaApi from '../../api/vagas'\r\nimport EmpresaApi from '../../api/empresa';\r\nimport HabilidadeApi from '../../api/habilidades';\r\nimport BeneficioApi from '../../api/beneficios';\r\nimport NotificacaoApi from '../../api/notificacoes'\r\nimport ButtonForm from '../../components/buttonForm';\r\nimport Select from '../../components/select';\r\nimport Sidebar from '../../components/sidebar/Index';\r\nimport Hamburguer from '../../components/hamburguer';\r\nimport { BeneficioVaga } from '../../models/beneficioVaga';\r\nimport { HabilidadeVaga } from '../../models/habilidadeVaga';\r\nimport { Empresa } from '../../models/empresa';\r\nimport { Beneficio } from '../../models/beneficio';\r\nimport { Habilidade } from '../../models/habilidade';\r\nimport { Vaga } from '../../models/vaga';\r\nimport { Jwt } from '../../services/auth';\r\nimport { useAlert } from 'react-alert';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { StatusUsuario } from '../../utils/enums';\r\nimport LoadingPage from '../loading';\r\n\r\nfunction ECadastrarVagas() {\r\n\r\n    const [empresa, setEmpresa] = useState<Empresa>();\r\n    const [vagaForm, setVagaForm] = useState<Vaga>(new Vaga());\r\n    const [beneficios, setBeneficios] = useState<Beneficio[]>([]);\r\n    const [habilidades, setHabilidades] = useState<Habilidade[]>([]);\r\n    const [idBeneficio, setIdBeneficio] = useState<number>(0);\r\n    const [idHabilidade, setIdHabilidade] = useState<number>(0);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const alert = useAlert();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        Promise.all([\r\n            EmpresaApi.buscarPorId(Jwt().jti).then(data => setEmpresa(data)),\r\n            HabilidadeApi.listar().then(data => setHabilidades(data)),\r\n            BeneficioApi.listar().then(data => setBeneficios(data))\r\n        ])\r\n        .then(() => setIsLoading(false))\r\n        \r\n    }, []);\r\n\r\n    function salvar() {\r\n        // Deixa indefinido para não enviar no body da requisição.\r\n        var vagaJson = {\r\n            ...vagaForm,\r\n            idEmpresaNavigation: undefined,\r\n            idEmpresa: empresa?.idUsuario,\r\n            dataCriado: new Date().toDateString()\r\n        }\r\n\r\n        if (empresa!.idStatusUsuario == StatusUsuario.BLOQUEADO) {\r\n            alert.error(\"Você não tem permissão para isso\");\r\n            return;\r\n        }\r\n\r\n        if (vagaJson != undefined) {\r\n            VagaApi.salvar(vagaJson, 0).then(data => {\r\n                if (data != null || data != undefined) {\r\n                    NotificacaoApi.addNotificacao(`Empresa ${empresa?.nomeFantasia} cadastrou a vaga ${vagaForm.titulo}.`)\r\n                    alert.success(\"Cadastrado com sucesso.\", {\r\n                        // Manda para página \"Suas vagas\" quando o alerta desaparecer.\r\n                        onClose: () => history.push(\"/Empresa/suas-vagas\")\r\n                    });\r\n                }\r\n            });\r\n        } else {\r\n            alert.error('Campos não preenchidos.')\r\n        }\r\n    }\r\n\r\n    function addBeneficio(id: number) {\r\n        var beneficiosAdd: BeneficioVaga[] = vagaForm.beneficioVaga!;\r\n        BeneficioApi.buscarPorId(id).then(data => {\r\n            beneficiosAdd.push({ idBeneficio: id })\r\n            setVagaForm({ ...vagaForm, beneficioVaga: beneficiosAdd })\r\n\r\n        })\r\n    }\r\n\r\n    function removeBeneficio(id: number) {\r\n        var beneficios: BeneficioVaga[] = vagaForm.beneficioVaga!;\r\n        var beneficiosDel = beneficios.filter(b => b.idBeneficio !== id)\r\n        setVagaForm({ ...vagaForm, beneficioVaga: beneficiosDel })\r\n    }\r\n\r\n    function addHabilidade(id: number) {\r\n        var habilidadesAdd: HabilidadeVaga[] = vagaForm.habilidadeVaga!;\r\n        HabilidadeApi.buscarPorId(id).then(data => {\r\n            habilidadesAdd.push({ idHabilidade: id })\r\n            setVagaForm({ ...vagaForm, habilidadeVaga: habilidadesAdd })\r\n        })\r\n    }\r\n\r\n    function removeHabilidade(id: number) {\r\n        var habilidades: HabilidadeVaga[] = vagaForm.habilidadeVaga!;\r\n        var habilidadesDel = habilidades.filter(h => h.idHabilidade !== id)\r\n        setVagaForm({ ...vagaForm, habilidadeVaga: habilidadesDel })\r\n    }\r\n\r\n    function renderHabilidades() {\r\n        if (vagaForm.habilidadeVaga?.length == 0) return (\r\n            <div></div>\r\n        )\r\n\r\n        return vagaForm.habilidadeVaga?.map((item: HabilidadeVaga) => {\r\n            return (\r\n                <span className=\"bg-gray-400 p-2 rounded-full m-1 h-8 flex items-center cursor-pointer\"\r\n                    onClick={() => removeHabilidade(item.idHabilidade!)}>\r\n                    {habilidades?.find(h => h.idHabilidade == item.idHabilidade)?.nomeHabilidade}\r\n                </span>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderBeneficios() {\r\n        if (vagaForm.beneficioVaga?.length == 0) return (\r\n            <div></div>\r\n        )\r\n\r\n        return vagaForm.beneficioVaga?.map((item: BeneficioVaga) => {\r\n            return (\r\n                <span className=\"bg-gray-400 p-2 rounded-full m-1 h-8 flex items-center cursor-pointer\"\r\n                    onClick={() => removeBeneficio(item.idBeneficio!)}>\r\n                    {beneficios?.filter(b => b.idBeneficio == item.idBeneficio)[0].nomeBeneficio}\r\n                </span>\r\n            )\r\n        })\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <LoadingPage/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"body w-full\">\r\n            <Hamburguer className=\"md:hidden flex fixed\" />\r\n            <Sidebar className=\"md:flex hidden\"></Sidebar>\r\n            <main className=\"w-full m-5\">\r\n                <h1 className=\"p-10 md:text-2xl text-xl flex justify-center\">Cadastrar Vaga</h1>\r\n\r\n                <form className=\"w-1/2 rounded-md lg:w-1/2 m-auto w-full\"\r\n                    onSubmit={event => {\r\n                        event.preventDefault();\r\n                        salvar();\r\n                    }}>\r\n\r\n                    <p className=\"font-bold mb-3\">Dados da vaga de emprego</p>\r\n                    <div className=\"flex\">\r\n                        <Input mask=\"\" className=\"flex-1\" placeholder='Nome do Título' name=\"título\" label=\"Titulo\"\r\n                            onChange={e => setVagaForm({ ...vagaForm, titulo: e.target.value })} required\r\n                            value={vagaForm.titulo}></Input>\r\n                        <Input mask=\"9999.99\" className=\"w-32 ml-4\" placeholder='1000,00' name=\"salário\" label=\"Salário\"\r\n                            onChange={e => setVagaForm({ ...vagaForm, salario: parseInt(e.target.value) })} required\r\n                            value={vagaForm.salario || \"\"}></Input>\r\n                    </div>\r\n                    <p className=\"font-bold mt-3\">Descrição</p>\r\n\r\n                    <div className=\"rounded-md border-2 border-gray-400 w-64 hover:border-gray-500 w-full\">\r\n                        <textarea className=\"bg-white focus:bg-gray-100 border-0 \r\n                                            focus:outline-none w-full py-2 px-2 \r\n                                            appearance-none\"\r\n                            onChange={e => setVagaForm({ ...vagaForm, descricao: e.target.value })} required\r\n                            value={vagaForm.descricao}>\r\n                        </textarea>\r\n                    </div>\r\n                    <div className=\"flex mt-1\">\r\n                        <Input mask=\"99999-999\" className=\"flex-1 mt-3\" placeholder='00001001' name=\"cep\"\r\n                            label=\"Cep\"\r\n                            onChange={e => setVagaForm({ ...vagaForm, idEnderecoNavigation: { cep: e.target.value } })} required\r\n                            value={vagaForm.idEnderecoNavigation?.cep}></Input>\r\n                        <Input mask=\"99/99/9999\" className=\"flex-1 ml-4 mt-3\" name=\"cep\" label=\"Data de expiração\"\r\n                            type=\"\"\r\n                            onChange={e => setVagaForm({ ...vagaForm, dataExpiracao: e.target.value })} required\r\n                            value={vagaForm.dataExpiracao}></Input>\r\n                    </div>\r\n                    <div className=\"flex mt-1 mb-1\">\r\n                        <Input mask=\"\" className=\"flex-1 mt-3\" placeholder='Programador Jr' name=\"Qualificação\" label=\"Qualificação\"\r\n                            onChange={e => setVagaForm({ ...vagaForm, qualificacao: e.target.value })} required\r\n                            value={vagaForm.qualificacao}></Input>\r\n                        <Input mask=\"99\" className=\"w-32 ml-4 mt-3\" placeholder='6 Horas' name=\"Carga Horária\" label=\"Carga Horária\"\r\n                            onChange={e => setVagaForm({ ...vagaForm, cargaHoraria: parseInt(e.target.value) })} required\r\n                            value={vagaForm.cargaHoraria}></Input>\r\n                    </div>\r\n\r\n                    {/* Input Beneficio */}\r\n                    <div className=\"flex items-end\">\r\n                        <Select className=\"w-full\" label=\"Beneficios\" name=\"beneficio\"\r\n                            onChange={e => setIdBeneficio(parseInt(e.target.value))}\r\n                            value={idBeneficio} required>\r\n                            <option value=\"0\" selected>Selecione uma opção</option>\r\n                            {beneficios?.map((h: Beneficio) => {\r\n                                return (\r\n                                    <option value={h.idBeneficio}>{h.nomeBeneficio}</option>\r\n                                )\r\n                            })}\r\n                        </Select>\r\n                        <Button className=\"ri-add-line ml-2\" ghost={true}\r\n                            disabled={idBeneficio == 0}\r\n                            onClick={() => addBeneficio(idBeneficio)}></Button>\r\n                    </div>\r\n                    <div className=\"flex flex-row flex-wrap m-2\">\r\n                        {renderBeneficios()}\r\n                    </div>\r\n\r\n                    {/* Input Habilidade */}\r\n                    <div className=\"flex items-end\">\r\n                        <Select className=\"w-full\" label=\"Habilidades\" name=\"habilidade\"\r\n                            onChange={e => setIdHabilidade(parseInt(e.target.value))}\r\n                            value={idHabilidade} required>\r\n                            <option value=\"0\" selected>Selecione uma opção</option>\r\n                            {habilidades?.map((h: Habilidade) => {\r\n                                return (\r\n                                    <option value={h.idHabilidade}>{h.nomeHabilidade}</option>\r\n                                )\r\n                            })}\r\n                        </Select>\r\n                        <Button className=\"ri-add-line ml-2\" ghost={true}\r\n                            disabled={idHabilidade == 0}\r\n                            onClick={() => addHabilidade(idHabilidade)}></Button>\r\n                    </div>\r\n                    <div className=\"flex flex-row flex-wrap m-2\">\r\n                        {renderHabilidades()}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div className=\"flex justify-center mt-4\">\r\n                            <ButtonForm className=\"\" value=\"Concluir\"></ButtonForm>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </main>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ECadastrarVagas","/* eslint-disable eqeqeq */\r\nimport React, { useEffect, useState } from 'react';\r\nimport VagaApi from '../../api/vagas'\r\nimport Card from '../../components/card';\r\nimport Loader from '../../components/loader';\r\nimport Sidebar from '../../components/sidebar/Index';\r\nimport Hamburguer from '../../components/hamburguer';\r\nimport { Vaga } from '../../models/vaga';\r\nimport { Link } from 'react-router-dom';\r\nimport { Jwt } from '../../services/auth';\r\nimport { toDate } from '../../services/date';\r\nimport Pagination from '../../components/pagination';\r\nimport LoadingPage from '../loading';\r\n\r\nfunction ESuasVagas() {\r\n\r\n    const [vagas, setVagas] = useState<Vaga[]>([]);\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [vagasPorPagina] = useState(6);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    // Get current posts\r\n    const indexOfLastPost = currentPage * vagasPorPagina;\r\n    const indexOfFirstPost = indexOfLastPost - vagasPorPagina;\r\n    const vagasAtuais = vagas.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const paginate = (pageNumber: any) => setCurrentPage(pageNumber);\r\n\r\n    useEffect(() => {\r\n        Promise.all([\r\n            VagaApi.listarPorEmpresa(Jwt().jti).then(data => setVagas(data))\r\n        ])\r\n        .then(() => setIsLoading(false));\r\n\r\n    }, []);\r\n\r\n    function renderVagas() {\r\n\r\n        return vagasAtuais.map((item: Vaga) => {\r\n            return (\r\n                <Link className=\"cursor-pointer\" to={{\r\n                    pathname: \"/Empresa/visualizar-vaga\",\r\n                    state: item\r\n                }}>\r\n                    <Card className=\"flex flex-col h-full hover-gray-100\" key={item.idVaga}>\r\n                        <div className=\"flex flex-row  items-center pb-2\">\r\n                            <div className=\"bg-transparent border-2 border-primary-color h-12 w-12 rounded-full \">\r\n                                <p className=\"text-center pt-3 m-auto text-primary-color font-bold\">{item.candidatura?.length}</p>\r\n                            </div>\r\n                            <h2 className=\"text-primary-color pl-2 font-bold\">Candidatos</h2>\r\n                        </div>\r\n                        <hr></hr>\r\n                        <div className=\"pt-2 pb-1\">\r\n                            <h2 className=''>{item.titulo}</h2>\r\n                        </div>\r\n                        <div className=\"text-sm\">\r\n                            <p><i className=\"ri-map-pin-line text-lg\"></i>{item.idEnderecoNavigation?.localCompleto}</p>\r\n                            <p><i className=\"ri-money-dollar-circle-line text-lg\"></i> R${item.salario}</p>\r\n                            <p><i className=\"ri-time-line text-lg\"></i> Criado em: {`${toDate(new Date(item.dataCriado!))}`}</p>\r\n                            <p><i className=\"ri-user-line text-lg\"></i> {item.visualizacao} visualizações</p>\r\n                        </div>\r\n                    </Card>\r\n                </Link>\r\n            )\r\n        })\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <LoadingPage/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"body w-full\">\r\n            <Hamburguer className=\"md:hidden flex fixed\" />\r\n            <Sidebar className=\"md:flex hidden\"></Sidebar>\r\n            <main className='w-full m-5 flex flex-col'>\r\n                <div className=\"lg:w-2/3 w-full mx-auto\">\r\n                    <h1 className=\"p-10 md:text-2xl text-xl flex justify-center\">Suas Vagas</h1>\r\n                    {vagas.length == 0 &&\r\n                        <div className=\"text-center\">\r\n                            <h2 className=\"text-left inline-block\">Parece que você ainda não anunciou nenhuma vaga.\r\n                            <Link to=\"cadastrar-vagas\"\r\n                                    // &nbsp; serve para adicionar uma letra vazia.\r\n                                    className=\"text-primary-color font-bold\">&nbsp;Crie uma agora.\r\n                            </Link></h2>\r\n                        </div>}\r\n                    <div className=\"grid lg:grid-cols-3 md:grid-cols-2 grid-cols-1 gap-4\">\r\n                        {renderVagas()}\r\n                    </div>\r\n                </div>\r\n                <Pagination\r\n                    className=\"mt-auto my-5 flex flex-col items-center\"\r\n                    objectsPerPage={vagasPorPagina}\r\n                    totalObjects={vagas.length}\r\n                    paginate={paginate}\r\n                />\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ESuasVagas","/* eslint-disable eqeqeq */\r\nimport React from 'react';\r\nimport Logo from '../../assets/imgs/logo-dark.png'\r\nimport Imagem from '../../assets/imgs/image-13@1x.jpg'\r\nimport LogoSenai from '../../assets/imgs/logo-senai-principal.png';\r\nimport Hamburguer from '../../components/hamburguer';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Jwt } from '../../services/auth';\r\nimport { TipoUsuario } from '../../utils/enums';\r\nimport { TOKEN_KEY } from '../../api/apisettings';\r\nimport './index.css'\r\n\r\nfunction Home() {\r\n\r\n    let history = useHistory();\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem(TOKEN_KEY);\r\n        history.push('/');\r\n    }\r\n\r\n    function renderNav() {\r\n\r\n        if (Jwt() === undefined || Jwt() === null) {\r\n            return (\r\n                // Não use fonte maior que font-base, pq fica muito grande.\r\n                // Porém, caso queira manipular o tamanho, vá na linha 83.\r\n                <div className=\"flex justify-end text-white text-lg m-5 nav pr-8\">\r\n                    <Link to=\"/login\" className=\"hover:text-gray-300\">Login</Link>\r\n                    <Link to=\"/cadastro\" className=\"ml-8 hover:text-gray-300\">Cadastro</Link>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (Jwt().Role == TipoUsuario.ADMINISTRADOR) {\r\n            return (\r\n                <div className=\"flex justify-end text-white m-5 nav\">\r\n                    <Link to=\"/Administrador/dashboard\"\r\n                        className=\"hover:text-gray-300\">Dashboard</Link>\r\n                    <Link to=\"/Administrador/gerenciamento-candidatos\"\r\n                        className=\"ml-4\">Gerenciar Candidatos</Link>\r\n                    <Link to=\"/Administrador/gerenciamento-empresas\"\r\n                        className=\"ml-4\">Gerenciar Empresas</Link>\r\n                    <span className=\"ml-4 hover:text-gray-300 cursor-pointer\"\r\n                        onClick={() => logout()}>Logoff</span>\r\n                </div>\r\n            )\r\n        }\r\n        else if (Jwt().Role == TipoUsuario.EMPRESA) {\r\n            return (\r\n                <div className=\"flex justify-end text-white m-5 nav\">\r\n                    <Link to=\"/Empresa/dashboard\"\r\n                        className=\"hover:text-gray-300\">Dashboard</Link>\r\n                    <Link to=\"/Empresa/suas-vagas\"\r\n                        className=\"ml-4\">Suas Vagas</Link>\r\n                    <Link to=\"/Empresa/cadastrar-vagas\"\r\n                        className=\"ml-4\">Cadastrar Vagas</Link>\r\n                    <Link to=\"/Empresa/editar-perfil\"\r\n                        className=\"ml-4\">Editar Perfil</Link>\r\n                    <span className=\"ml-4 hover:text-gray-300 cursor-pointer\"\r\n                        onClick={() => logout()}>Logoff</span>\r\n                </div>\r\n            )\r\n        }\r\n        else if (Jwt().Role == TipoUsuario.CANDIDATO) {\r\n            return (\r\n                <div className=\"flex justify-end text-white m-5 nav\">\r\n                    <Link to=\"/vagas\"\r\n                        className=\"ml-4 hover:text-gray-300\">Vagas</Link>\r\n                    <Link to=\"/Candidato/historico-candidaturas\"\r\n                        className=\"ml-4 hover:text-gray-300\">Histórico de Candidaturas</Link>\r\n                    <Link to={`/candidato/detalhes/${Jwt().Jti}`}\r\n                        className=\"ml-4 hover:text-gray-300\">Meu Perfil</Link>\r\n                    <span className=\"ml-4 hover:text-gray-300 cursor-pointer\"\r\n                        onClick={() => logout()}>Logoff</span>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"min-h-screen\">\r\n\r\n            <div className=\"mx-10 md:block hidden\r\n                            sm:text-base text-sm\">\r\n                {renderNav()}\r\n            </div>\r\n            <Hamburguer className=\"md:hidden flex fixed\" />\r\n\r\n\r\n            <div className=\"flex flex-wrap m-auto md:pt-16\">\r\n                <div className=\"md:w-1/2 w-full h-full m-auto\">\r\n                    <img className=\"lg:w-2/3 m-auto\" id=\"img\" src={Logo} alt=\"Logo escrito (Conexão Vagas)\" />\r\n                    <div className=\"conexao-frase text-white text-center m-auto\">\r\n                        <p>Conectamos as melhores</p>\r\n                        <p>vagas com os melhores</p>\r\n                        <p>candidatos</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"m-auto p-5\">\r\n                    <img src={Imagem} alt=\"Imagem com duas pessoas, uma sentada com um notebook e uma em pé com um livro na mão\" className=\"imagem\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"bottom-0 right-0 lg:absolute pr-24\"><img className=\"w-32 float-right m-5\" src={LogoSenai} alt=\"Logo vermelha do SENAI\" /></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","/* eslint-disable eqeqeq */\r\nimport React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Logo from '../../assets/imgs/logo-dark.png';\r\nimport Input from '../../components/input'\r\nimport Senai from '../../assets/imgs/logo-senai-principal.png';\r\nimport { API_URL, TOKEN_KEY } from '../../api/apisettings';\r\nimport { parseJwt } from '../../services/auth';\r\nimport ButtonForm from '../../components/buttonForm';\r\nimport { StatusUsuario, TipoUsuario } from '../../utils/enums';\r\nimport { useAlert } from 'react-alert';\r\nimport Sidebar from '../../components/sidebar/Index';\r\nimport Hamburguer from '../../components/hamburguer';\r\n\r\n\r\nfunction Login() {\r\n\r\n    let history = useHistory();\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [senha, setSenha] = useState('');\r\n\r\n    const alert = useAlert();\r\n\r\n    const login = () => {\r\n        const login = {\r\n            email: email,\r\n            senha: senha\r\n        }\r\n\r\n        fetch(API_URL + 'Login', {\r\n            method: 'POST',\r\n            body: JSON.stringify(login),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) alert.error(\"Senha ou Email incorretos\")\r\n                else return response.json()\r\n            })\r\n            .then(dados => {\r\n                if (dados.token !== undefined) {\r\n                    localStorage.setItem(TOKEN_KEY, dados.token)\r\n                    let jwt = parseJwt(dados.token)\r\n                    if (jwt.Role == TipoUsuario.ADMINISTRADOR) history.push('/Administrador/dashboard');\r\n                    else if (jwt.StatusUsuario == StatusUsuario.BLOQUEADO) alert.error(\"Seu perfil foi bloqueado\");\r\n                    else if (jwt.Role == TipoUsuario.EMPRESA) history.push('/Empresa/dashboard');\r\n                    else if (jwt.Role == TipoUsuario.CANDIDATO) history.push('/vagas');\r\n                } else {\r\n                    alert.error(\"Email existente\")\r\n                }\r\n            })\r\n            .catch(error => console.error(error))\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-full body\">\r\n            <Hamburguer className=\"md:hidden flex fixed\" />\r\n            <Sidebar className=\"md:flex hidden\" />\r\n            <main className=\"flex\">\r\n                <div className=\"flex fundo flex-col justify-between items-center sm:flex hidden\">\r\n                    <img src={Senai} alt=\"\" className=\"w-14 h-12 mt-4\" />\r\n                    <div className=\"\">\r\n                        <p className=\"escrito tracking-wider font-bold\"><i> Sua conexão</i></p>\r\n                        <p className=\"escrito tracking-wider font-bold\"><i> com as empresas</i></p>\r\n                        <p className=\"escrito tracking-wider font-bold\"><i> começam agora.</i></p>\r\n                    </div>\r\n                    <img src={Logo} alt=\"\" className=\"w-2/5\" />\r\n                </div>\r\n                <div className=\"login flex w-full bg-white justify-center items-center\">\r\n                    <div className=\"login flex flex-col m-12\">\r\n                        <h1 className=\"font-bold text-4xl\">Entre com sua conta</h1>\r\n                        <form onSubmit={event => {\r\n                            event.preventDefault()\r\n                            login()\r\n                        }}>\r\n                            <div>\r\n                                <Input mask=\"\" type=\"text\" name=\"Email\" label=\"Insira seu email:\" placeholder=\"email@email.com\"\r\n                                    className=\"input mt-8\"\r\n                                    onChange={e => setEmail(e.target.value)} value={email} />\r\n\r\n                                <div className=\"flex justify-between\">\r\n                                    <Input mask=\"\" type=\"password\" name=\"Senha\" label=\"Insira sua senha:\" placeholder=\"*******\"\r\n                                        className=\"input flex-1 mt-5\"\r\n                                        onChange={e => setSenha(e.target.value)} value={senha} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"flex justify-between items-center md:justify-between items-center\">\r\n                                <div className=\"submit flex items-center\">\r\n                                    <ButtonForm className=\" mt-6 mr-4\" name=\"Login\"></ButtonForm>\r\n                                </div>\r\n\r\n                                <p className=\"font-bold mt-8\"> Não possui conta? <Link to=\"/cadastro\" className=\"underline\">Clique aqui</Link></p>\r\n                            </div>\r\n                        </form>\r\n                        <img className=\"sm:hidden block w-32 right-0 bottom-0 absolute m-2\" src={Senai} />\r\n                    </div>\r\n\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login","import React, { useEffect, useState } from 'react';\r\nimport Card from '../../components/card/index';\r\nimport CandidatoApi from '../../api/candidatos'\r\nimport Sidebar from '../../components/sidebar/Index';\r\nimport Loader from '../../components/loader';\r\nimport Hamburguer from '../../components/hamburguer';\r\nimport { Candidato } from '../../models/candidato';\r\nimport { Candidatura } from '../../models/candidatura';\r\nimport { Jwt } from '../../services/auth';\r\nimport { toDate, toHour } from '../../services/date';\r\nimport Pagination from '../../components/pagination';\r\nimport ImgEmpresaDefault from '../../assets/imgs/default-empresa.png'\r\nimport { API_URL } from '../../api/apisettings';\r\nimport LoadingPage from '../loading';\r\n\r\nfunction CHistoricoCandidaturas() {\r\n    const [candidato, setCandidato] = useState<Candidato>();\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [candidaturasPorPagina] = useState(10);\r\n    const [candidaturasAtuais, setCandidaturasAtuais] = useState<Candidatura[]>([])\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const paginate = (pageNumber: any) => setCurrentPage(pageNumber);\r\n\r\n    useEffect(() => {\r\n        Promise.all([\r\n            CandidatoApi.buscarPorId(Jwt().jti).then(data => {\r\n                setCandidato(data)\r\n                // Get current posts\r\n                const indexOfLastPost = currentPage * candidaturasPorPagina;\r\n                const indexOfFirstPost = indexOfLastPost - candidaturasPorPagina;\r\n                setCandidaturasAtuais(data!.candidatura!.reverse().slice(indexOfFirstPost, indexOfLastPost));\r\n            })\r\n        ])\r\n            .then(() => setIsLoading(false))\r\n    }, []);\r\n\r\n    function renderCandidaturas() {\r\n\r\n        return candidaturasAtuais?.map((item: Candidatura) => {\r\n            return (\r\n                <Card className=\"flex flex-col mb-5\" key={item.idCandidatura}>\r\n                    {/* Conteudo encima */}\r\n                    <div className=\"flex justify-between\">\r\n                        <div className=\"flex pb-2\">\r\n                            <div className=\"pr-2\">\r\n                                <img className=\"w-16 h-16 object-contain\"\r\n                                    src={`${API_URL}Empresa/Img/${item.idVagaNavigation?.idEmpresa}`}\r\n                                    onError={e => e.currentTarget.src = ImgEmpresaDefault} alt=\"img empresa\"></img>\r\n                            </div>\r\n                            <p className=\"flex items-center\">{item.idVagaNavigation?.titulo}</p>\r\n                        </div>\r\n                        {item.visualizado && (\r\n                            <div className=\"flex items-center self-start gap-1 text-green-1 text-sm\"\r\n                                 title=\"Empresa já visualizou sua candidatura.\">\r\n                                <span>Visualizado</span>\r\n                                <i className=\"ri-checkbox-circle-line text-lg\"></i>\r\n                            </div>\r\n                        )}\r\n                        {!item.visualizado && (\r\n                            <div className=\"flex items-center self-start gap-1 text-sm\"\r\n                                 title=\"Empresa ainda não visualizou sua candidatura.\">\r\n                                <span>Pendente</span>\r\n                                <i className=\"ri-time-line text-lg\"></i>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <hr />\r\n                    {/* Conteudo debaixo */}\r\n                    <div className=\"flex flex-row p-2 text-sm justify-between items-center text\">\r\n                        <div className=\"flex flex-col w-1/2 pr-2\">\r\n                            <div>\r\n                                <i className=\"ri-money-dollar-circle-line text-lg\" />\r\n                                <span> R$ {item.idVagaNavigation?.salario}</span>\r\n                            </div>\r\n                            <div>\r\n                                <i className=\"ri-map-pin-line text-lg\"></i>\r\n                                <span> {item.idVagaNavigation?.idEnderecoNavigation?.localCompleto}</span>\r\n                            </div>\r\n                            <div>\r\n                                <i className=\"ri-time-line text-lg\"></i>\r\n                                <span> Inscrito em {`${toDate(new Date(item.dataCriado!))} ${toHour(new Date(item.dataCriado!))}`}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"hover-gray-200 p-5\">\r\n                            <span className=\"ri-attachment-2 text-2xl flex justify-center\"></span>\r\n                            <span>Ver currículo</span>\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n            )\r\n        })\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <LoadingPage />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"body w-full\">\r\n            <Hamburguer className=\"md:hidden flex fixed\" />\r\n            <Sidebar className=\"md:flex hidden\"></Sidebar>\r\n            <main className=\"w-full flex flex-col\">\r\n                <h1 className=\"p-10 md:text-2xl text-xl flex justify-center\">Histórico de Candidaturas</h1>\r\n                <div className=\"lg:w-2/3 p-5 mx-auto md:text-base text-sm\">\r\n                    {renderCandidaturas()}\r\n                </div>\r\n                <Pagination\r\n                    className=\"mt-auto my-5 flex flex-col items-center\"\r\n                    objectsPerPage={candidaturasPorPagina}\r\n                    totalObjects={candidaturasAtuais.length}\r\n                    paginate={paginate}\r\n                />\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CHistoricoCandidaturas;","/* eslint-disable eqeqeq */\r\nimport React, { useEffect, useState } from 'react';\r\nimport Card from '../../components/card';\r\nimport EmpresaApi from '../../api/empresa'\r\nimport NotificacaoApi from '../../api/notificacoes'\r\nimport Sidebar from '../../components/sidebar/Index';\r\nimport Loader from '../../components/loader';\r\nimport Hamburguer from '../../components/hamburguer';\r\nimport Dialog from '../../components/dialog';\r\nimport Button from '../../components/button';\r\nimport ImgEmpresaDefault from '../../assets/imgs/default-empresa.png'\r\nimport Pagination from '../../components/pagination';\r\nimport { Empresa } from '../../models/empresa';\r\nimport { StatusUsuario } from '../../utils/enums';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAlert } from 'react-alert';\r\nimport { toDate, toHour } from '../../services/date';\r\nimport { Jwt } from '../../services/auth';\r\nimport { API_URL } from '../../api/apisettings';\r\nimport LoadingPage from '../loading';\r\n\r\nfunction AGerenciarEmpresas({ match }: any) {\r\n    const {\r\n        params: { id },\r\n    } = match;\r\n\r\n    const [empresasPendentes, setEmpresasPendentes] = useState<Empresa[]>([]);\r\n    const [empresas, setEmpresas] = useState<Empresa[]>([]);\r\n    const [empresa, setEmpresa] = useState<Empresa>(new Empresa());\r\n    const [visualizarPerfil, setVisualizarPerfil] = useState(false);\r\n    const [empresaConfirmacao, setEmpresaConfirmacao] = useState<Empresa>();\r\n    const [aceitarIsOpen, setAceitarIsOpen] = useState(false);\r\n    const [recusarIsOpen, setRecusarIsOpen] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [empresasPorPagina] = useState(10);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const indexOfLastPost = currentPage * empresasPorPagina;\r\n    const indexOfFirstPost = indexOfLastPost - empresasPorPagina;\r\n    const empresasAtuais = empresas.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const paginate = (pageNumber: any) => setCurrentPage(pageNumber);\r\n\r\n    const alert = useAlert();\r\n\r\n    useEffect(() => {\r\n        Promise.all([\r\n            EmpresaApi.buscarPorId(id).then(data => setEmpresa(data)),\r\n            EmpresaApi.listarPorStatus(1).then(data => setEmpresasPendentes(data)),\r\n            EmpresaApi.listarPorStatus(2).then(data => setEmpresas(data))\r\n        ])\r\n        .then(() => setIsLoading(false))\r\n    }, []);\r\n\r\n    function openPerfil(empresaP: Empresa) {\r\n        setEmpresa(empresaP);\r\n        setVisualizarPerfil(true);\r\n    }\r\n\r\n    function closePerfil() {\r\n        setEmpresa({});\r\n        setVisualizarPerfil(false);\r\n    }\r\n\r\n    function openAceitar(empresa: Empresa) {\r\n        setEmpresaConfirmacao(empresa);\r\n        setAceitarIsOpen(true);\r\n    }\r\n\r\n    function closeAceitar() {\r\n        setEmpresaConfirmacao({});\r\n        setAceitarIsOpen(false);\r\n    }\r\n\r\n    function openRecusar(empresa: Empresa) {\r\n        setEmpresaConfirmacao(empresa);\r\n        setRecusarIsOpen(true);\r\n    }\r\n\r\n    function closeRecusar() {\r\n        setEmpresaConfirmacao({});\r\n        setRecusarIsOpen(false);\r\n    }\r\n\r\n    function aceitarEmpresa() {\r\n        alert.success(`Empresa ${empresaConfirmacao?.nomeFantasia} aceita com sucesso.`)\r\n        EmpresaApi.mudarStatus(empresaConfirmacao?.idUsuario!, StatusUsuario.ATIVO);\r\n        NotificacaoApi.addNotificacao(`Empresa ${empresaConfirmacao?.nomeFantasia} foi aceita.`);\r\n        closeAceitar();\r\n        EmpresaApi.listarPorStatus(StatusUsuario.PENDENTE).then(data => setEmpresasPendentes(data));\r\n        EmpresaApi.listarPorStatus(StatusUsuario.ATIVO).then(data => setEmpresas(data));\r\n    }\r\n\r\n    function recusarEmpresa() {\r\n        alert.success(`Empresa ${empresaConfirmacao?.nomeFantasia} recusada com sucesso.`)\r\n        EmpresaApi.mudarStatus(empresaConfirmacao?.idUsuario!, StatusUsuario.BLOQUEADO);\r\n        closeRecusar();\r\n        NotificacaoApi.addNotificacao(`Empresa ${empresaConfirmacao?.nomeFantasia} foi recusada.`);\r\n        EmpresaApi.listarPorStatus(StatusUsuario.PENDENTE).then(data => setEmpresasPendentes(data));\r\n        EmpresaApi.listarPorStatus(StatusUsuario.ATIVO).then(data => setEmpresas(data));\r\n\r\n    }\r\n\r\n\r\n    function renderPendentes() {\r\n        if (empresasPendentes.length === 0) return (\r\n            <p className=\"text-center p-5\">Há nenhuma empresa pendente.</p>\r\n        )\r\n\r\n        return empresasPendentes.map((item: Empresa) => {\r\n            return (\r\n\r\n                <Card className=\"flex flex-row justify-between items-center mb-5\">\r\n                    <div className=\"flex items-center\">\r\n                        <img className=\"w-16 h-16 object-contain\"\r\n                            src={`${API_URL}Empresa/Img/${item.idUsuario}`}\r\n                            onError={e => e.currentTarget.src = ImgEmpresaDefault} alt=\"img empresa\"></img>\r\n                        <p className=\"pl-2\">{item.nomeFantasia}</p>\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"fa fa-check text-green-600 text-2xl p-2 cursor-pointer\"\r\n                            onClick={() => openAceitar(item)}></span>\r\n                        <span className=\"fa fa-times text-red-600 text-2xl p-2 cursor-pointer\"\r\n                            onClick={() => openRecusar(item)}></span>\r\n                    </div>\r\n                </Card>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderEmpresas() {\r\n\r\n        return empresasAtuais.map((item: Empresa) => {\r\n            return (\r\n                <Card className=\"flex flex-col mb-5\" key={item.idUsuario}>\r\n                    {/* Conteudo encima */}\r\n                    <div className=\"flex items-center\">\r\n                        <img className=\"w-16 h-16 object-contain\"\r\n                            src={`${API_URL}Empresa/Img/${item.idUsuario}`}\r\n                            onError={e => e.currentTarget.src = ImgEmpresaDefault} alt=\"img empresa\"></img>\r\n                        <p className=\"pl-2\">{item.nomeFantasia}</p>\r\n                    </div>\r\n                    <hr className=\"m-2\" />\r\n                    {/* Conteudo debaixo */}\r\n                    <div className=\"flex flex-row p-2 text-sm justify-between items-center\">\r\n                        <div className=\"flex flex-col w-1/2 pr-2\">\r\n                            <div>\r\n                                <i className=\"ri-building-2-line text-lg\" />\r\n                                <span> {item.razaoSocial}</span>\r\n                            </div>\r\n                            <div>\r\n                                <i className=\"ri-map-pin-line text-lg\"></i>\r\n                                <span> {item.idEnderecoNavigation?.localCompleto}</span>\r\n                            </div>\r\n                            <div>\r\n                                <i className=\"ri-time-line text-lg\"></i>\r\n                                <span> Cadastrado desde {`${toDate(new Date(item.idUsuarioNavigation?.dataCadastrado!))} ${toHour(new Date(item.idUsuarioNavigation?.dataCadastrado!))}`}</span>\r\n                            </div>\r\n                        </div>\r\n                        {/* Icones */}\r\n                        <div className=\"flex\">\r\n                            <Link to={`/empresa/resumo/${item.idUsuario}`}>\r\n                                <div className=\"hover-gray-200 p-5\">\r\n                                    <span className=\"ri-contacts-book-line text-2xl flex justify-center cursor-pointer\"></span>\r\n                                    <span className=\"cursor-pointer\">Vagas</span>\r\n                                </div>\r\n                            </Link>\r\n                            <div className=\"hover-gray-200 p-5\" onClick={() => openPerfil(item)}>\r\n                                <span className=\"ri-file-text-line text-2xl flex justify-center cursor-pointer\"></span>\r\n                                <span className=\"cursor-pointer\">Perfil</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n            )\r\n        })\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <LoadingPage/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"body w-full\">\r\n            <Hamburguer className=\"md:hidden flex fixed\" />\r\n            <Sidebar className=\"md:flex hidden\" />\r\n            <main className=\"w-full m-5 flex flex-col\">\r\n                <Dialog\r\n                    isOpen={visualizarPerfil} onAfterClose={closePerfil}\r\n                    title=\"Detalhes da empresa\"\r\n                >\r\n                    <div className=\"flex flex-col w-full mt-6\">\r\n                        <div className=\"w-full flex flex-col w-50em w-full\">\r\n                            <div className=\"grid md:grid-cols-2 grid-cols-1\">\r\n\r\n                                {/* Coluna Esquerda */}\r\n                                <div className=\"flex flex-col\">\r\n                                    <div className=\"mb-8\">\r\n                                        <p className=\"font-bold\">Email</p>\r\n                                        <p>{empresa?.idUsuarioNavigation?.email}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"mb-8\">\r\n                                        <p className=\"font-bold\">Nome</p>\r\n                                        <p>{empresa?.razaoSocial}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"mb-8\">\r\n                                        <p className=\"font-bold\">Telefone</p>\r\n                                        <p>{empresa?.telefoneEmpresa}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"mb-8\">\r\n                                        <p className=\"font-bold\">Endereço</p>\r\n                                        <p className=\"pr-8\">{empresa?.idEnderecoNavigation?.localCompleto}</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Coluna Direita */}\r\n                                <div className=\"flex flex-col\">\r\n                                    <div className=\"mb-8\">\r\n                                        <p className=\"font-bold\">Razão Social</p>\r\n                                        <p>{empresa?.razaoSocial}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"mb-8\">\r\n                                        <p className=\"font-bold\">CNPJ</p>\r\n                                        <p>{empresa?.cnpj}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"mb-8\">\r\n                                        <p className=\"font-bold\">CNAE</p>\r\n                                        <p>{empresa?.cnae}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* Conteudo debaixo */}\r\n                            <div className=\"mb-8\">\r\n                                <p className=\"font-bold\">Descrição</p>\r\n                                <p style={{ width: '30em' }}>{empresa?.descricao}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"flex flex-col items-center justify-center pt-6\">\r\n                            <div className=\"pb-5 flex gap-2\">\r\n                                {empresa?.idStatusUsuario == StatusUsuario.ATIVO && (\r\n                                    <Button onClick={() => {\r\n                                        EmpresaApi.mudarStatus(empresa.idUsuario!, StatusUsuario.BLOQUEADO)\r\n                                        alert.success(\"Usuário bloqueado.\")\r\n\r\n                                    }} name=\"Bloquear Perfil\">Bloquear Perfil</Button>\r\n                                )}\r\n\r\n                                {empresa?.idStatusUsuario == StatusUsuario.BLOQUEADO && (\r\n                                    <Button onClick={() => {\r\n                                        EmpresaApi.mudarStatus(empresa.idUsuario!, StatusUsuario.ATIVO)\r\n                                        alert.success(\"Usuário foi desbloqueado.\")\r\n\r\n                                    }} name=\"Bloquear Perfil\">Desbloquear</Button>\r\n                                )}\r\n                            </div>\r\n                            <Button onClick={closePerfil} ghost>Fechar</Button>\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n\r\n                <Dialog isOpen={aceitarIsOpen} onAfterClose={closeAceitar}\r\n                    title=\"Confirmar ação\">\r\n                    <div>\r\n                        <p>Você deseja <b>aceitar</b> a empresa <b>{empresaConfirmacao?.nomeFantasia}</b>?</p>\r\n                        <div className=\"flex justify-center gap-2 mt-5\">\r\n                            <Button onClick={aceitarEmpresa}>Sim</Button>\r\n                            <Button onClick={closeAceitar} ghost={true}>Cancelar</Button>\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n\r\n                <Dialog isOpen={recusarIsOpen} onAfterClose={closeRecusar}\r\n                    title=\"Confirmar ação\">\r\n                    <div>\r\n                        <p>Você deseja <b>recusar</b> a empresa <b>{empresaConfirmacao?.nomeFantasia}</b>?</p>\r\n                        <div className=\"flex justify-center gap-2 mt-5\">\r\n                            <Button onClick={recusarEmpresa}>Sim</Button>\r\n                            <Button onClick={closeRecusar} ghost={true}>Cancelar</Button>\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n\r\n                <h1 className=\"p-10 md:text-2xl text-xl flex justify-center\">Gerenciamento de empresas</h1>\r\n                <div className=\"flex flex-col m-auto lg:w-2/3 w-full\">\r\n                    {empresasPendentes.length > 0 &&\r\n                        <form>\r\n                            <h2 className=\"flex flex-row justify-center m-5 text-lg\">Empresas Pendentes</h2>\r\n                            <div className=\"flex flex-row justify-between text-base\">\r\n                                <p>Solicitação</p>\r\n                                <div className=\"flex\">\r\n                                    <p className=\"pr-2\">Aceitar</p>\r\n                                    <p>Recusar</p>\r\n                                </div>\r\n                            </div>\r\n                            {renderPendentes()}\r\n                        </form>\r\n                    }\r\n                    <h2 className=\"flex flex-row justify-center p-10 text-lg\">Empresas Cadastradas</h2>\r\n                    {renderEmpresas()}\r\n                    <Pagination\r\n                        className=\"mt-auto my-5 flex flex-col items-center\"\r\n                        objectsPerPage={empresasPorPagina}\r\n                        totalObjects={empresas.length}\r\n                        paginate={paginate}\r\n                    />\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AGerenciarEmpresas;","import React, { useEffect, useState } from 'react';\r\nimport Sidebar from '../../components/sidebar/Index';\r\nimport Card from '../../components/card/index';\r\nimport EmpresaApi from '../../api/empresa';\r\nimport Hamburguer from '../../components/hamburguer';\r\nimport { graphCandidaturaEmpresa } from '../../services/graph';\r\nimport { Line } from '@reactchartjs/react-chart.js';\r\nimport { Empresa } from '../../models/empresa';\r\nimport { Jwt } from '../../services/auth';\r\nimport LoadingPage from '../loading';\r\n\r\nfunction EDashboard() {\r\n\r\n    const [empresa, setEmpresa] = useState<Empresa>(new Empresa());\r\n    const [qtdCandidaturas, setQtdCandidaturas] = useState<number>(0);\r\n    const [chartCandidaturasMeses, setChartCandidaturasMeses] = useState<string[]>([]);\r\n    const [chartCandidaturasCadastros, setChartCandidaturasCadastros] = useState<number[]>([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        Promise.all([\r\n            EmpresaApi.buscarPorId(Jwt().jti).then(data => {\r\n                setEmpresa(data);\r\n    \r\n                var qtde = 0;\r\n                data.vaga?.forEach(item => qtde = qtde + item.candidatura!.length)\r\n                setQtdCandidaturas(qtde)\r\n    \r\n                var graphCandidatura = graphCandidaturaEmpresa(12, data);\r\n    \r\n                var joinedMeses: string[] = [];\r\n                var joinedCadastros: number[] = [];\r\n    \r\n                graphCandidatura.map(chart => {\r\n                    joinedMeses.push(chart.mes);\r\n                    joinedCadastros.push(chart.candidaturas);\r\n                });\r\n    \r\n                setChartCandidaturasMeses(joinedMeses);\r\n                setChartCandidaturasCadastros(joinedCadastros)\r\n    \r\n            })\r\n        ])\r\n        .then(() => setIsLoading(false))\r\n        \r\n    }, []);\r\n\r\n    const dataCandidatura = {\r\n        labels: chartCandidaturasMeses,\r\n        datasets: [\r\n            {\r\n                label: 'Cadastros de Candidaturas',\r\n                data: chartCandidaturasCadastros,\r\n                fill: false,\r\n                backgroundColor: 'rgb(255, 99, 132)',\r\n                borderColor: 'rgba(255, 99, 132, 0.2)',\r\n            },\r\n        ],\r\n    }\r\n\r\n    const optionsCandidaturas = {\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        suggestedMin: 1,\r\n                        suggestedMax: 10\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <LoadingPage/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"body w-full\">\r\n            <Hamburguer className=\"md:hidden flex fixed\" />\r\n            <Sidebar className=\"md:flex hidden\"></Sidebar>\r\n            <main className=\"md:w-2/3 w-full mx-auto p-5\">\r\n                <h1 className=\"p-10 md:text-2xl text-xl flex justify-center\">Dashboard</h1>\r\n                <div className=\"flex md:flex-no-wrap flex-wrap gap-5 mb-2 justify-center\">\r\n                    <Card className=\"flex flex-col p-2 w-full\">\r\n                        <div className=\"flex justify-center pb-2\">Total de vagas</div>\r\n                        <h2 className=\"text-orange-600 pl-2 font-bold flex justify-center text-4xl\">{empresa.vaga?.length}</h2>\r\n                    </Card>\r\n\r\n                    <Card className=\"flex flex-col p-2 w-full\">\r\n                        <div className=\"flex justify-center pb-2\">Total de visualizações</div>\r\n                        <h2 className=\"text-blue-600 pl-2 font-bold flex justify-center text-4xl\">{empresa.visualizacao}</h2>\r\n                    </Card>\r\n\r\n                    <Card className=\"flex flex-col p-2 w-full\">\r\n                        <div className=\"flex justify-center pb-2\">Total de candidaturas</div>\r\n                        <h2 className=\"text-purple-600 pl-2 font-bold flex justify-center text-4xl\">{qtdCandidaturas}</h2>\r\n                    </Card>\r\n                </div>\r\n\r\n                <div className=\"flex justify-center w-full py-8\">\r\n                    <div className=\"w-full\">\r\n                        <Card>\r\n                            <Line type={Line} data={dataCandidatura}\r\n                                options={optionsCandidaturas} />\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EDashboard;","/* eslint-disable eqeqeq */\r\nimport React, { useEffect, useState } from 'react';\r\nimport Button from '../../components/button';\r\nimport VagaApi from '../../api/vagas'\r\nimport CandidaturaApi from '../../api/candidatura'\r\nimport Sidebar from '../../components/sidebar/Index';\r\nimport Hamburguer from '../../components/hamburguer';\r\nimport { Vaga } from '../../models/vaga';\r\nimport { HabilidadeVaga } from '../../models/habilidadeVaga';\r\nimport { BeneficioVaga } from '../../models/beneficioVaga';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Candidatura } from '../../models/candidatura';\r\nimport { Jwt } from '../../services/auth';\r\nimport { TipoUsuario } from '../../utils/enums';\r\nimport { useAlert } from 'react-alert';\r\nimport { TOKEN_KEY } from '../../api/apisettings';\r\nimport LoadingPage from '../loading';\r\nimport candidatura from '../../api/candidatura';\r\nimport { collapseTextChangeRangesAcrossMultipleVersions } from 'typescript';\r\nimport Erro from '../404';\r\n\r\nfunction VerVaga({ match }: any) {\r\n\r\n    const {\r\n        params: { id },\r\n    } = match;\r\n\r\n    const [vaga, setVaga] = useState<Vaga>(new Vaga());\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const alert = useAlert();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        Promise.all([\r\n            VagaApi.buscarPorId(id).then(data => {\r\n                setVaga(data)\r\n                console.log(data)\r\n                if (data != undefined) {\r\n                    VagaApi.somaVisualizacao(data.idVaga!);\r\n                }\r\n            })\r\n        ])\r\n        .then(() => setIsLoading(false));\r\n\r\n    }, []);\r\n\r\n    function renderHabilidades() {\r\n        if (vaga.habilidadeVaga?.length == 0) return (\r\n            <div></div>\r\n        )\r\n\r\n        return vaga.habilidadeVaga?.map((item: HabilidadeVaga) => {\r\n            return (\r\n                <span className=\"bg-gray-400 p-2 rounded-full h-8 flex items-center cursor-pointer\">\r\n                    {item.idHabilidadeNavigation!.nomeHabilidade}</span>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderBeneficios() {\r\n        if (vaga.beneficioVaga?.length == 0) return (\r\n            <div></div>\r\n        )\r\n\r\n        return vaga.beneficioVaga?.map((item: BeneficioVaga) => {\r\n            return (\r\n                <span className=\"bg-gray-400 p-2 rounded-full h-8 flex items-center cursor-pointer\">\r\n                    {item.idBeneficioNavigation!.nomeBeneficio}</span>\r\n            )\r\n        })\r\n    }\r\n\r\n    function salvar() {\r\n\r\n        var candidaturaManipulavel: Candidatura = {\r\n            idVaga: id,\r\n            idCandidato: Jwt().jti\r\n        }\r\n\r\n        if (candidaturaManipulavel != undefined) {\r\n            CandidaturaApi.salvar(candidaturaManipulavel, 0).then(data => {\r\n                if (data != null || data != undefined) {\r\n                    alert.success(\"Cadastrado com sucesso.\");\r\n                    setVaga({...vaga, candidatura: [...vaga.candidatura!, data]});\r\n                }\r\n            });\r\n        } else {\r\n            alert.error('Campos não preenchidos.')\r\n        }\r\n    }\r\n\r\n    if (!isLoading && vaga == undefined) {\r\n        return (\r\n            <Erro/>\r\n        )\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <LoadingPage />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"body w-full\">\r\n            <Hamburguer className=\"md:hidden flex fixed\" />\r\n            <Sidebar className=\"md:flex hidden\" />\r\n            <main className=\"w-full\">\r\n\r\n                <div className=\"flex flex-col m-auto lg:w-1/2 w-full bg-white shadow shadow-md body\">\r\n\r\n                    <h1 className=\"p-10 md:text-2xl text-xl flex justify-center\">Detalhes da vaga</h1>\r\n\r\n                    <div className=\"flex flex-col pb-10 justify-center items-center\">\r\n                        <p className=\"text-xl\">{vaga?.titulo}</p>\r\n                        <Link to={`/empresa/resumo/${vaga.idEmpresa}`}>\r\n                            <span className=\"text-link\">\r\n                                {vaga.idEmpresaNavigation?.nomeFantasia}\r\n                            </span>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className=\"flex flex-col items-center p-5\">\r\n                        <div>\r\n                            <div className=\"mb-1 flex items-center\">\r\n                                <i className=\"pr-2 ri-time-fill text-xl\" />\r\n                                <p>Carga Horária de {vaga?.cargaHoraria}h</p>\r\n                            </div>\r\n\r\n                            <div className=\"mb-1 flex items-center\">\r\n                                <p className=\"pr-2 ri-money-dollar-circle-fill text-xl\" />\r\n                                <p>R$ {vaga?.salario}</p>\r\n                            </div>\r\n\r\n                            <div className=\"mb-3 flex items-center\">\r\n                                <p className=\"pr-2 fa fa-graduation-cap text-xl\" />\r\n                                <p>{vaga?.qualificacao}</p>\r\n                            </div>\r\n\r\n                            <div className=\"mb-4\">\r\n                                <p className=\"font-bold pr-2\">Descrição</p>\r\n                                <p>{vaga?.descricao}</p>\r\n                            </div>\r\n\r\n                            <div className=\"mb-4\">\r\n                                <p className=\"font-bold pr-2\">Sobre a empresa</p>\r\n                                <p className=\"pr-8\">{vaga?.idEmpresaNavigation?.descricao}</p>\r\n                            </div>\r\n\r\n                            <div className=\"mb-4\">\r\n                                <p className=\"font-bold pr-2\">Local</p>\r\n                                <p className=\"pr-8\">{vaga?.idEnderecoNavigation?.localCompleto}</p>\r\n                            </div>\r\n\r\n                            <div className=\"mb-4\">\r\n                                <p className=\"font-bold\">Habilidades buscadas</p>\r\n                                <div className=\"flex flex-row flex-wrap mb-2 gap-2\">\r\n                                    {renderHabilidades()}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"mb-4\">\r\n                                <p className=\"font-bold\">Benefícios</p>\r\n                                <div className=\"flex flex-column flex-wrap mb-2 gap-2\">\r\n                                    {renderBeneficios()}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                        {Jwt().Role == TipoUsuario.CANDIDATO && (\r\n                            <div className=\"mt-auto py-5 flex flex-col items-center justify-center gap-3\">\r\n                                <div>\r\n\r\n                                    {!vaga.candidatura!.find(c => c.idCandidato == Jwt().jti) && (\r\n                                        <Button name=\"Candidatar-se\"\r\n                                            onClick={() => salvar()}>Candidatar-se\r\n                                        </Button>\r\n                                    )}\r\n\r\n                                    {vaga.candidatura!.find(c => c.idCandidato == Jwt().jti) && (\r\n                                        <Button className=\"flex items-center\"\r\n                                                name=\"Candidatado\"\r\n                                                style={{backgroundColor: \"green\"}}>\r\n                                            Candidatado\r\n                                            <i className=\"ri-check-line text-white pl-2\"></i>\r\n                                        </Button>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VerVaga;","/* eslint-disable eqeqeq */\r\nimport React, { useState } from 'react';\r\nimport Logo from '../../assets/imgs/logo-dark.png';\r\nimport Input from '../../components/input'\r\nimport Senai from '../../assets/imgs/logo-senai-principal.png';\r\nimport ButtonForm from '../../components/buttonForm';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { API_URL } from '../../api/apisettings';\r\nimport { useAlert } from 'react-alert';\r\nimport Sidebar from '../../components/sidebar/Index';\r\nimport Hamburguer from '../../components/hamburguer';\r\n\r\nfunction CadastroEmpresa() {\r\n\r\n    const alert = useAlert();\r\n\r\n    var history = useHistory();\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [senha, setSenha] = useState('')\r\n    const [senhaConfirmacao, setSenhaConfirmacao] = useState('')\r\n\r\n    const cadastro = () => {\r\n        const cadastro = {\r\n            email: email,\r\n            senha: senha\r\n        }\r\n\r\n        fetch(API_URL + 'Cadastrar', {\r\n            method: 'PUSH',\r\n            body: JSON.stringify(cadastro),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(dados => {\r\n                if (dados.email == API_URL) {\r\n                    alert.success(\"Cadastrado com Sucesso.\")\r\n                } else {\r\n                    alert.error(\"Email existente.\")\r\n                }\r\n            })\r\n            .catch(error => console.error(error))\r\n\r\n    }\r\n\r\n    const validarSenha = () => {\r\n        if (senha == senhaConfirmacao && email != '') {\r\n            return (\r\n                history.push({\r\n                    pathname: \"/cadastro/empresa/passo-2\",\r\n                    state: { email: email, senha: senha }\r\n                })\r\n            )\r\n        } else {\r\n            return (\r\n                alert.error(\"Senha ou Email inválido, por favor digite novamente.\")\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-full body\">\r\n            <Hamburguer className=\"md:hidden flex fixed\" />\r\n            <Sidebar className=\"md:flex hidden\" />\r\n            <main className=\"flex\">\r\n                <div className=\"flex fundo flex-col justify-between items-center sm:flex hidden\">\r\n                    <img src={Senai} alt=\"\" className=\"w-14 h-12 mt-4\" />\r\n                    <div className=\"\">\r\n                        <p className=\"escrito tracking-wider font-bold\"><i> Sua conexão</i></p>\r\n                        <p className=\"escrito tracking-wider font-bold\"><i> com as empresas</i></p>\r\n                        <p className=\"escrito tracking-wider font-bold\"><i> começam agora.</i></p>\r\n                    </div>\r\n                    <img src={Logo} alt=\"\" className=\"w-2/5 \" />\r\n                </div>\r\n                <div className=\"login flex w-full bg-white justify-center items-center\">\r\n\r\n                    <div className=\"login flex flex-col m-12\">\r\n                        <h1 className=\"font-bold text-4xl\">Crie seu perfil de empresa</h1>\r\n\r\n                        <form onSubmit={event => {\r\n                            event.preventDefault()\r\n                            cadastro()\r\n                            validarSenha()\r\n                        }}>\r\n                            <Input mask=\"\" type=\"text\" name=\"Email\" label=\"Insira seu email:\" placeholder=\"email@email.com\" className=\"input mt-8\"\r\n                                onChange={e => setEmail(e.target.value)}\r\n                                value={email} />\r\n\r\n                            <div className=\"grid lg:grid-cols-2 grid-cols-1 mt-5 gap-5\">\r\n                                <Input mask=\"\" type=\"password\" name=\"Senha\" label=\"Insira sua senha:\" placeholder=\"*******\"\r\n                                    className=\"input col-span-1 w-full\"\r\n                                    onChange={e => setSenha(e.target.value)}\r\n                                    value={senha} />\r\n                                <Input mask=\"\" type=\"password\" name=\"Senha\" label=\"Confirme sua senha:\" placeholder=\"*******\"\r\n                                    className=\"input col-span-1 w-full\"\r\n                                    onChange={e => setSenhaConfirmacao(e.target.value)}\r\n                                    value={senhaConfirmacao} />\r\n                            </div>\r\n                            <ButtonForm className=\"mt-6\" name=\"cadastro\" />\r\n\r\n                        </form>\r\n                        <img className=\"sm:hidden block w-32 right-0 bottom-0 absolute m-2\" src={Senai} />\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CadastroEmpresa","/* eslint-disable eqeqeq */\r\nimport React, { useState } from 'react';\r\nimport Logo from '../../assets/imgs/logo-dark.png';\r\nimport Input from '../../components/input'\r\nimport Senai from '../../assets/imgs/logo-senai-principal.png';\r\nimport ButtonForm from '../../components/buttonForm';\r\nimport { API_URL } from '../../api/apisettings';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAlert } from 'react-alert';\r\nimport './index.css';\r\nimport Sidebar from '../../components/sidebar/Index';\r\nimport Hamburguer from '../../components/hamburguer';\r\n\r\nfunction CadastroCandidato() {\r\n\r\n    var history = useHistory();\r\n\r\n    const alert = useAlert();\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [senha, setSenha] = useState('')\r\n    const [senhaConfirmacao, setSenhaConfirmacao] = useState('')\r\n\r\n    const cadastro = () => {\r\n        const cadastro = {\r\n            email: email,\r\n            senha: senha\r\n        }\r\n\r\n        fetch(API_URL + 'Cadastrar', {\r\n            method: 'PUSH',\r\n            body: JSON.stringify(cadastro),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(dados => {\r\n                if (dados.email == API_URL) {\r\n                    alert.success(\"Cadastrado com sucesso.\")\r\n                } else {\r\n                    alert.error(\"Email existente.\")\r\n                }\r\n            })\r\n            .catch(error => console.error(error))\r\n\r\n    }\r\n\r\n    const validarSenha = () => {\r\n        if (senha == senhaConfirmacao && email != '') {\r\n            return (\r\n                history.push({\r\n                    pathname: \"/cadastro/candidato/passo-2\",\r\n                    state: { email: email, senha: senha }\r\n                })\r\n            )\r\n        } else {\r\n            return (\r\n                alert.error(\"Senha ou Email inválido, por favor digite novamente.\")\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        // Lado esquerdo\r\n        <div className=\"w-full body\">\r\n            <Hamburguer className=\"md:hidden flex fixed\" />\r\n            <Sidebar className=\"md:flex hidden\" />\r\n            <main className=\"flex\">\r\n                {/* Lado esquerdo */}\r\n                <div className=\"flex fundo flex-col justify-between items-center sm:flex hidden\">\r\n                    <img src={Senai} alt=\"\" className=\"w-14 h-12 mt-4\" />\r\n                    <div className=\"\">\r\n                        <p className=\"escrito tracking-wider font-bold\"><i> Sua conexão</i></p>\r\n                        <p className=\"escrito tracking-wider font-bold\"><i> com as empresas</i></p>\r\n                        <p className=\"escrito tracking-wider font-bold\"><i> começam agora.</i></p>\r\n                    </div>\r\n                    <img src={Logo} alt=\"\" className=\"w-2/5\" />\r\n                </div>\r\n                {/* Lado direito */}\r\n                <div className=\"login flex w-full bg-white justify-center items-center\">\r\n                    <div className=\"login flex flex-col m-12\">\r\n                        <h1 className=\"font-bold text-4xl\">Crie seu perfil de candidato</h1>\r\n                        <form onSubmit={event => {\r\n                            event.preventDefault()\r\n                            cadastro()\r\n                            validarSenha()\r\n                        }}>\r\n\r\n                            <Input mask=\"\" type=\"text\" name=\"Email\" label=\"Insira seu email:\" placeholder=\"email@email.com\" className=\"input mt-8\"\r\n                                onChange={e => setEmail(e.target.value)}\r\n                                value={email} />\r\n\r\n                            <div className=\"grid lg:grid-cols-2 grid-cols-1 mt-5 gap-5\">\r\n                                <Input mask=\"\" type=\"password\" name=\"Senha\" label=\"Insira sua senha:\" placeholder=\"*******\"\r\n                                    className=\"input col-span-1 w-full\"\r\n                                    onChange={e => setSenha(e.target.value)}\r\n                                    value={senha} />\r\n                                <Input mask=\"\" type=\"password\" name=\"Senha\" label=\"Confirme sua senha:\" placeholder=\"*******\"\r\n                                    className=\"input col-span-1 w-full\"\r\n                                    onChange={e => setSenhaConfirmacao(e.target.value)}\r\n                                    value={senhaConfirmacao} />\r\n                            </div>\r\n                            <ButtonForm className=\"mt-6\" name=\"cadastro\" />\r\n                        </form>\r\n                        <img className=\"sm:hidden block w-32 right-0 bottom-0 absolute m-2\" src={Senai} />\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CadastroCandidato;","/* eslint-disable eqeqeq */\r\nimport React, { useEffect, useState } from 'react';\r\nimport ButtonForm from '../../components/buttonForm';\r\nimport Input from '../../components/input';\r\nimport Senai from '../../assets/imgs/logo-senai-principal.png';\r\nimport Logo from '../../assets/imgs/logo-dark.png';\r\nimport Button from '../../components/button';\r\nimport EmpresaApi from '../../api/empresa';\r\nimport NotificacaoApi from '../../api/notificacoes';\r\nimport { Empresa } from '../../models/empresa';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { useAlert } from 'react-alert';\r\nimport Hamburguer from '../../components/hamburguer';\r\nimport Sidebar from '../../components/sidebar/Index';\r\n\r\nfunction CadastroDadosEmpresa() {\r\n\r\n    const alert = useAlert();\r\n\r\n    const [empresa, setEmpresa] = useState<Empresa>(new Empresa());\r\n\r\n    const location = useLocation<any>();\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        setEmpresa({ ...empresa, idUsuarioNavigation: { email: location.state.email, senha: location.state.senha } })\r\n    }, []);\r\n\r\n    function salvar() {\r\n        if (empresa != undefined) {\r\n            EmpresaApi.salvar(empresa, 0).then(data => {\r\n                if (data != null || data != undefined) {\r\n                    alert.success(\"Cadastrado com sucesso.\")\r\n                    history.push(\"/login\")\r\n                    NotificacaoApi.addNotificacao(`Empresa ${empresa.nomeFantasia} se cadastrou.`)\r\n                }\r\n            });\r\n        } else {\r\n            alert.error(\"Campos não preenchidos.\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-full body\">\r\n            <Hamburguer className=\"md:hidden flex fixed\" />\r\n            <Sidebar className=\"md:flex hidden\" />\r\n            <main className=\"flex\">\r\n                <div className=\"flex fundo flex-col justify-between items-center sm:flex hidden\">\r\n                    <img src={Senai} alt=\"\" className=\"w-14 h-12 mt-4\" />\r\n                    <div>\r\n                        <p className=\"escrito tracking-wider font-bold\"><i> Sua conexão</i></p>\r\n                        <p className=\"escrito tracking-wider font-bold\"><i> com as empresas</i></p>\r\n                        <p className=\"escrito tracking-wider font-bold\"><i> começam agora.</i></p>\r\n                    </div>\r\n                    <img src={Logo} alt=\"\" className=\"w-2/5 \" />\r\n                </div>\r\n                <div className=\"login flex w-full bg-white justify-center items-center\">\r\n                    <div className=\"login flex flex-col m-12\">\r\n                        <h1 className=\"font-bold text-4xl\">Preencha o formulário</h1>\r\n    \r\n                        <form onSubmit={event => {\r\n                            event.preventDefault()\r\n                            salvar()\r\n                        }}>\r\n                            <div className=\"flex flex-col justify-between mt-8\">\r\n                                <Input mask=\"\" type=\"name\" name=\"NomeFicticio\" label=\"Nome ficticio:\" placeholder=\"Olx\"\r\n                                    className=\"input\" required\r\n                                    onChange={e => setEmpresa({ ...empresa, nomeFantasia: e.target.value })}\r\n                                    value={empresa?.nomeFantasia!}></Input>\r\n    \r\n                                <Input mask=\"\" type=\"name\" name=\"RazaoSocial\" label=\"Razão social:\" placeholder=\"bom negócio atividades de internet\"\r\n                                    className=\"input mt-2\" required\r\n                                    onChange={e => setEmpresa({ ...empresa, razaoSocial: e.target.value })}\r\n                                    value={empresa.razaoSocial}></Input>\r\n    \r\n                                <div>\r\n                                    <p className=\"font-bold mt-2\">Descrição</p>\r\n                                    <div className=\"rounded-md border-2 border-gray-400 w-64 hover:border-gray-500 w-full\">\r\n                                        <textarea className=\"bg-white focus:bg-gray-100 border-0 \r\n                                                    focus:outline-none w-full py-2 px-2 \r\n                                                    appearance-none\"\r\n                                            onChange={e => setEmpresa({ ...empresa, descricao: e.target.value })} required>\r\n                                        </textarea>\r\n                                    </div>\r\n                                </div>\r\n    \r\n                                <div className=\"flex justify-between mt-2\">\r\n                                    <Input mask=\"99.999.999/9999-99\" name=\"Cnpj\" label=\"CNPJ:\" placeholder=\"12.345.678/0009-12\" className=\"input\"\r\n                                        onChange={e => setEmpresa({ ...empresa, cnpj: e.target.value })}\r\n                                        value={empresa.cnpj}></Input>\r\n    \r\n                                    <Input mask=\"9999-9\" name=\"CNAE\" label=\"CNAE:\" placeholder=\"2543-8\" className=\"input ml-2\"\r\n                                        onChange={e => setEmpresa({ ...empresa, cnae: e.target.value })}\r\n                                        value={empresa.cnae}></Input>\r\n                                </div>\r\n    \r\n                                <div className=\"flex justify-between mt-2\">\r\n                                    <Input mask=\"99999-999\" type=\"text\" name=\"cep\" label=\"CEP:\" placeholder=\"Av. Paulista\" \r\n                                        className=\"input flex-1\" required\r\n                                        onChange={e => setEmpresa({ ...empresa, idEnderecoNavigation: { cep: e.target.value } })}\r\n                                        value={empresa.idEnderecoNavigation?.cep}></Input>\r\n                                </div>\r\n    \r\n                                <div className=\"flex justify-between mt-2\">\r\n                                    <Input mask=\"(99) 99999-9999\" type=\"tel\" name=\"Telefone\" label=\"Telefone:\" placeholder=\"(11)22222-222\" className=\"input\" required\r\n                                        onChange={e => setEmpresa({ ...empresa, telefoneEmpresa: e.target.value })}\r\n                                        value={empresa.telefoneEmpresa}></Input>\r\n    \r\n                                    <Input mask=\"(99) 99999-9999\" type=\"tel\" name=\"Celular\" label=\"Celular:\" placeholder=\"(11)99999-9999\" className=\"input ml-2\" required\r\n                                        onChange={e => setEmpresa({ ...empresa, celularEmpresa: e.target.value })}\r\n                                        value={empresa.celularEmpresa}></Input>\r\n                                </div>\r\n    \r\n                                <div className=\"flex mt-5 gap-5 justify-between\">\r\n                                    <ButtonForm name=\"Login\"></ButtonForm>\r\n                                    <Link to=\"/cadastro\"><Button ghost>Voltar</Button></Link>\r\n                                </div>\r\n    \r\n                            </div>\r\n                        </form>\r\n                        <img className=\"sm:hidden block w-32 right-0 bottom-0 absolute m-2\" src={Senai}/>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CadastroDadosEmpresa","/* eslint-disable eqeqeq */\r\nimport React, { useEffect, useState } from 'react';\r\nimport ButtonForm from '../../components/buttonForm';\r\nimport Input from '../../components/input';\r\nimport Senai from '../../assets/imgs/logo-senai-principal.png';\r\nimport Logo from '../../assets/imgs/logo-dark.png';\r\nimport Button from '../../components/button';\r\nimport CandidatoApi from '../../api/candidatos';\r\nimport NotificacaoApi from '../../api/notificacoes';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { Candidato } from '../../models/candidato';\r\nimport { useAlert } from 'react-alert';\r\nimport Sidebar from '../../components/sidebar/Index';\r\nimport Hamburguer from '../../components/hamburguer';\r\n\r\n\r\nfunction CadastroDadosCandidato(): any {\r\n\r\n    const alert = useAlert();\r\n\r\n    const [candidato, setCandidato] = useState<Candidato>(new Candidato());\r\n\r\n    const location = useLocation<any>();\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        setCandidato({ ...candidato, idUsuarioNavigation: { email: location.state.email, senha: location.state.senha } })\r\n    }, []);\r\n\r\n    function salvar() {\r\n        if (candidato != undefined) {\r\n            CandidatoApi.salvar(candidato, 0).then(data => {\r\n                if (data != null || data != undefined) {\r\n                    history.push(\"/login\")\r\n                    NotificacaoApi.addNotificacao(`Candidato ${candidato.nome} se cadastrou.`)\r\n                }\r\n            });\r\n        } else {\r\n            alert.error(\"Campos não preenchidos.\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        // Lado esquerdo\r\n        <div className=\"w-full body\">\r\n            <Hamburguer className=\"md:hidden flex fixed\" />\r\n            <Sidebar className=\"md:flex hidden\" />\r\n            <main className=\"flex\">\r\n                {/* Lado esquerdo */}\r\n                <div className=\"flex fundo flex-col justify-between items-center sm:flex hidden\">\r\n                    <img src={Senai} alt=\"\" className=\"w-14 h-12 mt-4\" />\r\n                    <div>\r\n                        <p className=\"escrito tracking-wider font-bold\"><i> Sua conexão</i></p>\r\n                        <p className=\"escrito tracking-wider font-bold\"><i> com as empresas</i></p>\r\n                        <p className=\"escrito tracking-wider font-bold\"><i> começam agora.</i></p>\r\n                    </div>\r\n                    <img src={Logo} alt=\"\" className=\"w-2/5\" />\r\n                </div>\r\n                {/* Lado direito */}\r\n                <div className=\"login flex w-full bg-white justify-center items-center\">\r\n                    <div className=\"login flex flex-col m-12\">\r\n                        <h1 className=\"font-bold text-4xl\">Preencha o formulário</h1>\r\n                        <form onSubmit={event => {\r\n                            event.preventDefault()\r\n                            salvar()\r\n                        }}>\r\n\r\n                            <div className=\"flex flex-col justify-between mt-8\">\r\n                                <Input mask=\"\" type=\"name\" name=\"Nome\" label=\"Nome completo:\" placeholder=\"Pedro Augusto da Silva\" className=\"input \" required\r\n                                    onChange={e => setCandidato({ ...candidato, nome: e.target.value })}\r\n                                    value={candidato?.nome}></Input>\r\n\r\n                                <Input mask=\"99/99/9999\" type=\"\" name=\"\" label=\"Data de nascimento:\" placeholder=\"11/11/2011\" className=\"input mt-2\" required\r\n                                    onChange={e => setCandidato({ ...candidato, dataNascimento: e.target.value })}\r\n                                    value={candidato?.dataNascimento}></Input>\r\n\r\n                                <div className=\"flex justify-between mt-2\">\r\n                                    <Input mask=\"999.999.999-99\" type=\"\" name=\"cpf\" label=\"CPF:\" placeholder=\"123.456.789-12\" className=\"input\" required\r\n                                        onChange={e => setCandidato({ ...candidato, cpf: e.target.value })}\r\n                                        value={candidato?.cpf}></Input>\r\n\r\n                                    <Input mask=\"99.999.999-9\" type=\"\" name=\"RG\" label=\"RG:\" placeholder=\"39.086.782-2\" className=\"input ml-2\" required\r\n                                        onChange={e => setCandidato({ ...candidato, rg: e.target.value })}\r\n                                        value={candidato?.rg}></Input>\r\n                                </div>\r\n\r\n                                <div className=\"flex justify-between mt-2\">\r\n                                    <Input mask=\"99999-999\" type=\"\" name=\"cep\" label=\"CEP:\" placeholder=\"00001001\"\r\n                                        className=\"input flex-1\" required\r\n                                        onChange={e => setCandidato({ ...candidato, idEnderecoNavigation: { cep: e.target.value } })}\r\n                                        value={candidato.idEnderecoNavigation?.cep}></Input>\r\n                                    <Input mask=\"99999999\" type=\"\" name=\"matricula\" label=\"Matricula:\" placeholder=\"15121105\" className=\"input ml-2\" required\r\n                                        onChange={e => setCandidato({ ...candidato, matricula: e.target.value })}\r\n                                        value={candidato.matricula}></Input>\r\n                                </div>\r\n\r\n                                <Input mask=\"\" type=\"text\" name=\"matricula\" label=\"Curso:\" placeholder=\"Desenvolvimento de Sistemas\" className=\"input\" required\r\n                                    onChange={e => setCandidato({ ...candidato, curso: e.target.value })}\r\n                                    value={candidato.curso}></Input>\r\n\r\n                                <div className=\"flex justify-between mt-2\">\r\n                                    <Input mask=\"(99) 9999-9999\" type=\"\" name=\"Telefone\" label=\"Telefone:\" placeholder=\"(11) 2222-222\" className=\"input \" required\r\n                                        onChange={e => setCandidato({ ...candidato, telefoneCandidato: e.target.value })}\r\n                                        value={candidato?.telefoneCandidato}></Input>\r\n\r\n                                    <Input mask=\"(99) 9999-9999\" type=\"\" name=\"Celular\" label=\"Celular:\" placeholder=\"(11) 99999-9999\" className=\"input ml-2\" required\r\n                                        onChange={e => setCandidato({ ...candidato, celularCandidato: e.target.value })}\r\n                                        value={candidato?.celularCandidato}></Input>\r\n                                </div>\r\n\r\n                                <div className=\"flex mt-5 gap-5 justify-between\">\r\n                                    <ButtonForm name=\"Login\"></ButtonForm>\r\n                                    <Link to=\"/cadastro\"><Button ghost>Voltar</Button></Link>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </form>\r\n                        <div className=\"flex justify-end mt-10\">\r\n                            <img className=\"sm:hidden block w-32\" src={Senai} alt=\"logo senai\" ></img>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CadastroDadosCandidato","/* eslint-disable eqeqeq */\r\nimport React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport ButtonForm from '../../components/buttonForm';\r\nimport Senai from '../../assets/imgs/logo-senai-principal.png';\r\nimport Logo from '../../assets/imgs/logo-dark.png';\r\nimport Button from '../../components/button';\r\nimport './index.css';\r\nimport Hamburguer from '../../components/hamburguer';\r\nimport Sidebar from '../../components/sidebar/Index';\r\n\r\nfunction Cadastro() {\r\n\r\n    const [pagina, setPagina] = useState('');\r\n\r\n    let history = useHistory();\r\n\r\n    function mudarPagina() {\r\n\r\n        if (pagina == 'false') {\r\n            history.push('/cadastro/empresa/passo-1')\r\n\r\n        } else {\r\n            history.push('/cadastro/candidato/passo-1')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-full flex body\">\r\n            <Hamburguer className=\"md:hidden flex fixed\" />\r\n            <Sidebar className=\"md:flex hidden\" />\r\n            <main className=\"flex\">\r\n                <div className=\"flex fundo flex-col justify-between items-center sm:flex hidden\">\r\n                    <img src={Senai} alt=\"\" className=\"w-14 h-12 mt-4\" />\r\n                    <div className=\"\">\r\n                        <p className=\"escrito tracking-wider font-bold\"><i> Sua conexão</i></p>\r\n                        <p className=\"escrito tracking-wider font-bold\"><i> com as empresas</i></p>\r\n                        <p className=\"escrito tracking-wider font-bold\"><i> começam agora.</i></p>\r\n                    </div>\r\n                    <img src={Logo} alt=\"\" className=\"w-2/5 \" />\r\n                </div>\r\n\r\n\r\n\r\n                <div className=\"login flex w-full bg-white justify-center items-center\">\r\n                    <div className=\"login flex flex-col m-12\">\r\n                        <h1 className=\"font-bold text-4xl\">Crie sua conta</h1>\r\n                        <p className=\"mt-4 font-bold text-2x1\">Nesse perfil você procura...</p>\r\n\r\n                        <div className=\"flex flex-col justify-between mt-8\">\r\n                            <div className=\"flex justify-center\">\r\n\r\n                                <input type=\"radio\" name=\"tipo\" id=\"empresa\" className=\"escolha hidden\"\r\n                                    onChange={() => setPagina(\"false\")} />\r\n                                <label htmlFor=\"empresa\" className=\"escolha w-40 flex justify-center items-center cursor-pointer\" >Criar vagas</label>\r\n\r\n                                <input type=\"radio\" name=\"tipo\" id=\"candidato\" className=\"escolha hidden\"\r\n                                    onChange={() => setPagina(\"true\")} />\r\n\r\n                                <label htmlFor=\"candidato\"\r\n                                    className=\"escolha m-0 w-40 p-2 pl-8 leading-5 cursor-pointer ml-2\">Arrumar um emprego</label>\r\n\r\n                            </div>\r\n                            <div className=\"flex justify-center gap-5 mt-8\">\r\n\r\n                                <ButtonForm name=\"Login\" onClick={() => mudarPagina()} />\r\n                                <Link to=\"/\"><Button ghost>Voltar</Button></Link>\r\n                            </div>\r\n\r\n\r\n                            <img className=\"sm:hidden block w-32 right-0 bottom-0 absolute m-2\" src={Senai} />\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </main>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Cadastro","/* eslint-disable eqeqeq */\r\nimport React, { useEffect, useState } from 'react';\r\nimport Card from '../../components/card/index';\r\nimport Loader from '../../components/loader';\r\nimport Sidebar from '../../components/sidebar/Index';\r\nimport Hamburguer from '../../components/hamburguer';\r\nimport MatchesApi from '../../api/matching';\r\nimport CandidatosApi from '../../api/candidatos';\r\nimport CandidaturasApi from '../../api/candidatura';\r\nimport HabilidadeApi from '../../api/habilidades';\r\n\r\nimport ImgEmpresaDefault from '../../assets/imgs/default-empresa.png';\r\nimport { Candidatura } from '../../models/candidatura';\r\nimport ImgCandidatoDefault from '../../assets/imgs/default-candidato.png'\r\n\r\nimport { Vaga } from '../../models/vaga';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Matching } from '../../models/matching';\r\nimport { Candidato } from '../../models/candidato';\r\nimport { API_URL } from '../../api/apisettings';\r\nimport LoadingPage from '../loading';\r\nimport Dialog from '../../components/dialog';\r\nimport Button from '../../components/button';\r\nimport { toDate } from '../../services/date';\r\nimport { Habilidade } from '../../models/habilidade';\r\nimport { HabilidadeCandidato } from '../../models/habilidadeCandidato';\r\n\r\nfunction EVisualizarVaga() {\r\n\r\n    const location: any = useLocation();\r\n\r\n    const [candidatos, setCandidatos] = useState<Candidato[]>([]);\r\n    const [candidatoDialog, setCandidatoDialog] = useState<Candidato>(new Candidato());\r\n    const [matches, setMatches] = useState<Matching[]>([]);\r\n    const [habilidades, setHabilidades] = useState<Habilidade[]>([]);\r\n    const [vaga, setVagas] = useState<Vaga>(new Vaga());\r\n    const [visualizarPerfil, setVisualizarPerfil] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        Promise.all([\r\n            setVagas(location.state),\r\n            HabilidadeApi.listar().then(data => setHabilidades(data)),\r\n            MatchesApi.listar().then(data => setMatches(data)),\r\n            CandidatosApi.listar().then(data => setCandidatos(data))\r\n        ])\r\n            .then(() => setIsLoading(false));\r\n\r\n    }, []);\r\n\r\n    function openPerfil(candidatura: Candidatura) {\r\n        setCandidatoDialog(candidatos.find(c => c.idUsuario == candidatura.idCandidato)!)\r\n        setVisualizarPerfil(true);\r\n        if (!candidatura.visualizado) {\r\n            console.log(candidatura.idCandidatura!)\r\n            CandidaturasApi.visualizar(candidatura.idCandidatura!)\r\n        }\r\n    }\r\n\r\n    function closePerfil() {\r\n        setCandidatoDialog({});\r\n        setVisualizarPerfil(false);\r\n    }\r\n\r\n    function renderCandidaturas() {\r\n\r\n        return vaga.candidatura!.map((item: Candidatura) => {\r\n            return (\r\n                <Card key={item.idVaga} className=\"flex flex-row mb-5 justify-between\">\r\n                    {/* Lado esquerdo */}\r\n                    <div className=\"flex items-center\">\r\n                        <div className=\"bg-white border-2 border-primary-color h-12 w-12 rounded-full \">\r\n                            <p className=\"text-center pt-3 m-auto text-primary-color font-bold\">{Math.round(matches\r\n                                .find(match => (match.idVaga == item.idVaga) && (match.idCandidato == item.idCandidato))?.porcentagem as number || 0)}%</p>\r\n                        </div>\r\n                        <div className=\"pl-2\">\r\n                            {candidatos.find((c: Candidato) => c.idUsuario == item.idCandidato)?.nome +\r\n                            \" \" +\r\n                            (candidatos.find((c: Candidato) => c.idUsuario == item.idCandidato)?.sobrenome || \"\")\r\n                            }\r\n                            </div>\r\n                    </div>\r\n                    {/* Lado direito */}\r\n                    <div className=\"flex md:flex-row flex-col\">\r\n                        <div className=\"hover-gray-200 md:p-5 p-2\r\n                                        flex md:flex-col flex-row items-center\"\r\n                            onClick={() => openPerfil(item)}>\r\n                            <i className=\"ri-file-text-line pr-1 md:text-2xl text-lg\r\n                                          flex justify-center\">                \r\n                            </i>\r\n                            <span> Ver perfil</span>\r\n                        </div>\r\n                        {/* Sem funcionalidade de ver PDF */}\r\n                        {/* <div className=\"hover-gray-200 md:p-5 p-2\r\n                                        flex md:flex-col flex-row items-center\">\r\n                            <i className=\"ri-attachment-2 pr-1 md:text-2xl text-lg\r\n                                          flex justify-center items-center\">\r\n                            </i>\r\n                            <span> Ver currículo</span>\r\n                        </div> */}\r\n                    </div>\r\n                </Card>\r\n            )\r\n        })\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <LoadingPage />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='body w-full'>\r\n            <Hamburguer className=\"md:hidden flex fixed\" />\r\n            <Sidebar className=\"md:flex hidden\"></Sidebar>\r\n            <main className=\"w-full flex flex-col\">\r\n                <Dialog isOpen={visualizarPerfil} onAfterClose={closePerfil}\r\n                    title=\"Detalhes do candidato\"\r\n                >\r\n                    <div className=\"flex justify-center w-50em gap-2 mt-6\">\r\n                        <div className=\"flex flex-col w-full\">\r\n                            <div className=\"flex flex-col gap-5 mb-10 self-center\">\r\n                                <img className=\"w-24 h-24 object-cover rounded-full self-center\"\r\n                                    src={`${API_URL}Candidato/Img/${candidatoDialog?.idUsuario}`}\r\n                                    onError={e => e.currentTarget.src = ImgCandidatoDefault} alt=\"img candidato\">\r\n                                </img>\r\n                                <div>\r\n                                    <p className=\"text-lg\">{`${candidatoDialog?.nome}  ${candidatoDialog?.sobrenome || \"\"}`}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"grid md:grid-cols-2 grid-cols-1\">\r\n                                {/* Coluna Esquerda */}\r\n                                <div className=\"flex flex-col flex pr-10\">\r\n                                    <div>\r\n                                        <div className=\"mb-8\">\r\n                                            <p className=\"font-bold\">Email</p>\r\n                                            <p>{candidatoDialog?.idUsuarioNavigation?.email}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"mb-8\">\r\n                                            <p className=\"font-bold\">Endereço</p>\r\n                                            <p>{candidatoDialog?.idEnderecoNavigation?.localCompleto}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"mb-8\">\r\n                                            <p className=\"font-bold\"> Curso</p>\r\n                                            <p>{candidatoDialog?.curso}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Coluna Direita */}\r\n                                <div className=\"flex flex-col\">\r\n                                    <div>\r\n                                        <div className=\"mb-8\">\r\n                                            <p className=\"font-bold\">Data de Nascimento</p>\r\n                                            <p>{toDate(new Date(candidatoDialog?.dataNascimento!))}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"mb-8\">\r\n                                            <p className=\"font-bold\">Celular</p>\r\n                                            <p>{candidatoDialog?.celularCandidato}</p>\r\n                                        </div>\r\n                                        <div className=\"mb-8\">\r\n                                            <p className=\"font-bold\">Telefone</p>\r\n                                            <p>{candidatoDialog?.telefoneCandidato}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {candidatoDialog?.habilidadeCandidato?.length! > 0 && (\r\n                                <div>\r\n                                <p className=\"font-bold\">Habilidades</p>\r\n                                <div className=\"flex flex-row flex-wrap gap-2\">\r\n                                    {candidatoDialog.habilidadeCandidato?.map((item: HabilidadeCandidato) => {\r\n                                        return (\r\n                                            <span className=\"bg-gray-400 p-2 rounded-full h-8 flex items-center cursor-pointer\">\r\n                                                {habilidades?.find(h => h.idHabilidade == item.idHabilidade)?.nomeHabilidade}\r\n                                            </span>\r\n                                        )\r\n                                    })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            )}\r\n                            <div className=\"flex flex-col items-center mt-5\">\r\n                                <Button onClick={closePerfil}>Fechar</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n                <div className=\"p-5 bg-cv-gray\">\r\n                    <div className=\"flex lg:w-2/3 w-full mx-auto\">\r\n                        <div className=\"pr-12\">\r\n                            <img className=\"w-56 h-56 object-contain\"\r\n                                src={`${API_URL}Empresa/Img/${vaga.idEmpresa}`}\r\n                                onError={e => e.currentTarget.src = ImgEmpresaDefault}>\r\n                            </img>\r\n                        </div>\r\n                        <div>\r\n                            <h2 className=\"text-2xl\">{vaga?.titulo}</h2>\r\n                            <p className=\"pb-6\">{vaga?.descricao}</p>\r\n                            <div>\r\n                                <i className=\"ri-map-pin-line\">\r\n                                    <span>{vaga?.idEnderecoNavigation?.localCompleto}</span>\r\n                                </i>\r\n                                <div className=\"flex\">\r\n                                    <div>\r\n                                        <i className=\"ri-money-dollar-circle-line lg:text-lg\"></i>\r\n                                        <span>R$ {vaga?.salario}</span>\r\n                                    </div>\r\n                                    <div className=\"pl-10\">\r\n                                        <i className=\"ri-time-line lg:text-lg\"></i>\r\n                                        <span>{vaga?.cargaHoraria}h</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <i className=\"ri-draft-line lg:text-lg\"></i>\r\n                                    <span> {vaga.candidatura?.length || 0} candidaturas</span>\r\n                                </div>\r\n                                <div>\r\n                                    <i className=\"ri-user-line lg:text-lg\"></i>\r\n                                    <span> {vaga.visualizacao || 0} visualizações</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {vaga.candidatura!.length > 0 ? (\r\n                    <div>\r\n                        <h1 className=\"p-10 md:text-2xl text-xl text-center\">Candidaturas</h1>\r\n                        <div className=\"lg:w-2/3 w-full m-auto md:text-base text-sm px-5\">\r\n                            <div className=\"justify-between\">\r\n                                <div className=\"flex flex-row font-medium m-2\">\r\n                                    <p className=\"flex\">% de Match</p>\r\n                                    <p className=\"flex pl-10\">Candidato</p>\r\n                                </div>\r\n                            </div>\r\n                            {renderCandidaturas()}\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                        <div className=\"flex flex-1 justify-center items-center\">\r\n                            <p className=\"\">Há nenhuma candidatura nessa vaga.</p>\r\n                        </div>\r\n                    )}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\nexport default EVisualizarVaga; ","import React, { InputHTMLAttributes, TextareaHTMLAttributes } from 'react'\r\n\r\ninterface InputProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\r\n    label?: string;\r\n    name: string;\r\n    hideLabel?: boolean;\r\n}\r\n\r\nconst TextArea: React.FC<InputProps> = ({ label, name, hideLabel, ...props }) => {\r\n    return (\r\n        <div className={props.className}>\r\n            {!hideLabel && (<div><label className={\"font-bold pt-3\"} htmlFor={name}>{label}</label><br /></div>)}\r\n            <div className=\"rounded-md border-2 border-gray-400 w-64 hover:border-gray-500 w-full\">\r\n                <textarea {...props} className=\"bg-white focus:bg-gray-100 border-0 \r\n                                                        focus:outline-none w-full py-2 px-2 \r\n                                                        appearance-none\"\r\n                    id={name}>\r\n                </textarea>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextArea;","/* eslint-disable eqeqeq */\r\nimport React, { useEffect, useState } from 'react';\r\nimport EmpresaApi from '../../api/empresa'\r\nimport Sidebar from '../../components/sidebar/Index';\r\nimport Input from '../../components/input';\r\nimport Hamburguer from '../../components/hamburguer';\r\nimport TextArea from '../../components/textArea';\r\nimport ButtonForm from '../../components/buttonForm';\r\nimport { Empresa } from '../../models/empresa';\r\nimport { Jwt } from '../../services/auth';\r\nimport { API_URL } from '../../api/apisettings';\r\nimport { useAlert } from 'react-alert';\r\nimport LoadingPage from '../loading';\r\n\r\nfunction EditarPerfilEmpresa() {\r\n\r\n    const [empresaForm, setEmpresaForm] = useState<Empresa>(new Empresa());\r\n    const [empresa, setEmpresa] = useState<Empresa>(new Empresa());\r\n    const [imgBuffer, setImgBuffer] = useState<Blob>();\r\n    const [imgUrl, setImgUrl] = useState(\"\")\r\n    const [editando, setEditando] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const alert = useAlert();\r\n\r\n    useEffect(() => {\r\n        Promise.all([\r\n            EmpresaApi.salvar(empresaForm, Jwt().jti).then(data => setEmpresaForm(data)),\r\n            EmpresaApi.buscarPorId(Jwt().jti).then(data => {\r\n                setEmpresa(data)\r\n                // A URL da foto da Empresa.\r\n                setImgUrl(`${API_URL}Empresa/Img/${data.idUsuario}`)\r\n            })\r\n        ])\r\n        .then(() => setIsLoading(false));\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Verifica se o usuário já adicionou uma foto..\r\n        if (imgBuffer != undefined || imgBuffer != null)\r\n            setImgUrl(URL.createObjectURL(imgBuffer));\r\n    }, [imgBuffer]);\r\n\r\n\r\n    function salvar() {\r\n        if (empresaForm != undefined) {\r\n            EmpresaApi.salvar(empresaForm, Jwt().jti).then(data => {\r\n                if (data != null || data != undefined) {\r\n                    alert.success(\"Atualizado dados com sucesso.\")\r\n                    setEmpresaForm(new Empresa());\r\n                    EmpresaApi.buscarPorId(Jwt().jti).then(e => setEmpresa(e))\r\n                }\r\n                else alert.error(\"Falha ao atualizar os dados.\")\r\n            });\r\n            if (imgBuffer != null)\r\n                EmpresaApi.uploadFoto(empresa.idUsuario!, imgBuffer).then(data => {\r\n                    if (data != undefined) alert.success(\"Atualizado foto com sucesso.\")\r\n                    else alert.error(\"Não foi possível atualizar a foto.\")\r\n                })\r\n        }\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <LoadingPage/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"body w-full\">\r\n            <Hamburguer className=\"md:hidden flex fixed\" />\r\n            <Sidebar className=\"md:flex hidden\" />\r\n            <main className=\"w-full p-5\">\r\n                <h1 className=\"p-10 md:text-2xl text-xl flex justify-center\">Detalhes da empresa</h1>\r\n                <form className=\"m-auto lg:w-1/2 w-full\"\r\n                    onSubmit={event => {\r\n                        event.preventDefault();\r\n                        salvar();\r\n                        event.currentTarget.reset();\r\n                    }}>\r\n                    <div className=\"mb-5 text-center\">\r\n                        <img className=\"w-32 h-32 object-contain mx-auto border-2\"\r\n                            src={imgUrl} alt=\"\" />\r\n                        <input id=\"e-upload-photo\" className=\"hidden\" type=\"file\"\r\n                            onChange={e => setImgBuffer(e.target.files![0])}\r\n                            accept=\"image/*\"\r\n                        />\r\n                        <label className=\"button-ghost cursor-pointer \r\n                                          inline-block text-center m-2\"\r\n                            htmlFor=\"e-upload-photo\"\r\n                        >\r\n                            Mudar foto\r\n                        </label>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"input-container mt-2 gap-1\">\r\n                        <b>Email: </b>\r\n                        <input className=\"check-edit hidden\" type=\"checkbox\" id=\"showEmail\" onClick={() => setEditando(true)}></input>\r\n                        <Input mask=\"\" label=\"Email:\" name=\"email\" hideLabel={true}\r\n                            onChange={e => setEmpresaForm({ ...empresaForm, idUsuarioNavigation: { email: e.target.value } })}\r\n                            value={empresaForm?.idUsuarioNavigation?.email} placeholder={empresa.idUsuarioNavigation?.email}>\r\n                        </Input>\r\n                        <p>{empresa.idUsuarioNavigation?.email}</p>\r\n\r\n                        {/* {!editando && (\r\n                            <label className=\"input-editar ml-auto\" htmlFor=\"showEmail\">\r\n                                <i className=\"ri-edit-2-line\"></i>\r\n                                <span className=\"cursor-pointer\"> Editar</a>\r\n                            </label>\r\n                        )} */}\r\n\r\n                        <label className=\"input-editar ml-auto\" htmlFor=\"showEmail\">\r\n                            <i className=\"ri-edit-2-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Editar</span>\r\n                        </label>\r\n                        <label className=\"input-salvar ml-auto\" htmlFor=\"showEmail\">\r\n                            <i className=\"ri-check-fill\"></i>\r\n                            <input type=\"submit\" value=\"Salvar\"></input>\r\n                        </label>\r\n                        <label className=\"input-salvar\" htmlFor=\"showEmail\">\r\n                            <i className=\"ri-close-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Cancelar</span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <hr className=\"border-gray-500 mt-3 mb-3\" />\r\n\r\n                    <div className=\"input-container mt-2 gap-1\">\r\n                        <b>Nome: </b>\r\n                        <input className=\"check-edit hidden\" type=\"checkbox\" id=\"showNome\" onClick={() => setEditando(true)}></input>\r\n                        <Input mask=\"\" label=\"Nome:\" name=\"nome\" hideLabel={true}\r\n                            onChange={e => setEmpresaForm({ ...empresaForm, nomeFantasia: e.target.value })}\r\n                            value={empresaForm?.nomeFantasia!} placeholder={empresa.nomeFantasia!}>\r\n                        </Input>\r\n                        <p>{empresa.nomeFantasia}</p>\r\n\r\n                        <label className=\"input-editar ml-auto\" htmlFor=\"showNome\">\r\n                            <i className=\"ri-edit-2-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Editar</span>\r\n                        </label>\r\n                        <label className=\"input-salvar ml-auto\" htmlFor=\"showNome\">\r\n                            <i className=\"ri-check-fill\"></i>\r\n                            <input type=\"submit\" value=\"Salvar\"></input>\r\n                        </label>\r\n                        <label className=\"input-salvar\" htmlFor=\"showNome\">\r\n                            <i className=\"ri-close-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Cancelar</span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <hr className=\"border-gray-500 mt-3 mb-3\" />\r\n\r\n                    <div className=\"input-container mt-2 gap-1\">\r\n                        <b>Telefone: </b>\r\n                        <input className=\"check-edit hidden\" type=\"checkbox\" id=\"showTelefone\" onClick={() => setEditando(true)}></input>\r\n                        <Input mask=\"(99) 9999-9999\" label=\"Telefone:\" name=\"telefone\" hideLabel={true}\r\n                            onChange={e => setEmpresaForm({ ...empresaForm, telefoneEmpresa: e.target.value })}\r\n                            value={empresaForm?.telefoneEmpresa!} placeholder={empresa.telefoneEmpresa!}>\r\n                        </Input>\r\n                        <p>{empresa.telefoneEmpresa}</p>\r\n\r\n                        <label className=\"input-editar ml-auto\" htmlFor=\"showTelefone\">\r\n                            <i className=\"ri-edit-2-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Editar</span>\r\n                        </label>\r\n                        <label className=\"input-salvar ml-auto\" htmlFor=\"showTelefone\">\r\n                            <i className=\"ri-check-fill\"></i>\r\n                            <input type=\"submit\" value=\"Salvar\"></input>\r\n                        </label>\r\n                        <label className=\"input-salvar\" htmlFor=\"showTelefone\">\r\n                            <i className=\"ri-close-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Cancelar</span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <hr className=\"border-gray-500 mt-3 mb-3\" />\r\n\r\n                    <div className=\"input-container mt-2 gap-1\">\r\n                        <b>Celular: </b>\r\n                        <input className=\"check-edit hidden\" type=\"checkbox\" id=\"showCelular\" onClick={() => setEditando(true)}></input>\r\n                        <Input mask=\"(99) 99999-9999\" label=\"Celular:\" name=\"celular\" hideLabel={true}\r\n                            onChange={e => setEmpresaForm({ ...empresaForm, celularEmpresa: e.target.value })}\r\n                            value={empresaForm?.celularEmpresa!} placeholder={empresa.celularEmpresa!}>\r\n                        </Input>\r\n                        <p>{empresa.celularEmpresa}</p>\r\n\r\n                        <label className=\"input-editar ml-auto\" htmlFor=\"showCelular\">\r\n                            <i className=\"ri-edit-2-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Editar</span>\r\n                        </label>\r\n                        <label className=\"input-salvar ml-auto\" htmlFor=\"showCelular\">\r\n                            <i className=\"ri-check-fill\"></i>\r\n                            <input type=\"submit\" value=\"Salvar\"></input>\r\n                        </label>\r\n                        <label className=\"input-salvar\" htmlFor=\"showCelular\">\r\n                            <i className=\"ri-close-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Cancelar</span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <hr className=\"border-gray-500 mt-3 mb-3\" />\r\n\r\n                    <div className=\"input-container mt-2 gap-1\">\r\n                        <b>CEP: </b>\r\n                        <input className=\"check-edit hidden\" type=\"checkbox\" id=\"showCEP\" onClick={() => setEditando(true)}></input>\r\n                        <Input mask=\"99999-999\" label=\"Endereço:\" name=\"endereço\" hideLabel={true}\r\n                            onChange={e => setEmpresaForm({ ...empresaForm, idEnderecoNavigation: { cep: e.target.value } })}\r\n                            value={empresaForm?.idEnderecoNavigation?.cep!} placeholder=\"Digite o cep...\">\r\n                        </Input>\r\n                        <p>{empresa.idEnderecoNavigation?.cep}</p>\r\n\r\n                        <label className=\"input-editar ml-auto\" htmlFor=\"showCEP\">\r\n                            <i className=\"ri-edit-2-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Editar</span>\r\n                        </label>\r\n                        <label className=\"input-salvar ml-auto\" htmlFor=\"showCEP\">\r\n                            <i className=\"ri-check-fill\"></i>\r\n                            <input type=\"submit\" value=\"Salvar\"></input>\r\n                        </label>\r\n                        <label className=\"input-salvar\" htmlFor=\"showCEP\">\r\n                            <i className=\"ri-close-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Cancelar</span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <hr className=\"border-gray-500 mt-3 mb-3\" />\r\n\r\n                    <div className=\"input-container mt-2 gap-1\">\r\n                        <b>Razão Social: </b>\r\n                        <input className=\"check-edit hidden\" type=\"checkbox\" id=\"showRazaoSocial\" onClick={() => setEditando(true)}></input>\r\n                        <Input mask=\"\" label=\"Razao Social:\" name=\"razao\" hideLabel={true}\r\n                            onChange={e => setEmpresaForm({ ...empresaForm, razaoSocial: e.target.value })}\r\n                            value={empresaForm?.razaoSocial!} placeholder={empresa.razaoSocial!}>\r\n                        </Input>\r\n                        <p>{empresa.razaoSocial}</p>\r\n\r\n                        <label className=\"input-editar ml-auto\" htmlFor=\"showRazaoSocial\">\r\n                            <i className=\"ri-edit-2-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Editar</span>\r\n                        </label>\r\n                        <label className=\"input-salvar ml-auto\" htmlFor=\"showRazaoSocial\">\r\n                            <i className=\"ri-check-fill\"></i>\r\n                            <input type=\"submit\" value=\"Salvar\"></input>\r\n                        </label>\r\n                        <label className=\"input-salvar\" htmlFor=\"showRazaoSocial\">\r\n                            <i className=\"ri-close-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Cancelar</span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <hr className=\"border-gray-500 mt-3 mb-3\" />\r\n\r\n                    <div className=\"input-container mt-2 gap-1\">\r\n                        <b>CNPJ: </b>\r\n                        <input className=\"check-edit hidden\" type=\"checkbox\" id=\"showCNPJ\" onClick={() => setEditando(true)}></input>\r\n                        <Input mask=\"99.999.999/9999-99\" label=\"Razao Social:\" name=\"razao\" hideLabel={true}\r\n                            onChange={e => setEmpresaForm({ ...empresaForm, cnpj: e.target.value })}\r\n                            value={empresaForm?.cnpj!} placeholder={empresa.cnpj!}>\r\n                        </Input>\r\n                        <p>{empresa.cnpj}</p>\r\n\r\n                        <label className=\"input-editar ml-auto\" htmlFor=\"showCNPJ\">\r\n                            <i className=\"ri-edit-2-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Editar</span>\r\n                        </label>\r\n                        <label className=\"input-salvar ml-auto\" htmlFor=\"showCNPJ\">\r\n                            <i className=\"ri-check-fill\"></i>\r\n                            <input type=\"submit\" value=\"Salvar\"></input>\r\n                        </label>\r\n                        <label className=\"input-salvar\" htmlFor=\"showCNPJ\">\r\n                            <i className=\"ri-close-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Cancelar</span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <hr className=\"border-gray-500 mt-3 mb-3\" />\r\n\r\n                    <div className=\"input-container mt-2 gap-1\">\r\n                        <b>CNAE: </b>\r\n                        <input className=\"check-edit hidden\" type=\"checkbox\" id=\"showCNAE\" onClick={() => setEditando(true)}></input>\r\n                        <Input mask=\"9999-9\" label=\"Razao Social:\" name=\"razao\" hideLabel={true}\r\n                            onChange={e => setEmpresaForm({ ...empresaForm, cnae: e.target.value })}\r\n                            value={empresaForm?.cnae!} placeholder={empresa.cnae!}>\r\n                        </Input>\r\n                        <p>{empresa.cnae}</p>\r\n\r\n                        <label className=\"input-editar ml-auto\" htmlFor=\"showCNAE\">\r\n                            <i className=\"ri-edit-2-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Editar</span>\r\n                        </label>\r\n                        <label className=\"input-salvar ml-auto\" htmlFor=\"showCNAE\">\r\n                            <i className=\"ri-check-fill\"></i>\r\n                            <input type=\"submit\" value=\"Salvar\"></input>\r\n                        </label>\r\n                        <label className=\"input-salvar\" htmlFor=\"showCNAE\">\r\n                            <i className=\"ri-close-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Cancelar</span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <hr className=\"border-gray-500 mt-3 mb-3\" />\r\n\r\n                    <div className=\"input-container mt-2 gap-1\">\r\n                        <b className=\"self-start\">Descrição: </b>\r\n                        <input className=\"check-edit hidden\" type=\"checkbox\" id=\"showDescricao\" onClick={() => setEditando(true)}></input>\r\n                        <TextArea className=\"w-8/12\" name=\"descricao\" hideLabel\r\n                            rows={5} cols={30}\r\n                            onChange={e => setEmpresaForm({ ...empresaForm, descricao: e.target.value })}\r\n                            value={empresaForm?.descricao!}\r\n                            defaultValue={empresa.descricao!}\r\n                            placeholder={empresa.descricao!}>\r\n                        </TextArea>\r\n                        <p className=\"p-5 mx-2 w-8/12 bg-white rounded-md\">{empresa.descricao}</p>\r\n\r\n                        <label className=\"input-editar ml-auto self-start\" htmlFor=\"showDescricao\">\r\n                            <i className=\"ri-edit-2-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Editar</span>\r\n                        </label>\r\n                        <label className=\"input-salvar ml-auto self-start\" htmlFor=\"showDescricao\">\r\n                            <i className=\"ri-check-fill\"></i>\r\n                            <input type=\"submit\" value=\"Salvar\"></input>\r\n                        </label>\r\n                        <label className=\"input-salvar self-start\" htmlFor=\"showDescricao\">\r\n                            <i className=\"ri-close-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Cancelar</span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-center mt-8\">\r\n                        <ButtonForm name=\"Concluir\" value=\"Salvar Alterações\"></ButtonForm>\r\n                    </div>\r\n                </form>\r\n\r\n            </main>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default EditarPerfilEmpresa;","/* eslint-disable eqeqeq */\r\nimport React, { useEffect, useState } from 'react';\r\nimport Button from '../../components/button/index';\r\nimport CandidatoApi from '../../api/candidatos'\r\nimport Sidebar from '../../components/sidebar/Index';\r\nimport Input from '../../components/input';\r\nimport Hamburguer from '../../components/hamburguer';\r\nimport ButtonForm from '../../components/buttonForm';\r\nimport Select from '../../components/select';\r\nimport HabilidadeApi from '../../api/habilidades';\r\nimport ImgCandidatoDefault from '../../assets/imgs/default-candidato.png';\r\nimport { Candidato } from '../../models/candidato';\r\nimport { Jwt } from '../../services/auth';\r\nimport { API_URL } from '../../api/apisettings';\r\nimport { useAlert } from 'react-alert';\r\nimport { HabilidadeCandidato } from '../../models/habilidadeCandidato';\r\nimport { Habilidade } from '../../models/habilidade';\r\nimport { toDate } from '../../services/date';\r\nimport '../e-editar-perfil/index';\r\nimport LoadingPage from '../loading';\r\n\r\nfunction EditarPerfilCandidato() {\r\n\r\n    const [candidatoForm, setCandidatoForm] = useState<Candidato>(new Candidato());\r\n    const [candidato, setCandidato] = useState<Candidato>(new Candidato());\r\n    const [imgBuffer, setImgBuffer] = useState<Blob>();\r\n    const [imgUrl, setImgUrl] = useState(\"\")\r\n    const [editando, setEditando] = useState(false);\r\n    const [habilidades, setHabilidades] = useState<Habilidade[]>([]);\r\n    const [idHabilidade, setIdHabilidade] = useState<number>(0);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    var perfilEditado = false;\r\n\r\n    const alert = useAlert();\r\n\r\n    useEffect(() => {\r\n        Promise.all([\r\n            HabilidadeApi.listar().then(data => setHabilidades(data)),\r\n            CandidatoApi.buscarPorId(Jwt().jti).then(data => {\r\n                setCandidatoForm({\r\n                    ...candidatoForm, habilidadeCandidato: data.habilidadeCandidato?.map(hc => {\r\n                        return Object.assign({}, hc, {\r\n                            idHabilidadeCandidato: undefined\r\n                        })\r\n                    })\r\n                });\r\n                setCandidato(data)\r\n                // A URL da foto da Candidato.\r\n                setImgUrl(`${API_URL}Candidato/Img/${data.idUsuario}`);\r\n            })\r\n        ])\r\n        .then(() => setIsLoading(false))\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Verifica se o usuário já adicionou uma foto..\r\n        if (imgBuffer != undefined || imgBuffer != null)\r\n            setImgUrl(URL.createObjectURL(imgBuffer));\r\n    }, [imgBuffer]);\r\n\r\n\r\n    useEffect(() => {\r\n        perfilEditado = true;\r\n    }, [candidatoForm]);\r\n\r\n    function salvar() {\r\n        if (candidatoForm != undefined && perfilEditado == true) {\r\n            CandidatoApi.salvar(candidatoForm, Jwt().jti).then(data => {\r\n                if (data != null || data != undefined) {\r\n                    alert.success(\"Dados atualizados com sucesso.\")\r\n                    setCandidatoForm(new Candidato());\r\n                    CandidatoApi.buscarPorId(Jwt().jti).then(e => setCandidato(e))\r\n                }\r\n                else alert.error(\"Não foi possível atualizar suas informações.\")\r\n            });\r\n        }\r\n        if (imgBuffer != null)\r\n            CandidatoApi.uploadFoto(candidato.idUsuario!, imgBuffer).then(data => {\r\n                if (data != undefined) alert.success(\"Atualizado foto com sucesso.\")\r\n                else alert.error(\"Não foi possível atualizar a foto.\")\r\n            })\r\n    }\r\n\r\n    function addHabilidade(id: number) {\r\n        var habilidadesAdd: HabilidadeCandidato[] = candidatoForm.habilidadeCandidato!;\r\n        HabilidadeApi.buscarPorId(id).then(data => {\r\n            habilidadesAdd.push({ idHabilidade: id })\r\n            setCandidatoForm({ ...candidatoForm, habilidadeCandidato: habilidadesAdd })\r\n        })\r\n    }\r\n\r\n    function removeHabilidade(id: number) {\r\n        var habilidades: HabilidadeCandidato[] = candidatoForm.habilidadeCandidato!;\r\n        var habilidadesDel = habilidades.filter(h => h.idHabilidade !== id)\r\n        setCandidatoForm({ ...candidatoForm, habilidadeCandidato: habilidadesDel })\r\n    }\r\n\r\n    function renderHabilidades() {\r\n        if (candidatoForm.habilidadeCandidato?.length == 0) return (\r\n            <div></div>\r\n        )\r\n\r\n        return candidatoForm.habilidadeCandidato?.map((item: HabilidadeCandidato) => {\r\n            return (\r\n                <span className=\"bg-gray-400 p-2 rounded-full m-1 h-8 flex items-center cursor-pointer\"\r\n                    onClick={() => removeHabilidade(item.idHabilidade!)}>\r\n                    {habilidades?.find(h => h.idHabilidade == item.idHabilidade)?.nomeHabilidade}\r\n                </span>\r\n            )\r\n        })\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <LoadingPage/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"body w-full\">\r\n            <Hamburguer className=\"md:hidden flex fixed\" />\r\n            <Sidebar className=\"md:flex hidden\" />\r\n            <main className=\"w-full p-5\">\r\n                <h1 className=\"p-10 md:text-2xl text-xl flex justify-center\">Detalhes do candidato</h1>\r\n                <form className=\"m-auto lg:w-1/2 w-full\"\r\n                    onSubmit={event => {\r\n                        event.preventDefault();\r\n                        salvar();\r\n                        event.currentTarget.reset();\r\n                    }}>\r\n                    <div className=\"mb-5 text-center\">\r\n                        <img className=\"w-32 h-32 object-contain mx-auto rounded-full\"\r\n                            onError={e => e.currentTarget.src = ImgCandidatoDefault}\r\n                            src={imgUrl} alt=\"img candidato\" \r\n                        />\r\n                        <input id=\"c-upload-photo\" className=\"hidden\" type=\"file\"\r\n                            onChange={e => setImgBuffer(e.target.files![0])}\r\n                            accept=\"image/*\" />\r\n                        <label className=\"button-ghost cursor-pointer\r\n                                          inline-block text-center m-2\"\r\n                            htmlFor=\"c-upload-photo\"\r\n                        >\r\n                            Mudar foto\r\n                        </label>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"input-container mt-2 gap-1\">\r\n                        <b>Email: </b>\r\n                        <input className=\"check-edit hidden\" type=\"checkbox\" id=\"showEmail\" onClick={() => setEditando(true)}></input>\r\n                        <Input mask=\"\" label=\"Email:\" name=\"email\" hideLabel={true}\r\n                            onChange={e => setCandidatoForm({ ...candidatoForm, idUsuarioNavigation: { email: e.target.value } })}\r\n                            value={candidatoForm?.idUsuarioNavigation?.email} placeholder={candidato.idUsuarioNavigation?.email}>\r\n                        </Input>\r\n                        <p>{candidato.idUsuarioNavigation?.email}</p>\r\n\r\n                        <label className=\"input-editar ml-auto\" htmlFor=\"showEmail\">\r\n                            <i className=\"ri-edit-2-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Editar</span>\r\n                        </label>\r\n                        <label className=\"input-salvar ml-auto\" htmlFor=\"showEmail\">\r\n                            <i className=\"ri-check-fill\"></i>\r\n                            <input type=\"submit\" value=\"Salvar\"></input>\r\n                        </label>\r\n                        <label className=\"input-salvar\" htmlFor=\"showEmail\">\r\n                            <i className=\"ri-close-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Cancelar</span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <hr className=\"border-gray-500 mt-3 mb-3\" />\r\n\r\n                    <div className=\"input-container mt-2 gap-1\">\r\n                        <b>Nome: </b>\r\n                        <input className=\"check-edit hidden\" type=\"checkbox\" id=\"showNome\" onClick={() => setEditando(true)}></input>\r\n                        <Input mask=\"\" label=\"Nome:\" name=\"nome\" hideLabel={true}\r\n                            onChange={e => setCandidatoForm({ ...candidatoForm, nome: e.target.value })}\r\n                            value={candidatoForm?.nome!} placeholder={candidato.nome!}>\r\n                        </Input>\r\n                        <p>{candidato.nome}</p>\r\n\r\n                        <label className=\"input-editar ml-auto\" htmlFor=\"showNome\">\r\n                            <i className=\"ri-edit-2-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Editar</span>\r\n                        </label>\r\n                        <label className=\"input-salvar ml-auto\" htmlFor=\"showNome\">\r\n                            <i className=\"ri-check-fill\"></i>\r\n                            <input type=\"submit\" value=\"Salvar\"></input>\r\n                        </label>\r\n                        <label className=\"input-salvar\" htmlFor=\"showNome\">\r\n                            <i className=\"ri-close-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Cancelar</span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <hr className=\"border-gray-500 mt-3 mb-3\" />\r\n\r\n                    <div className=\"input-container mt-2 gap-1\">\r\n                        <b>Sobrenome: </b>\r\n                        <input className=\"check-edit hidden\" type=\"checkbox\" id=\"showSobrenome\" onClick={() => setEditando(true)}></input>\r\n                        <Input mask=\"\" label=\"Sobrenome:\" name=\"sobrenome\" hideLabel\r\n                            onChange={e => setCandidatoForm({ ...candidatoForm, sobrenome: e.target.value })}\r\n                            value={candidatoForm?.sobrenome!} placeholder={candidato.sobrenome!}>\r\n                        </Input>\r\n                        <p>{candidato.sobrenome}</p>\r\n\r\n                        <label className=\"input-editar ml-auto\" htmlFor=\"showSobrenome\">\r\n                            <i className=\"ri-edit-2-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Editar</span>\r\n                        </label>\r\n                        <label className=\"input-salvar ml-auto\" htmlFor=\"showSobrenome\">\r\n                            <i className=\"ri-check-fill\"></i>\r\n                            <input type=\"submit\" value=\"Salvar\"></input>\r\n                        </label>\r\n                        <label className=\"input-salvar\" htmlFor=\"showSobrenome\">\r\n                            <i className=\"ri-close-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Cancelar</span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <hr className=\"border-gray-500 mt-3 mb-3\" />\r\n\r\n                    <div className=\"input-container mt-2 gap-1\">\r\n                        <b>Data de Nascimento: </b>\r\n                        <input className=\"check-edit hidden\" type=\"checkbox\" id=\"showDataNascimento\" onClick={() => setEditando(true)}></input>\r\n                        <Input type=\"date\" mask=\"\" label=\"Data de nascimento:\" name=\"data nascimento\" hideLabel={true}\r\n                            onChange={e => setCandidatoForm({ ...candidatoForm, dataNascimento: e.target.value })}\r\n                            value={candidatoForm?.dataNascimento!} placeholder={toDate(new Date(candidato.dataNascimento!))}>\r\n                        </Input>\r\n                        <p>{toDate(new Date(candidato.dataNascimento!))}</p>\r\n\r\n                        <label className=\"input-editar ml-auto\" htmlFor=\"showDataNascimento\">\r\n                            <i className=\"ri-edit-2-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Editar</span>\r\n                        </label>\r\n                        <label className=\"input-salvar ml-auto\" htmlFor=\"showDataNascimento\">\r\n                            <i className=\"ri-check-fill\"></i>\r\n                            <input type=\"submit\" value=\"Salvar\"></input>\r\n                        </label>\r\n                        <label className=\"input-salvar\" htmlFor=\"showDataNascimento\">\r\n                            <i className=\"ri-close-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Cancelar</span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <hr className=\"border-gray-500 mt-3 mb-3\" />\r\n\r\n                    <div className=\"input-container mt-2 gap-1\">\r\n                        <b>CPF: </b>\r\n                        <input className=\"check-edit hidden\" type=\"checkbox\" id=\"showCPF\" onClick={() => setEditando(true)}></input>\r\n                        <Input mask=\"999.999.999-99\" label=\"Cpf:\" name=\"cpf\" hideLabel={true}\r\n                            onChange={e => setCandidatoForm({ ...candidatoForm, cpf: e.target.value })}\r\n                            value={candidatoForm?.cpf!} placeholder={candidato.cpf!}>\r\n                        </Input>\r\n                        <p>{candidato.cpf}</p>\r\n\r\n                        <label className=\"input-editar ml-auto\" htmlFor=\"showCPF\">\r\n                            <i className=\"ri-edit-2-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Editar</span>\r\n                        </label>\r\n                        <label className=\"input-salvar ml-auto\" htmlFor=\"showCPF\">\r\n                            <i className=\"ri-check-fill\"></i>\r\n                            <input type=\"submit\" value=\"Salvar\"></input>\r\n                        </label>\r\n                        <label className=\"input-salvar\" htmlFor=\"showCPF\">\r\n                            <i className=\"ri-close-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Cancelar</span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <hr className=\"border-gray-500 mt-3 mb-3\" />\r\n\r\n                    <div className=\"input-container mt-2 gap-1\">\r\n                        <b>RG: </b>\r\n                        <input className=\"check-edit hidden\" type=\"checkbox\" id=\"showRG\" onClick={() => setEditando(true)}></input>\r\n                        <Input mask=\"99.999.999-9\" label=\"Rg:\" name=\"rg\" hideLabel={true}\r\n                            onChange={e => setCandidatoForm({ ...candidatoForm, rg: e.target.value })}\r\n                            value={candidatoForm?.cpf!} placeholder={candidato.rg!}>\r\n                        </Input>\r\n                        <p>{candidato.rg}</p>\r\n\r\n                        <label className=\"input-editar ml-auto\" htmlFor=\"showRG\">\r\n                            <i className=\"ri-edit-2-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Editar</span>\r\n                        </label>\r\n                        <label className=\"input-salvar ml-auto\" htmlFor=\"showRG\">\r\n                            <i className=\"ri-check-fill\"></i>\r\n                            <input type=\"submit\" value=\"Salvar\"></input>\r\n                        </label>\r\n                        <label className=\"input-salvar\" htmlFor=\"showRG\">\r\n                            <i className=\"ri-close-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Cancelar</span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <hr className=\"border-gray-500 mt-3 mb-3\" />\r\n\r\n                    <div className=\"input-container mt-2 gap-1\">\r\n                        <b>Matrícula do SENAI: </b>\r\n                        <input className=\"check-edit hidden\" type=\"checkbox\" id=\"showNumMatricula\" onClick={() => setEditando(true)}></input>\r\n                        <Input mask=\"\" label=\"Matrícula:\" name=\"matrícula\" hideLabel={true}\r\n                            onChange={e => setCandidatoForm({ ...candidatoForm, matricula: e.target.value })}\r\n                            value={candidatoForm?.matricula!} placeholder={candidato.matricula!}>\r\n                        </Input>\r\n                        <p>{candidato.matricula}</p>\r\n\r\n                        <label className=\"input-editar ml-auto\" htmlFor=\"showNumMatricula\">\r\n                            <i className=\"ri-edit-2-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Editar</span>\r\n                        </label>\r\n                        <label className=\"input-salvar ml-auto\" htmlFor=\"showNumMatricula\">\r\n                            <i className=\"ri-check-fill\"></i>\r\n                            <input type=\"submit\" value=\"Salvar\"></input>\r\n                        </label>\r\n                        <label className=\"input-salvar\" htmlFor=\"showNumMatricula\">\r\n                            <i className=\"ri-close-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Cancelar</span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <hr className=\"border-gray-500 mt-3 mb-3\" />\r\n\r\n                    <div className=\"input-container mt-2 gap-1\">\r\n                        <b>Endereço: </b>\r\n                        <input className=\"check-edit hidden\" type=\"checkbox\" id=\"showEndereco\" onClick={() => setEditando(true)}></input>\r\n                        <Input mask=\"\" label=\"Endereço:\" name=\"endereço\" hideLabel={true}\r\n                            onChange={e => setCandidatoForm({ ...candidatoForm, idEnderecoNavigation: { cep: e.target.value } })}\r\n                            value={candidatoForm?.idEnderecoNavigation?.cep!} placeholder=\"Digite o cep...\">\r\n                        </Input>\r\n                        <p className=\"truncate break-all\" style={{ width: \"60%\" }}>{candidato.idEnderecoNavigation?.localCompleto}</p>\r\n\r\n                        <label className=\"input-editar ml-auto\" htmlFor=\"showEndereco\">\r\n                            <i className=\"ri-edit-2-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Editar</span>\r\n                        </label>\r\n                        <label className=\"input-salvar ml-auto\" htmlFor=\"showEndereco\">\r\n                            <i className=\"ri-check-fill\"></i>\r\n                            <input type=\"submit\" value=\"Salvar\"></input>\r\n                        </label>\r\n                        <label className=\"input-salvar\" htmlFor=\"showEndereco\">\r\n                            <i className=\"ri-close-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Cancelar</span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <hr className=\"border-gray-500 mt-3 mb-3\" />\r\n\r\n                    <div className=\"input-container mt-2 gap-1\">\r\n                        <b>Telefone: </b>\r\n                        <input className=\"check-edit hidden\" type=\"checkbox\" id=\"showTelefone\" onClick={() => setEditando(true)}></input>\r\n                        <Input mask=\"(99) 9999-9999\" label=\"Telefone:\" name=\"telefone\" hideLabel={true}\r\n                            onChange={e => setCandidatoForm({ ...candidatoForm, telefoneCandidato: e.target.value })}\r\n                            value={candidatoForm?.telefoneCandidato!} placeholder={candidato.telefoneCandidato!}>\r\n                        </Input>\r\n                        <p>{candidato.telefoneCandidato}</p>\r\n\r\n                        <label className=\"input-editar ml-auto\" htmlFor=\"showTelefone\">\r\n                            <i className=\"ri-edit-2-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Editar</span>\r\n                        </label>\r\n                        <label className=\"input-salvar ml-auto\" htmlFor=\"showTelefone\">\r\n                            <i className=\"ri-check-fill\"></i>\r\n                            <input type=\"submit\" value=\"Salvar\"></input>\r\n                        </label>\r\n                        <label className=\"input-salvar\" htmlFor=\"showTelefone\">\r\n                            <i className=\"ri-close-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Cancelar</span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <hr className=\"border-gray-500 mt-3 mb-3\" />\r\n\r\n                    <div className=\"input-container mt-2 gap-1\">\r\n                        <b>Celular: </b>\r\n                        <input className=\"check-edit hidden\" type=\"checkbox\" id=\"showCelular\" onClick={() => setEditando(true)}></input>\r\n                        <Input mask=\"(99) 99999-9999\" label=\"Celular:\" name=\"celular\" hideLabel={true}\r\n                            onChange={e => setCandidatoForm({ ...candidatoForm, celularCandidato: e.target.value })}\r\n                            value={candidatoForm?.celularCandidato!} placeholder={candidato.celularCandidato!}>\r\n                        </Input>\r\n                        <p>{candidato.celularCandidato}</p>\r\n\r\n                        <label className=\"input-editar ml-auto\" htmlFor=\"showCelular\">\r\n                            <i className=\"ri-edit-2-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Editar</span>\r\n                        </label>\r\n                        <label className=\"input-salvar ml-auto\" htmlFor=\"showCelular\">\r\n                            <i className=\"ri-check-fill\"></i>\r\n                            <input type=\"submit\" value=\"Salvar\"></input>\r\n                        </label>\r\n                        <label className=\"input-salvar\" htmlFor=\"showCelular\">\r\n                            <i className=\"ri-close-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Cancelar</span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <hr className=\"border-gray-500 mt-3 mb-3\" />\r\n\r\n                    <div className=\"input-container mt-2 gap-1\">\r\n                        <b>Formação acadêmica: </b>\r\n                        <input className=\"check-edit hidden\" type=\"checkbox\" id=\"showFormacao\" onClick={() => setEditando(true)}></input>\r\n                        <Input mask=\"\" label=\"Formação acadêmica:\" name=\"formação acadêmica\" hideLabel={true}\r\n                            onChange={e => setCandidatoForm({ ...candidatoForm, formacaoAcademica: e.target.value })}\r\n                            value={candidatoForm?.formacaoAcademica!} placeholder={candidato.formacaoAcademica!}>\r\n                        </Input>\r\n                        <p>{candidato.formacaoAcademica}</p>\r\n\r\n                        <label className=\"input-editar ml-auto\" htmlFor=\"showFormacao\">\r\n                            <i className=\"ri-edit-2-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Editar</span>\r\n                        </label>\r\n                        <label className=\"input-salvar ml-auto\" htmlFor=\"showFormacao\">\r\n                            <i className=\"ri-check-fill\"></i>\r\n                            <input type=\"submit\" value=\"Salvar\"></input>\r\n                        </label>\r\n                        <label className=\"input-salvar\" htmlFor=\"showFormacao\">\r\n                            <i className=\"ri-close-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Cancelar</span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <hr className=\"border-gray-500 mt-3 mb-3\" />\r\n\r\n                    <div className=\"input-container mt-2 gap-1\">\r\n                        <b>Curso: </b>\r\n                        <input className=\"check-edit hidden\" type=\"checkbox\" id=\"showCurso\" onClick={() => setEditando(true)}></input>\r\n                        <Input mask=\"\" label=\"Curso:\" name=\"curso\" hideLabel={true}\r\n                            onChange={e => setCandidatoForm({ ...candidatoForm, curso: e.target.value })}\r\n                            value={candidatoForm?.curso!} placeholder={candidato.curso!}>\r\n                        </Input>\r\n                        <p>{candidato.curso}</p>\r\n\r\n                        <label className=\"input-editar ml-auto\" htmlFor=\"showCurso\">\r\n                            <i className=\"ri-edit-2-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Editar</span>\r\n                        </label>\r\n                        <label className=\"input-salvar ml-auto\" htmlFor=\"showCurso\">\r\n                            <i className=\"ri-check-fill\"></i>\r\n                            <input type=\"submit\" value=\"Salvar\"></input>\r\n                        </label>\r\n                        <label className=\"input-salvar\" htmlFor=\"showCurso\">\r\n                            <i className=\"ri-close-line\"></i>\r\n                            <span className=\"cursor-pointer\"> Cancelar</span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <hr className=\"border-gray-500 mt-3 mb-3\" />\r\n\r\n                    <div className=\"flex items-end\">\r\n                        <Select className=\"w-full\" label=\"Adicionar abilidades:\" name=\"habilidade\"\r\n                            onChange={e => setIdHabilidade(parseInt(e.target.value))}\r\n                            value={idHabilidade} required>\r\n                            <option value=\"0\" selected>Selecione uma opção</option>\r\n                            {habilidades?.map((h: Habilidade) => {\r\n                                return (\r\n                                    <option value={h.idHabilidade}>{h.nomeHabilidade}</option>\r\n                                )\r\n                            })}\r\n                        </Select>\r\n                        <Button className=\"ri-add-line ml-2\" ghost={true}\r\n                            disabled={idHabilidade == 0}\r\n                            onClick={() => addHabilidade(idHabilidade)}>\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <div className=\"border-gray-500 mt-3 mb-3\" />\r\n\r\n                    <div className=\"flex flex-row flex-wrap\">\r\n                        {renderHabilidades()}\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-center mt-8\">\r\n                        <ButtonForm name=\"Concluir\" value=\"Salvar Alterações\"></ButtonForm>\r\n                    </div>\r\n                </form>\r\n\r\n            </main>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default EditarPerfilCandidato;","import React from 'react'\r\nimport { Redirect, Route, RouteComponentProps } from 'react-router-dom';\r\nimport { Jwt, usuarioAutenticado } from '../../services/auth';\r\n\r\ninterface Props {\r\n\tComponent: React.FC<RouteComponentProps>;\r\n\tpath: string;\r\n\texact?: boolean;\r\n\trequiredRole: number;\r\n}\r\nexport const AuthRoute = ({ Component, path, exact = false, requiredRole }: Props): JSX.Element => {\r\n\r\n\tconst roleValido = Jwt()?.Role == requiredRole;\r\n\treturn (\r\n\t\t<Route\r\n\t\t\texact={exact}\r\n\t\t\tpath={path}\r\n\t\t\tcomponent={(props: RouteComponentProps) =>\r\n\t\t\t\tusuarioAutenticado && roleValido ? (\r\n\t\t\t\t\t<Component {...props} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Redirect\r\n\t\t\t\t\t\tto={{\r\n                            pathname: \"/404\"\r\n                    }}/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport ADashboard from './pages/a-dashboard';\r\nimport AEmpresaGeral from './pages/empresa-resumo';\r\nimport AListaCandidato from './pages/a-gerenciamento-candidatos';\r\nimport VagasRecomendadas from './pages/vagas';\r\nimport ECadastrarVagas from './pages/e-cadastrar-vagas';\r\nimport ESuasVagas from './pages/e-suas-vagas';\r\nimport Home from './pages/home';\r\nimport Login from './pages/login';\r\nimport CHistoricoCandidaturas from './pages/c-historico-candidaturas';\r\nimport AGerenciarEmpresas from './pages/a-gerenciamento-empresas';\r\nimport EDashboard from './pages/e-dashboard';\r\nimport VerVaga from './pages/vaga';\r\nimport CadastroEmpresa from './pages/cadastro-empresa-passo1';\r\nimport CadastroCandidato from './pages/cadastro-candidato-passo1';\r\nimport CadastroDadosEmpresa from './pages/cadastro-empresa-passo2';\r\nimport CadastroDadosCandidato from './pages/cadastro-candidato-passo2';\r\nimport Cadastro from './pages/cadastro';\r\nimport EVisualizarVaga from './pages/e-vaga-candidaturas';\r\nimport EditarPerfilEmpresa from './pages/e-editar-perfil';\r\nimport EditarPerfilCandidato from './pages/c-editar-perfil';\r\nimport Erro from './pages/404';\r\nimport { Jwt } from './services/auth';\r\nimport { TipoUsuario } from './utils/enums';\r\nimport { AuthRoute } from './components/authRoute';\r\n\r\nfunction Routers() {\r\n    return (\r\n        <BrowserRouter>\r\n            {/* Switch é necessario para a página 404 não aparecer em todas páginas. */}\r\n            <Switch>\r\n                {/* Administrador */}\r\n                <AuthRoute path=\"/Administrador/dashboard\" exact\r\n                    Component={ADashboard} requiredRole={TipoUsuario.ADMINISTRADOR} />\r\n                <AuthRoute path=\"/Administrador/gerenciamento-candidatos\" exact\r\n                    Component={AListaCandidato} requiredRole={TipoUsuario.ADMINISTRADOR} />\r\n                <AuthRoute path=\"/Administrador/gerenciamento-empresas\" exact\r\n                    Component={AGerenciarEmpresas} requiredRole={TipoUsuario.ADMINISTRADOR} />\r\n\r\n                {/* Empresa */}\r\n                <AuthRoute path=\"/Empresa/dashboard\" exact\r\n                    Component={EDashboard} requiredRole={TipoUsuario.EMPRESA} />\r\n                <AuthRoute path=\"/Empresa/suas-vagas\" exact\r\n                    Component={ESuasVagas} requiredRole={TipoUsuario.EMPRESA} />\r\n                <AuthRoute path=\"/Empresa/cadastrar-vagas\" exact\r\n                    Component={ECadastrarVagas} requiredRole={TipoUsuario.EMPRESA} />\r\n                <AuthRoute path=\"/Empresa/editar-perfil\" exact\r\n                    Component={EditarPerfilEmpresa} requiredRole={TipoUsuario.EMPRESA} />\r\n                <AuthRoute path=\"/Empresa/visualizar-vaga\" exact\r\n                    Component={EVisualizarVaga} requiredRole={TipoUsuario.EMPRESA} />\r\n\r\n                {/* Candidato */}\r\n                <AuthRoute path=\"/Candidato/editar-perfil\" exact \r\n                    Component={EditarPerfilCandidato} requiredRole={TipoUsuario.CANDIDATO}/>\r\n                <AuthRoute path=\"/Candidato/historico-candidaturas\" exact \r\n                    Component={CHistoricoCandidaturas} requiredRole={TipoUsuario.CANDIDATO}/>\r\n\r\n                {/* Páginas dinâmicas */}\r\n                <Route path=\"/vaga/:id\" exact component={VerVaga} />\r\n                <Route path=\"/empresa/resumo/:id\" exact component={AEmpresaGeral} />\r\n\r\n                {/* Páginas genéricas */}\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/login\" exact component={Login} />\r\n                <Route path=\"/cadastro\" exact component={Cadastro} />\r\n                <Route path=\"/cadastro/empresa/passo-1\" exact component={CadastroEmpresa} />\r\n                <Route path=\"/cadastro/candidato/passo-1\" exact component={CadastroCandidato} />\r\n                <Route path=\"/cadastro/empresa/passo-2\" exact component={CadastroDadosEmpresa} />\r\n                <Route path=\"/cadastro/candidato/passo-2\" exact component={CadastroDadosCandidato} />\r\n                <Route path=\"/vagas\" exact component={VagasRecomendadas} />\r\n                <Route exact component={Erro} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routers;","import React from 'react';\r\nimport Routers from './routers';\r\nimport AlertTemplate from \"react-alert-template-basic\";\r\nimport { positions, Provider } from \"react-alert\";\r\nimport './assets/styles/overrides.css';\r\nimport './assets/styles/global.css';\r\nimport './assets/styles/tailwind.css';\r\n\r\nconst options = {\r\n  timeout: 5000,\r\n  position: positions.BOTTOM_CENTER,\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider template={AlertTemplate} {...options}>\r\n      <div id=\"root\" className=\"App\">\r\n        <Routers></Routers>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);","module.exports = __webpack_public_path__ + \"static/media/logo-senai-principal.5ee1460a.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-dark.98f49b91.png\";","module.exports = __webpack_public_path__ + \"static/media/erro.1a5c38e3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-13@1x.405513d6.jpg\";"],"sourceRoot":""}